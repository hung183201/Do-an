/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.1.0 (NJsonSchema v10.3.3.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

import { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';
import { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';
import { Injectable, Inject, Optional, InjectionToken } from '@angular/core';
import { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';

export const API_LPM_BASE_URL = new InjectionToken<string>('API_LPM_BASE_URL');

export interface IActivitiClient {
    /**
     * Lấy ảnh tiến trình xử lý trong quy trình từ định nghĩa
     * @param processDefinitionId (optional) 
     */
    getImageResourceFromProcessDefinition(processDefinitionId: string | null | undefined): Observable<string>;
    /**
     * Lấy ảnh tiến trình xử lý trong quy trình từ instance
     * @param processInstanceId (optional) 
     */
    getImageResourceFromProcessInstance(processInstanceId: string | null | undefined): Observable<string>;
    /**
     * Deploy quy trình
     * @param quytrinhId (optional) 
     */
    deployProcess(quytrinhId: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Huy Deploy quy trình
     * @param quytrinhId (optional) 
     */
    deleteDeployment(quytrinhId: string | null | undefined): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class ActivitiClient implements IActivitiClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy ảnh tiến trình xử lý trong quy trình từ định nghĩa
     * @param processDefinitionId (optional) 
     */
    getImageResourceFromProcessDefinition(processDefinitionId: string | null | undefined): Observable<string> {
        let url_ = this.baseUrl + "/api/Activiti/GetImageResourceFromProcessDefinition?";
        if (processDefinitionId !== undefined && processDefinitionId !== null)
            url_ += "processDefinitionId=" + encodeURIComponent("" + processDefinitionId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetImageResourceFromProcessDefinition(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetImageResourceFromProcessDefinition(<any>response_);
                } catch (e) {
                    return <Observable<string>><any>_observableThrow(e);
                }
            } else
                return <Observable<string>><any>_observableThrow(response_);
        }));
    }

    protected processGetImageResourceFromProcessDefinition(response: HttpResponseBase): Observable<string> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<string>(<any>null);
    }

    /**
     * Lấy ảnh tiến trình xử lý trong quy trình từ instance
     * @param processInstanceId (optional) 
     */
    getImageResourceFromProcessInstance(processInstanceId: string | null | undefined): Observable<string> {
        let url_ = this.baseUrl + "/api/Activiti/GetImageResourceFromProcessInstance?";
        if (processInstanceId !== undefined && processInstanceId !== null)
            url_ += "processInstanceId=" + encodeURIComponent("" + processInstanceId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetImageResourceFromProcessInstance(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetImageResourceFromProcessInstance(<any>response_);
                } catch (e) {
                    return <Observable<string>><any>_observableThrow(e);
                }
            } else
                return <Observable<string>><any>_observableThrow(response_);
        }));
    }

    protected processGetImageResourceFromProcessInstance(response: HttpResponseBase): Observable<string> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<string>(<any>null);
    }

    /**
     * Deploy quy trình
     * @param quytrinhId (optional) 
     */
    deployProcess(quytrinhId: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/Activiti/DeployProcess?";
        if (quytrinhId !== undefined && quytrinhId !== null)
            url_ += "quytrinhId=" + encodeURIComponent("" + quytrinhId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeployProcess(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeployProcess(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDeployProcess(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Huy Deploy quy trình
     * @param quytrinhId (optional) 
     */
    deleteDeployment(quytrinhId: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/Activiti/DeleteDeployment?";
        if (quytrinhId !== undefined && quytrinhId !== null)
            url_ += "quytrinhId=" + encodeURIComponent("" + quytrinhId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteDeployment(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteDeployment(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteDeployment(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IBuocClient {
    /**
     * Lấy thông tin bước theo id bước
     * @param id Id bước
     */
    getById(id: string | null): Observable<ApiResultOfBuoc>;
    /**
     * Lấy thông tin cấu hình cho bước theo id bước và trạng thái hồ sơ.
     */
    getAllCauHinhByIdBuoc(idBuoc: string | null, trangThaiHoSo: number): Observable<ApiResultOfIListOfCauHinhBuocViewModel>;
    /**
     * Lấy thông tin đã cấu hình cho bước theo id bước
     */
    getAllCauHinhBuocByIdBuoc(idBuoc: string | null): Observable<ApiResultOfIListOfCauHinhBuocViewModel>;
    /**
     * Tìm kiếm bước
     */
    search(request: BuocRequest): Observable<ApiResultOfPagedListOfBuoc>;
    /**
     * Lấy chi tiết thông tin Gateway phía sau của bước hiện tại
     * @param idBuoc (optional) Id của bước hiện tại
     * @param idHoSo (optional) Id của hồ sơ
     */
    getGatewaysTasksSauBuoc(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfIListOfGatewayTaskModel>;
    /**
     * Lấy chi tiết thông tin Gateway phía sau của bước hiện tại theo cấu hình
     * @param idBuoc (optional) Id của bước hiện tại
     * @param idDvhc (optional) 
     */
    getGatewaysTasksSauBuocTheoCauHinh(idBuoc: string | null | undefined, idDvhc: string | null | undefined): Observable<ApiResultOfIListOfGatewayTaskModel>;
    /**
     * Cấu hình cập nhật hàng loạt thời gian thực hiện, mã form, trạng thái hồ sơ cho danh sách bước thuộc một quy trình
     */
    cauHinhBuocThuocQuyTrinh(request: BuocViewModel[]): Observable<ApiResultOfBoolean>;
    /**
     * Lấy toàn bộ bước thuộc quy trình, thủ tục, lĩnh vực
     */
    getDanhSachBuocQuyTrinh(): Observable<ApiResultOfIListOfBuocQuyTrinhViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class BuocClient implements IBuocClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy thông tin bước theo id bước
     * @param id Id bước
     */
    getById(id: string | null): Observable<ApiResultOfBuoc> {
        let url_ = this.baseUrl + "/api/Buoc/GetById/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBuoc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBuoc>><any>_observableThrow(response_);
        }));
    }

    protected processGetById(response: HttpResponseBase): Observable<ApiResultOfBuoc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBuoc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBuoc>(<any>null);
    }

    /**
     * Lấy thông tin cấu hình cho bước theo id bước và trạng thái hồ sơ.
     */
    getAllCauHinhByIdBuoc(idBuoc: string | null, trangThaiHoSo: number): Observable<ApiResultOfIListOfCauHinhBuocViewModel> {
        let url_ = this.baseUrl + "/api/Buoc/GetAllCauHinhByIdBuoc/{idBuoc}/{trangThaiHoSo}";
        if (idBuoc === undefined || idBuoc === null)
            throw new Error("The parameter 'idBuoc' must be defined.");
        url_ = url_.replace("{idBuoc}", encodeURIComponent("" + idBuoc));
        if (trangThaiHoSo === undefined || trangThaiHoSo === null)
            throw new Error("The parameter 'trangThaiHoSo' must be defined.");
        url_ = url_.replace("{trangThaiHoSo}", encodeURIComponent("" + trangThaiHoSo));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllCauHinhByIdBuoc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllCauHinhByIdBuoc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCauHinhBuocViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCauHinhBuocViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllCauHinhByIdBuoc(response: HttpResponseBase): Observable<ApiResultOfIListOfCauHinhBuocViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCauHinhBuocViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCauHinhBuocViewModel>(<any>null);
    }

    /**
     * Lấy thông tin đã cấu hình cho bước theo id bước
     */
    getAllCauHinhBuocByIdBuoc(idBuoc: string | null): Observable<ApiResultOfIListOfCauHinhBuocViewModel> {
        let url_ = this.baseUrl + "/api/Buoc/GetAllCauHinhBuocByIdBuoc/{idBuoc}";
        if (idBuoc === undefined || idBuoc === null)
            throw new Error("The parameter 'idBuoc' must be defined.");
        url_ = url_.replace("{idBuoc}", encodeURIComponent("" + idBuoc));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllCauHinhBuocByIdBuoc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllCauHinhBuocByIdBuoc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCauHinhBuocViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCauHinhBuocViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllCauHinhBuocByIdBuoc(response: HttpResponseBase): Observable<ApiResultOfIListOfCauHinhBuocViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCauHinhBuocViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCauHinhBuocViewModel>(<any>null);
    }

    /**
     * Tìm kiếm bước
     */
    search(request: BuocRequest): Observable<ApiResultOfPagedListOfBuoc> {
        let url_ = this.baseUrl + "/api/Buoc/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfBuoc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfBuoc>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfBuoc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfBuoc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfBuoc>(<any>null);
    }

    /**
     * Lấy chi tiết thông tin Gateway phía sau của bước hiện tại
     * @param idBuoc (optional) Id của bước hiện tại
     * @param idHoSo (optional) Id của hồ sơ
     */
    getGatewaysTasksSauBuoc(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfIListOfGatewayTaskModel> {
        let url_ = this.baseUrl + "/api/Buoc/GetGatewaysTasksSauBuoc?";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "idBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetGatewaysTasksSauBuoc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetGatewaysTasksSauBuoc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGatewayTaskModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGatewayTaskModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetGatewaysTasksSauBuoc(response: HttpResponseBase): Observable<ApiResultOfIListOfGatewayTaskModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGatewayTaskModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGatewayTaskModel>(<any>null);
    }

    /**
     * Lấy chi tiết thông tin Gateway phía sau của bước hiện tại theo cấu hình
     * @param idBuoc (optional) Id của bước hiện tại
     * @param idDvhc (optional) 
     */
    getGatewaysTasksSauBuocTheoCauHinh(idBuoc: string | null | undefined, idDvhc: string | null | undefined): Observable<ApiResultOfIListOfGatewayTaskModel> {
        let url_ = this.baseUrl + "/api/Buoc/GetGatewaysTasksSauBuocTheoCauHinh?";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "idBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        if (idDvhc !== undefined && idDvhc !== null)
            url_ += "idDvhc=" + encodeURIComponent("" + idDvhc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetGatewaysTasksSauBuocTheoCauHinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetGatewaysTasksSauBuocTheoCauHinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGatewayTaskModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGatewayTaskModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetGatewaysTasksSauBuocTheoCauHinh(response: HttpResponseBase): Observable<ApiResultOfIListOfGatewayTaskModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGatewayTaskModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGatewayTaskModel>(<any>null);
    }

    /**
     * Cấu hình cập nhật hàng loạt thời gian thực hiện, mã form, trạng thái hồ sơ cho danh sách bước thuộc một quy trình
     */
    cauHinhBuocThuocQuyTrinh(request: BuocViewModel[]): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/Buoc/CauHinhBuocThuocQuyTrinh";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCauHinhBuocThuocQuyTrinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCauHinhBuocThuocQuyTrinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCauHinhBuocThuocQuyTrinh(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy toàn bộ bước thuộc quy trình, thủ tục, lĩnh vực
     */
    getDanhSachBuocQuyTrinh(): Observable<ApiResultOfIListOfBuocQuyTrinhViewModel> {
        let url_ = this.baseUrl + "/api/Buoc/GetDanhSachBuocQuyTrinh";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachBuocQuyTrinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachBuocQuyTrinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBuocQuyTrinhViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBuocQuyTrinhViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachBuocQuyTrinh(response: HttpResponseBase): Observable<ApiResultOfIListOfBuocQuyTrinhViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBuocQuyTrinhViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBuocQuyTrinhViewModel>(<any>null);
    }
}

export interface IBuocXuLyHoSoClient {
    /**
     * Thêm ý kiến xử lý
     */
    themYKienXuLy(command: ThemYKienXuLyCommand): Observable<ApiResultOfListOfFileBuocXuLyVm>;
    xoaYKienXuLy(command: XoaYKienXuLyCommand): Observable<ApiResultOfBoolean>;
    getYKienXuLyByIdHoSo(request: GetYKienXuLyByIdHoSoQuery): Observable<ApiResultOfIListOfGetYKienXuLyByIdHoSoDto>;
    /**
     * Lấy các bước đã/đang xử lý cho một hồ sơ
     */
    getBuocXuLyByIdHoSo(request: GetBuocXuLyByIdHoSoQuery): Observable<ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto>;
    /**
     * Lấy bước xử lý hiện tại gần nhất (nếu hồ sơ đã hoàn thành thì lấy bước có thời gian cập nhật gần nhất)
     * @param idHoSo (optional) 
     */
    getBuocXuLyGanNhat(idHoSo: string | null | undefined): Observable<ApiResultOfGetBuocXuLyGanNhatDto>;
    capNhatGiaTriCauHinhBuocXuLy(request: GiaTriCauHinhCommand): Observable<ApiResultOfBoolean>;
    /**
     * Lấy thông tin chi tiết bước xử lý của hồ sơ
     */
    getBuocXuLyById(request: GetBuocXuLyByIdQuery): Observable<ApiResultOfGetBuocXuLyByIdDto>;
    /**
     * Tìm kiếm bước xử lý theo các tiêu chí khác nhau, có phân trang
     */
    search(request: SearchBuocXuLyQuery): Observable<ApiResultOfPagedListOfSearchBuocXuLyDto>;
    /**
     * Lấy danh sách bước xử lý hiện tại của người dùng
     */
    getDsBuocXuLyHienTaiByCurrentUser(): Observable<ApiResultOfIListOfBuocXuLyHienTaiViewModel>;
    /**
     * Lấy danh sách bước xử lý hiện tại cần xử lý hàng loạt
     */
    searchDsCongViecCanXuLyHangLoat(query: SearchDsCongViecCanXuLyHangLoatQuery): Observable<ApiResultOfPagedListOfBuocXuLyHangLoatViewModel>;
    /**
     * Chi tiet Bao cao cong viec theo chuyen vien
     */
    chiTietBaoCaoGiaiQuyetCongViecTheoChuyenVien(query: ChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery): Observable<ApiResultOfPagedListOfSearchBuocXuLyDto>;
}

@Injectable({
    providedIn: 'root'
})
export class BuocXuLyHoSoClient implements IBuocXuLyHoSoClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm ý kiến xử lý
     */
    themYKienXuLy(command: ThemYKienXuLyCommand): Observable<ApiResultOfListOfFileBuocXuLyVm> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/ThemYKienXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processThemYKienXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processThemYKienXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfFileBuocXuLyVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfFileBuocXuLyVm>><any>_observableThrow(response_);
        }));
    }

    protected processThemYKienXuLy(response: HttpResponseBase): Observable<ApiResultOfListOfFileBuocXuLyVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfFileBuocXuLyVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfFileBuocXuLyVm>(<any>null);
    }

    xoaYKienXuLy(command: XoaYKienXuLyCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/XoaYKienXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processXoaYKienXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processXoaYKienXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processXoaYKienXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    getYKienXuLyByIdHoSo(request: GetYKienXuLyByIdHoSoQuery): Observable<ApiResultOfIListOfGetYKienXuLyByIdHoSoDto> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/GetYKienXuLyByIdHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetYKienXuLyByIdHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetYKienXuLyByIdHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetYKienXuLyByIdHoSoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetYKienXuLyByIdHoSoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetYKienXuLyByIdHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfGetYKienXuLyByIdHoSoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetYKienXuLyByIdHoSoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetYKienXuLyByIdHoSoDto>(<any>null);
    }

    /**
     * Lấy các bước đã/đang xử lý cho một hồ sơ
     */
    getBuocXuLyByIdHoSo(request: GetBuocXuLyByIdHoSoQuery): Observable<ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/GetBuocXuLyByIdHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetBuocXuLyByIdHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetBuocXuLyByIdHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetBuocXuLyByIdHoSo(response: HttpResponseBase): Observable<ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto>(<any>null);
    }

    /**
     * Lấy bước xử lý hiện tại gần nhất (nếu hồ sơ đã hoàn thành thì lấy bước có thời gian cập nhật gần nhất)
     * @param idHoSo (optional) 
     */
    getBuocXuLyGanNhat(idHoSo: string | null | undefined): Observable<ApiResultOfGetBuocXuLyGanNhatDto> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/GetBuocXuLyGanNhat?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetBuocXuLyGanNhat(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetBuocXuLyGanNhat(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfGetBuocXuLyGanNhatDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfGetBuocXuLyGanNhatDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetBuocXuLyGanNhat(response: HttpResponseBase): Observable<ApiResultOfGetBuocXuLyGanNhatDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfGetBuocXuLyGanNhatDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfGetBuocXuLyGanNhatDto>(<any>null);
    }

    capNhatGiaTriCauHinhBuocXuLy(request: GiaTriCauHinhCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/CapNhatGiaTriCauHinhBuocXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatGiaTriCauHinhBuocXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatGiaTriCauHinhBuocXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatGiaTriCauHinhBuocXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy thông tin chi tiết bước xử lý của hồ sơ
     */
    getBuocXuLyById(request: GetBuocXuLyByIdQuery): Observable<ApiResultOfGetBuocXuLyByIdDto> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/GetBuocXuLyById";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetBuocXuLyById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetBuocXuLyById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfGetBuocXuLyByIdDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfGetBuocXuLyByIdDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetBuocXuLyById(response: HttpResponseBase): Observable<ApiResultOfGetBuocXuLyByIdDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfGetBuocXuLyByIdDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfGetBuocXuLyByIdDto>(<any>null);
    }

    /**
     * Tìm kiếm bước xử lý theo các tiêu chí khác nhau, có phân trang
     */
    search(request: SearchBuocXuLyQuery): Observable<ApiResultOfPagedListOfSearchBuocXuLyDto> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchBuocXuLyDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchBuocXuLyDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchBuocXuLyDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchBuocXuLyDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchBuocXuLyDto>(<any>null);
    }

    /**
     * Lấy danh sách bước xử lý hiện tại của người dùng
     */
    getDsBuocXuLyHienTaiByCurrentUser(): Observable<ApiResultOfIListOfBuocXuLyHienTaiViewModel> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/GetDsBuocXuLyHienTaiByCurrentUser";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDsBuocXuLyHienTaiByCurrentUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDsBuocXuLyHienTaiByCurrentUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBuocXuLyHienTaiViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBuocXuLyHienTaiViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDsBuocXuLyHienTaiByCurrentUser(response: HttpResponseBase): Observable<ApiResultOfIListOfBuocXuLyHienTaiViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBuocXuLyHienTaiViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBuocXuLyHienTaiViewModel>(<any>null);
    }

    /**
     * Lấy danh sách bước xử lý hiện tại cần xử lý hàng loạt
     */
    searchDsCongViecCanXuLyHangLoat(query: SearchDsCongViecCanXuLyHangLoatQuery): Observable<ApiResultOfPagedListOfBuocXuLyHangLoatViewModel> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/SearchDsCongViecCanXuLyHangLoat";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(query);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchDsCongViecCanXuLyHangLoat(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchDsCongViecCanXuLyHangLoat(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfBuocXuLyHangLoatViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfBuocXuLyHangLoatViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processSearchDsCongViecCanXuLyHangLoat(response: HttpResponseBase): Observable<ApiResultOfPagedListOfBuocXuLyHangLoatViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfBuocXuLyHangLoatViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfBuocXuLyHangLoatViewModel>(<any>null);
    }

    /**
     * Chi tiet Bao cao cong viec theo chuyen vien
     */
    chiTietBaoCaoGiaiQuyetCongViecTheoChuyenVien(query: ChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery): Observable<ApiResultOfPagedListOfSearchBuocXuLyDto> {
        let url_ = this.baseUrl + "/api/BuocXuLyHoSo/ChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVien";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(query);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVien(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVien(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchBuocXuLyDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchBuocXuLyDto>><any>_observableThrow(response_);
        }));
    }

    protected processChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVien(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchBuocXuLyDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchBuocXuLyDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchBuocXuLyDto>(<any>null);
    }
}

export interface ICadasHoSoQuetClient {
    /**
     * Truy vấn danh sách loại tài liệu
     * @param idDvhc (optional) 
     */
    getLoaiTaiLieu(idDvhc: string | null | undefined): Observable<ApiResultOfListOfGetLoaiTaiLieuDto>;
    /**
     * Tạo hồ sơ quét lên cadas
     */
    taoHoSoQuetCadas(hoSoQuetCommand: CreateHoSoQuetCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class CadasHoSoQuetClient implements ICadasHoSoQuetClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Truy vấn danh sách loại tài liệu
     * @param idDvhc (optional) 
     */
    getLoaiTaiLieu(idDvhc: string | null | undefined): Observable<ApiResultOfListOfGetLoaiTaiLieuDto> {
        let url_ = this.baseUrl + "/api/CadasHoSoQuet/GetLoaiTaiLieu?";
        if (idDvhc !== undefined && idDvhc !== null)
            url_ += "IdDvhc=" + encodeURIComponent("" + idDvhc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetLoaiTaiLieu(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetLoaiTaiLieu(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfGetLoaiTaiLieuDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfGetLoaiTaiLieuDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetLoaiTaiLieu(response: HttpResponseBase): Observable<ApiResultOfListOfGetLoaiTaiLieuDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfGetLoaiTaiLieuDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfGetLoaiTaiLieuDto>(<any>null);
    }

    /**
     * Tạo hồ sơ quét lên cadas
     */
    taoHoSoQuetCadas(hoSoQuetCommand: CreateHoSoQuetCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/CadasHoSoQuet/TaoHoSoQuetCadas";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(hoSoQuetCommand);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTaoHoSoQuetCadas(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTaoHoSoQuetCadas(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTaoHoSoQuetCadas(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface ICauHinhPhanCongClient {
    /**
     * Thêm cấu hình phân công
     */
    createCauHinhPhanCong(command: CreateCauHinhPhanCongCommand): Observable<ApiResultOfCauHinhPhanCongVm>;
    /**
     * Thêm cấu hình phân công cho 1 bước
     */
    createCauHinhPhanCongBuoc(command: CreateCauHinhPhanCongBuocCommand): Observable<ApiResultOfCauHinhPhanCongBuocVm>;
    /**
     * Sửa cấu hình phân công
     */
    editCauHinhPhanCong(command: EditCauHinhPhanCongCommand): Observable<ApiResultOfBoolean>;
    /**
     * Xóa cấu hình phân công
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm cấu hình phân công
     */
    search(request: SearchCauHinhPhanCongListQuery): Observable<ApiResultOfPagedListOfSearchCauHinhPhanCongDto>;
    /**
     * Tìm kiếm quy trình/đvhc chưa phân công.
     */
    searchDanhSachQuyTrinhChuaPhanCong(request: SearchDanhSachQuyTrinhChuaPhanCongQuery): Observable<ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto>;
    /**
     * Kiểm tra có cho phép thay đổi đơn vị hành chính trong quy trình hay không
     */
    allowChangeDvhc(idQuyTrinh: string | null, idDvhcHienTai: string | null, idDvhcMoi: string | null): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class CauHinhPhanCongClient implements ICauHinhPhanCongClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm cấu hình phân công
     */
    createCauHinhPhanCong(command: CreateCauHinhPhanCongCommand): Observable<ApiResultOfCauHinhPhanCongVm> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/CreateCauHinhPhanCong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCreateCauHinhPhanCong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCreateCauHinhPhanCong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfCauHinhPhanCongVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfCauHinhPhanCongVm>><any>_observableThrow(response_);
        }));
    }

    protected processCreateCauHinhPhanCong(response: HttpResponseBase): Observable<ApiResultOfCauHinhPhanCongVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfCauHinhPhanCongVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfCauHinhPhanCongVm>(<any>null);
    }

    /**
     * Thêm cấu hình phân công cho 1 bước
     */
    createCauHinhPhanCongBuoc(command: CreateCauHinhPhanCongBuocCommand): Observable<ApiResultOfCauHinhPhanCongBuocVm> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/CreateCauHinhPhanCongBuoc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCreateCauHinhPhanCongBuoc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCreateCauHinhPhanCongBuoc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfCauHinhPhanCongBuocVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfCauHinhPhanCongBuocVm>><any>_observableThrow(response_);
        }));
    }

    protected processCreateCauHinhPhanCongBuoc(response: HttpResponseBase): Observable<ApiResultOfCauHinhPhanCongBuocVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfCauHinhPhanCongBuocVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfCauHinhPhanCongBuocVm>(<any>null);
    }

    /**
     * Sửa cấu hình phân công
     */
    editCauHinhPhanCong(command: EditCauHinhPhanCongCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/EditCauHinhPhanCong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEditCauHinhPhanCong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEditCauHinhPhanCong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processEditCauHinhPhanCong(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Xóa cấu hình phân công
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm cấu hình phân công
     */
    search(request: SearchCauHinhPhanCongListQuery): Observable<ApiResultOfPagedListOfSearchCauHinhPhanCongDto> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchCauHinhPhanCongDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchCauHinhPhanCongDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchCauHinhPhanCongDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchCauHinhPhanCongDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchCauHinhPhanCongDto>(<any>null);
    }

    /**
     * Tìm kiếm quy trình/đvhc chưa phân công.
     */
    searchDanhSachQuyTrinhChuaPhanCong(request: SearchDanhSachQuyTrinhChuaPhanCongQuery): Observable<ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/SearchDanhSachQuyTrinhChuaPhanCong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchDanhSachQuyTrinhChuaPhanCong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchDanhSachQuyTrinhChuaPhanCong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchDanhSachQuyTrinhChuaPhanCong(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto>(<any>null);
    }

    /**
     * Kiểm tra có cho phép thay đổi đơn vị hành chính trong quy trình hay không
     */
    allowChangeDvhc(idQuyTrinh: string | null, idDvhcHienTai: string | null, idDvhcMoi: string | null): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/CauHinhPhanCong/AllowChangeDvhc/{idQuyTrinh}/{idDvhcHienTai}/{idDvhcMoi}";
        if (idQuyTrinh === undefined || idQuyTrinh === null)
            throw new Error("The parameter 'idQuyTrinh' must be defined.");
        url_ = url_.replace("{idQuyTrinh}", encodeURIComponent("" + idQuyTrinh));
        if (idDvhcHienTai === undefined || idDvhcHienTai === null)
            throw new Error("The parameter 'idDvhcHienTai' must be defined.");
        url_ = url_.replace("{idDvhcHienTai}", encodeURIComponent("" + idDvhcHienTai));
        if (idDvhcMoi === undefined || idDvhcMoi === null)
            throw new Error("The parameter 'idDvhcMoi' must be defined.");
        url_ = url_.replace("{idDvhcMoi}", encodeURIComponent("" + idDvhcMoi));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAllowChangeDvhc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAllowChangeDvhc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processAllowChangeDvhc(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface ICommonClient {
    /**
     * Thống kê: Tổng số hồ sơ, số hồ sơ đang xử lý, số lượng quá hạn
     * @param dvhc (optional) Mã đơn vị hành chính
     */
    getDataByModuleName(dvhc: string | null | undefined, moduleName: string | null): Observable<LpmDataDto[]>;
    getDataCoordinateByObjkey(objKey: number | undefined, maDvhc: string | null | undefined, pageSize: number | undefined, pageNumber: number | undefined, orderColumn: string | null | undefined, orderValue: boolean | undefined, keyword: string | null | undefined): Observable<ChiTietLpmDataDto>;
}

@Injectable({
    providedIn: 'root'
})
export class CommonClient implements ICommonClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thống kê: Tổng số hồ sơ, số hồ sơ đang xử lý, số lượng quá hạn
     * @param dvhc (optional) Mã đơn vị hành chính
     */
    getDataByModuleName(dvhc: string | null | undefined, moduleName: string | null): Observable<LpmDataDto[]> {
        let url_ = this.baseUrl + "/api/Common/public/get-data-by-module-name/{moduleName}?";
        if (moduleName === undefined || moduleName === null)
            throw new Error("The parameter 'moduleName' must be defined.");
        url_ = url_.replace("{moduleName}", encodeURIComponent("" + moduleName));
        if (dvhc !== undefined && dvhc !== null)
            url_ += "dvhc=" + encodeURIComponent("" + dvhc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDataByModuleName(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDataByModuleName(<any>response_);
                } catch (e) {
                    return <Observable<LpmDataDto[]>><any>_observableThrow(e);
                }
            } else
                return <Observable<LpmDataDto[]>><any>_observableThrow(response_);
        }));
    }

    protected processGetDataByModuleName(response: HttpResponseBase): Observable<LpmDataDto[]> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            if (Array.isArray(resultData200)) {
                result200 = [] as any;
                for (let item of resultData200)
                    result200!.push(LpmDataDto.fromJS(item));
            }
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<LpmDataDto[]>(<any>null);
    }

    getDataCoordinateByObjkey(objKey: number | undefined, maDvhc: string | null | undefined, pageSize: number | undefined, pageNumber: number | undefined, orderColumn: string | null | undefined, orderValue: boolean | undefined, keyword: string | null | undefined): Observable<ChiTietLpmDataDto> {
        let url_ = this.baseUrl + "/api/Common/public/get-data-coordinate-by-objkey?";
        if (objKey === null)
            throw new Error("The parameter 'objKey' cannot be null.");
        else if (objKey !== undefined)
            url_ += "objKey=" + encodeURIComponent("" + objKey) + "&";
        if (maDvhc !== undefined && maDvhc !== null)
            url_ += "maDvhc=" + encodeURIComponent("" + maDvhc) + "&";
        if (pageSize === null)
            throw new Error("The parameter 'pageSize' cannot be null.");
        else if (pageSize !== undefined)
            url_ += "pageSize=" + encodeURIComponent("" + pageSize) + "&";
        if (pageNumber === null)
            throw new Error("The parameter 'pageNumber' cannot be null.");
        else if (pageNumber !== undefined)
            url_ += "pageNumber=" + encodeURIComponent("" + pageNumber) + "&";
        if (orderColumn !== undefined && orderColumn !== null)
            url_ += "orderColumn=" + encodeURIComponent("" + orderColumn) + "&";
        if (orderValue === null)
            throw new Error("The parameter 'orderValue' cannot be null.");
        else if (orderValue !== undefined)
            url_ += "orderValue=" + encodeURIComponent("" + orderValue) + "&";
        if (keyword !== undefined && keyword !== null)
            url_ += "keyword=" + encodeURIComponent("" + keyword) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDataCoordinateByObjkey(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDataCoordinateByObjkey(<any>response_);
                } catch (e) {
                    return <Observable<ChiTietLpmDataDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ChiTietLpmDataDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDataCoordinateByObjkey(response: HttpResponseBase): Observable<ChiTietLpmDataDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ChiTietLpmDataDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ChiTietLpmDataDto>(<any>null);
    }
}

export interface IDanhMucDatDaiClient {
    /**
     * Lấy toàn bộ danh mục đất đai đang active theo danh sách loại danh mục (đang sử dụng)
     * @param listLoaiDanhMucDatDai (optional) 
     */
    getActiveByListType(listLoaiDanhMucDatDai: string | null | undefined): Observable<ApiResultOfIListOfDanhMucDatDai>;
    /**
     * Lấy toàn bộ danh mục đất đai đang active theo danh sách mã danh mục (đang sử dụng)
     * @param listMaDanhMuc (optional) 
     */
    getByListMaDanhMuc(listMaDanhMuc: string | null | undefined): Observable<ApiResultOfIListOfDanhMucDatDai>;
    getMaDanhMucDatDaiTheoMa(maDanhMuc: string | null | undefined, loaiDanhMuc: LoaiDanhMucDatDai | undefined): Observable<ApiResultOfDanhMucDatDaiDto>;
}

@Injectable({
    providedIn: 'root'
})
export class DanhMucDatDaiClient implements IDanhMucDatDaiClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ danh mục đất đai đang active theo danh sách loại danh mục (đang sử dụng)
     * @param listLoaiDanhMucDatDai (optional) 
     */
    getActiveByListType(listLoaiDanhMucDatDai: string | null | undefined): Observable<ApiResultOfIListOfDanhMucDatDai> {
        let url_ = this.baseUrl + "/api/DanhMucDatDai/GetActiveByListType?";
        if (listLoaiDanhMucDatDai !== undefined && listLoaiDanhMucDatDai !== null)
            url_ += "listLoaiDanhMucDatDai=" + encodeURIComponent("" + listLoaiDanhMucDatDai) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetActiveByListType(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetActiveByListType(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDanhMucDatDai>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDanhMucDatDai>><any>_observableThrow(response_);
        }));
    }

    protected processGetActiveByListType(response: HttpResponseBase): Observable<ApiResultOfIListOfDanhMucDatDai> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDanhMucDatDai.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDanhMucDatDai>(<any>null);
    }

    /**
     * Lấy toàn bộ danh mục đất đai đang active theo danh sách mã danh mục (đang sử dụng)
     * @param listMaDanhMuc (optional) 
     */
    getByListMaDanhMuc(listMaDanhMuc: string | null | undefined): Observable<ApiResultOfIListOfDanhMucDatDai> {
        let url_ = this.baseUrl + "/api/DanhMucDatDai/GetByListMaDanhMuc?";
        if (listMaDanhMuc !== undefined && listMaDanhMuc !== null)
            url_ += "listMaDanhMuc=" + encodeURIComponent("" + listMaDanhMuc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetByListMaDanhMuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetByListMaDanhMuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDanhMucDatDai>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDanhMucDatDai>><any>_observableThrow(response_);
        }));
    }

    protected processGetByListMaDanhMuc(response: HttpResponseBase): Observable<ApiResultOfIListOfDanhMucDatDai> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDanhMucDatDai.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDanhMucDatDai>(<any>null);
    }

    getMaDanhMucDatDaiTheoMa(maDanhMuc: string | null | undefined, loaiDanhMuc: LoaiDanhMucDatDai | undefined): Observable<ApiResultOfDanhMucDatDaiDto> {
        let url_ = this.baseUrl + "/api/DanhMucDatDai/GetMaDanhMucDatDaiTheoMa?";
        if (maDanhMuc !== undefined && maDanhMuc !== null)
            url_ += "maDanhMuc=" + encodeURIComponent("" + maDanhMuc) + "&";
        if (loaiDanhMuc === null)
            throw new Error("The parameter 'loaiDanhMuc' cannot be null.");
        else if (loaiDanhMuc !== undefined)
            url_ += "loaiDanhMuc=" + encodeURIComponent("" + loaiDanhMuc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetMaDanhMucDatDaiTheoMa(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetMaDanhMucDatDaiTheoMa(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfDanhMucDatDaiDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfDanhMucDatDaiDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetMaDanhMucDatDaiTheoMa(response: HttpResponseBase): Observable<ApiResultOfDanhMucDatDaiDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfDanhMucDatDaiDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfDanhMucDatDaiDto>(<any>null);
    }
}

export interface IDashboardClient {
    /**
     * Thống kê: Số lượng hồ sơ nhận/trả (biểu đồ cột)
     */
    getThongKeSoLuongHoSoNhanTra(request: GetDataThongKeSoLuongHoSoNhanTraQuery): Observable<ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto>;
    /**
     * Thống kê: Sản lượng hồ sơ theo cán bộ
     */
    getSanLuongTheoCanBo(request: GetSanLuongTheoCanBoQuery): Observable<ApiResultOfPagedListOfGetSanLuongTheoCanBoDto>;
    /**
     * Thống kê: Số lượng hồ sơ theo cán bộ
     */
    getHoSoTheoCanBo(request: GetHoSoTheoCanBoQuery): Observable<ApiResultOfPagedListOfGetHoSoTheoCanBoDto>;
    /**
     * Thống kê: Tổng số hồ sơ, số hồ sơ đang xử lý, tỷ lệ đúng hạn, số lượng quá hạn
     */
    getThongKeTinhHinhHoSo(request: GetDataThongKeTinhHinhHoSoQuery): Observable<ApiResultOfGetDataThongKeTinhHinhHoSoDto>;
    /**
     * Thống kê hồ sơ nhận trả theo thủ tục
     */
    getThongKeHoSoTheoThuTuc(request: GetDataThongKeTheoThuTucQuery): Observable<ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto>;
}

@Injectable({
    providedIn: 'root'
})
export class DashboardClient implements IDashboardClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thống kê: Số lượng hồ sơ nhận/trả (biểu đồ cột)
     */
    getThongKeSoLuongHoSoNhanTra(request: GetDataThongKeSoLuongHoSoNhanTraQuery): Observable<ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto> {
        let url_ = this.baseUrl + "/api/Dashboard/GetThongKeSoLuongHoSoNhanTra";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThongKeSoLuongHoSoNhanTra(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThongKeSoLuongHoSoNhanTra(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetThongKeSoLuongHoSoNhanTra(response: HttpResponseBase): Observable<ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto>(<any>null);
    }

    /**
     * Thống kê: Sản lượng hồ sơ theo cán bộ
     */
    getSanLuongTheoCanBo(request: GetSanLuongTheoCanBoQuery): Observable<ApiResultOfPagedListOfGetSanLuongTheoCanBoDto> {
        let url_ = this.baseUrl + "/api/Dashboard/GetSanLuongTheoCanBo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetSanLuongTheoCanBo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetSanLuongTheoCanBo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfGetSanLuongTheoCanBoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfGetSanLuongTheoCanBoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetSanLuongTheoCanBo(response: HttpResponseBase): Observable<ApiResultOfPagedListOfGetSanLuongTheoCanBoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfGetSanLuongTheoCanBoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfGetSanLuongTheoCanBoDto>(<any>null);
    }

    /**
     * Thống kê: Số lượng hồ sơ theo cán bộ
     */
    getHoSoTheoCanBo(request: GetHoSoTheoCanBoQuery): Observable<ApiResultOfPagedListOfGetHoSoTheoCanBoDto> {
        let url_ = this.baseUrl + "/api/Dashboard/GetHoSoTheoCanBo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetHoSoTheoCanBo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetHoSoTheoCanBo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfGetHoSoTheoCanBoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfGetHoSoTheoCanBoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetHoSoTheoCanBo(response: HttpResponseBase): Observable<ApiResultOfPagedListOfGetHoSoTheoCanBoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfGetHoSoTheoCanBoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfGetHoSoTheoCanBoDto>(<any>null);
    }

    /**
     * Thống kê: Tổng số hồ sơ, số hồ sơ đang xử lý, tỷ lệ đúng hạn, số lượng quá hạn
     */
    getThongKeTinhHinhHoSo(request: GetDataThongKeTinhHinhHoSoQuery): Observable<ApiResultOfGetDataThongKeTinhHinhHoSoDto> {
        let url_ = this.baseUrl + "/api/Dashboard/GetThongKeTinhHinhHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThongKeTinhHinhHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThongKeTinhHinhHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfGetDataThongKeTinhHinhHoSoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfGetDataThongKeTinhHinhHoSoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetThongKeTinhHinhHoSo(response: HttpResponseBase): Observable<ApiResultOfGetDataThongKeTinhHinhHoSoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfGetDataThongKeTinhHinhHoSoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfGetDataThongKeTinhHinhHoSoDto>(<any>null);
    }

    /**
     * Thống kê hồ sơ nhận trả theo thủ tục
     */
    getThongKeHoSoTheoThuTuc(request: GetDataThongKeTheoThuTucQuery): Observable<ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto> {
        let url_ = this.baseUrl + "/api/Dashboard/GetThongKeHoSoTheoThuTuc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThongKeHoSoTheoThuTuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThongKeHoSoTheoThuTuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetThongKeHoSoTheoThuTuc(response: HttpResponseBase): Observable<ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto>(<any>null);
    }
}

export interface IDoiTuongKhaiThacClient {
    /**
     * Lấy toàn bộ đối tượng khai thác
     */
    getAll(): Observable<ApiResultOfIListOfDoiTuongKhaiThac>;
    /**
     * Thêm đối tượng khai thác
     */
    add(command: DoiTuongKhaiThacViewModel): Observable<ApiResultOfDoiTuongKhaiThac>;
    /**
     * Sửa đối tượng khai thác
     */
    edit(command: DoiTuongKhaiThacViewModel): Observable<ApiResultOfDoiTuongKhaiThac>;
    /**
     * Xóa đối tượng khai thác
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm đối tượng khai thác theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: DoiTuongKhaiThacRequest): Observable<ApiResultOfPagedListOfDoiTuongKhaiThac>;
    /**
     * Lấy toàn bộ loại giấy tờ cho một đối tượng khai thác
     * @param idDoiTuongKhaiThac (optional) 
     */
    getAllByDoiTuongKhaiThac(idDoiTuongKhaiThac: string | null | undefined): Observable<ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel>;
    /**
     * Lấy toàn bộ đối tượng khai thác của một hồ sơ theo id hồ sơ
     * @param id (optional) 
     */
    getAllByIdHoSo(id: string | null | undefined): Observable<ApiResultOfIListOfHoSoDoiTuongKhaiThac>;
}

@Injectable({
    providedIn: 'root'
})
export class DoiTuongKhaiThacClient implements IDoiTuongKhaiThacClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ đối tượng khai thác
     */
    getAll(): Observable<ApiResultOfIListOfDoiTuongKhaiThac> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDoiTuongKhaiThac>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDoiTuongKhaiThac>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfDoiTuongKhaiThac> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDoiTuongKhaiThac.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDoiTuongKhaiThac>(<any>null);
    }

    /**
     * Thêm đối tượng khai thác
     */
    add(command: DoiTuongKhaiThacViewModel): Observable<ApiResultOfDoiTuongKhaiThac> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfDoiTuongKhaiThac>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfDoiTuongKhaiThac>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfDoiTuongKhaiThac> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfDoiTuongKhaiThac.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfDoiTuongKhaiThac>(<any>null);
    }

    /**
     * Sửa đối tượng khai thác
     */
    edit(command: DoiTuongKhaiThacViewModel): Observable<ApiResultOfDoiTuongKhaiThac> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfDoiTuongKhaiThac>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfDoiTuongKhaiThac>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfDoiTuongKhaiThac> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfDoiTuongKhaiThac.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfDoiTuongKhaiThac>(<any>null);
    }

    /**
     * Xóa đối tượng khai thác
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm đối tượng khai thác theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: DoiTuongKhaiThacRequest): Observable<ApiResultOfPagedListOfDoiTuongKhaiThac> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfDoiTuongKhaiThac>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfDoiTuongKhaiThac>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfDoiTuongKhaiThac> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfDoiTuongKhaiThac.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfDoiTuongKhaiThac>(<any>null);
    }

    /**
     * Lấy toàn bộ loại giấy tờ cho một đối tượng khai thác
     * @param idDoiTuongKhaiThac (optional) 
     */
    getAllByDoiTuongKhaiThac(idDoiTuongKhaiThac: string | null | undefined): Observable<ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/GetAllByDoiTuongKhaiThac?";
        if (idDoiTuongKhaiThac !== undefined && idDoiTuongKhaiThac !== null)
            url_ += "idDoiTuongKhaiThac=" + encodeURIComponent("" + idDoiTuongKhaiThac) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllByDoiTuongKhaiThac(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllByDoiTuongKhaiThac(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllByDoiTuongKhaiThac(response: HttpResponseBase): Observable<ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel>(<any>null);
    }

    /**
     * Lấy toàn bộ đối tượng khai thác của một hồ sơ theo id hồ sơ
     * @param id (optional) 
     */
    getAllByIdHoSo(id: string | null | undefined): Observable<ApiResultOfIListOfHoSoDoiTuongKhaiThac> {
        let url_ = this.baseUrl + "/api/DoiTuongKhaiThac/GetAllByIdHoSo?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllByIdHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllByIdHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfHoSoDoiTuongKhaiThac>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfHoSoDoiTuongKhaiThac>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllByIdHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfHoSoDoiTuongKhaiThac> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfHoSoDoiTuongKhaiThac.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfHoSoDoiTuongKhaiThac>(<any>null);
    }
}

export interface IDvcAnhXaDuLieuClient {
    /**
     * Lấy danh sách loại dữ liệu DVC cần ánh xạ với LPM
     */
    getDsLoaiDuLieuCanAnhXa(): Observable<ApiResultOfListOfDvcDuLieuMapViewModel>;
    /**
     * Lấy danh mục Lĩnh vực của DVC qua bảng trung gian tại LPM
     */
    getDsLinhVucDvcDaAnhXaLpm(): Observable<ApiResultOfIListOfDVCLinhVucViewModel>;
    /**
     * Đồng bộ dữ liệu cần ánh xạ từ dịch vụ công
     * @param loaiDuLieuCanAnhXa (optional) 
     */
    dongBoDuLieuDvcCanAnhXa(loaiDuLieuCanAnhXa: DuLieuMapLpmEnum | undefined): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class DvcAnhXaDuLieuClient implements IDvcAnhXaDuLieuClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách loại dữ liệu DVC cần ánh xạ với LPM
     */
    getDsLoaiDuLieuCanAnhXa(): Observable<ApiResultOfListOfDvcDuLieuMapViewModel> {
        let url_ = this.baseUrl + "/api/DvcAnhXaDuLieu/GetDsLoaiDuLieuCanAnhXa";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDsLoaiDuLieuCanAnhXa(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDsLoaiDuLieuCanAnhXa(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfDvcDuLieuMapViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfDvcDuLieuMapViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDsLoaiDuLieuCanAnhXa(response: HttpResponseBase): Observable<ApiResultOfListOfDvcDuLieuMapViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfDvcDuLieuMapViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfDvcDuLieuMapViewModel>(<any>null);
    }

    /**
     * Lấy danh mục Lĩnh vực của DVC qua bảng trung gian tại LPM
     */
    getDsLinhVucDvcDaAnhXaLpm(): Observable<ApiResultOfIListOfDVCLinhVucViewModel> {
        let url_ = this.baseUrl + "/api/DvcAnhXaDuLieu/GetDsLinhVucDvcDaAnhXaLpm";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDsLinhVucDvcDaAnhXaLpm(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDsLinhVucDvcDaAnhXaLpm(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCLinhVucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCLinhVucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDsLinhVucDvcDaAnhXaLpm(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCLinhVucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCLinhVucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCLinhVucViewModel>(<any>null);
    }

    /**
     * Đồng bộ dữ liệu cần ánh xạ từ dịch vụ công
     * @param loaiDuLieuCanAnhXa (optional) 
     */
    dongBoDuLieuDvcCanAnhXa(loaiDuLieuCanAnhXa: DuLieuMapLpmEnum | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DvcAnhXaDuLieu/DongBoDuLieuDvcCanAnhXa?";
        if (loaiDuLieuCanAnhXa === null)
            throw new Error("The parameter 'loaiDuLieuCanAnhXa' cannot be null.");
        else if (loaiDuLieuCanAnhXa !== undefined)
            url_ += "loaiDuLieuCanAnhXa=" + encodeURIComponent("" + loaiDuLieuCanAnhXa) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDongBoDuLieuDvcCanAnhXa(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDongBoDuLieuDvcCanAnhXa(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDongBoDuLieuDvcCanAnhXa(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IDVCDanhMucClient {
    /**
     * Lấy danh mục Lĩnh vực của DVC qua bảng trung gian tại LPM
     */
    getDanhMucLinhVucDVC(): Observable<ApiResultOfIListOfDVCLinhVucViewModel>;
    /**
     * Lấy danh mục thủ tục của DVC theo lĩnh vực qua bảng trung gian tại LPM - v2
     * @param linhVucDvcId (optional) 
     */
    getDanhMucThuTucTheoLinhVucDvcId(linhVucDvcId: string | null | undefined): Observable<ApiResultOfIListOfDVCThuTucViewModel>;
    /**
     * Lấy danh mục quy trình của DVC theo thủ tục qua bảng trung gian tại LPM - v2
     * @param thuTucDvcId (optional) 
     */
    getDanhMucQuyTrinhTheoThuTucDvcId(thuTucDvcId: string | null | undefined): Observable<ApiResultOfIListOfDVCQuyTrinhViewModel>;
    /**
     * Lấy danh mục Lĩnh vực của DVC qua bảng trung gian tại LPM
     */
    getDanhMucLinhVucDVCMapLPM(): Observable<ApiResultOfIListOfDVCLinhVucViewModel>;
    /**
     * Lấy danh mục thủ tục theo id lĩnh vực của DVC (lấy dữ liệu bảng trung gian)
     * @param idDVCLinhVuc (optional) 
     */
    getThuTucByIdDVCLinhVuc(idDVCLinhVuc: string | null | undefined): Observable<ApiResultOfDVCMapThuTucViewModel>;
    /**
     * Lấy danh mục thủ tục theo id lĩnh vực của DVC (lấy dữ liệu bảng trung gian)
     * @param idDVCLinhVuc (optional) 
     * @param bMapTenLPM (optional) 
     */
    getThuTucDaMapByIdDVCLinhVuc(idDVCLinhVuc: string | null | undefined, bMapTenLPM: boolean | undefined): Observable<ApiResultOfIListOfDVCThuTucViewModel>;
    /**
     * Lấy danh mục phòng ban của DVC trực tiếp qua api
     */
    getDanhMucPhongBan(): Observable<ApiResultOfIListOfDVCPhongBanViewModel>;
    /**
     * Lấy danh mục người nhận của DVC qua API
     * @param idPhongBanDVC (optional) 
     */
    getDanhMucNguoiNhan(idPhongBanDVC: string | null | undefined): Observable<ApiResultOfIListOfDVCNguoiNhanViewModel>;
    /**
     * Lấy thông tin bước xử lý dvc ánh xạ với bước quy trình LPM
     */
    getDvcMapBuocQuyTrinh(request: GetDvcMapBuocQuyTrinhQuery): Observable<ApiResultOfGetDvcMapBuocQuyTrinhDto>;
    /**
     * Danh sách dữ liệu cần ánh xạ với LPM
     */
    getDuLieuMapLpm(): Observable<ApiResultOfListOfDvcDuLieuMapViewModel>;
    /**
     * Lấy danh mục phòng ban của DVC trực tiếp qua api theo dạng cây - v2
     */
    getDanhMucPhongBanHierrachy(): Observable<ApiResultOfIListOfDvcDonViDto>;
    /**
     * Lấy danh mục người xử lý theo phòng ban trực tiếp qua api theo dạng cây - v2
     * @param phongBanId (optional) 
     * @param keywordSearch (optional) 
     */
    layDanhSachNguoiXuLyTheoPhongBan(phongBanId: string | null | undefined, keywordSearch: string | null | undefined): Observable<ApiResultOfIListOfDVCDataDanhMuc>;
    /**
     * Lấy danh sách bước/luồng xử lý thuộc quy trình DVC
     * @param idQuyTrinhDvc (optional) 
     */
    layDanhSachLuongXuLy(idQuyTrinhDvc: string | null | undefined): Observable<ApiResultOfIListOfDvcThongTinBuocChiTietDto>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCDanhMucClient implements IDVCDanhMucClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh mục Lĩnh vực của DVC qua bảng trung gian tại LPM
     */
    getDanhMucLinhVucDVC(): Observable<ApiResultOfIListOfDVCLinhVucViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucLinhVucDVC";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucLinhVucDVC(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucLinhVucDVC(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCLinhVucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCLinhVucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucLinhVucDVC(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCLinhVucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCLinhVucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCLinhVucViewModel>(<any>null);
    }

    /**
     * Lấy danh mục thủ tục của DVC theo lĩnh vực qua bảng trung gian tại LPM - v2
     * @param linhVucDvcId (optional) 
     */
    getDanhMucThuTucTheoLinhVucDvcId(linhVucDvcId: string | null | undefined): Observable<ApiResultOfIListOfDVCThuTucViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucThuTucTheoLinhVucDvcId?";
        if (linhVucDvcId !== undefined && linhVucDvcId !== null)
            url_ += "linhVucDvcId=" + encodeURIComponent("" + linhVucDvcId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucThuTucTheoLinhVucDvcId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucThuTucTheoLinhVucDvcId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCThuTucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCThuTucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucThuTucTheoLinhVucDvcId(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCThuTucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCThuTucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCThuTucViewModel>(<any>null);
    }

    /**
     * Lấy danh mục quy trình của DVC theo thủ tục qua bảng trung gian tại LPM - v2
     * @param thuTucDvcId (optional) 
     */
    getDanhMucQuyTrinhTheoThuTucDvcId(thuTucDvcId: string | null | undefined): Observable<ApiResultOfIListOfDVCQuyTrinhViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucQuyTrinhTheoThuTucDvcId?";
        if (thuTucDvcId !== undefined && thuTucDvcId !== null)
            url_ += "thuTucDvcId=" + encodeURIComponent("" + thuTucDvcId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucQuyTrinhTheoThuTucDvcId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucQuyTrinhTheoThuTucDvcId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCQuyTrinhViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCQuyTrinhViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucQuyTrinhTheoThuTucDvcId(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCQuyTrinhViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCQuyTrinhViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCQuyTrinhViewModel>(<any>null);
    }

    /**
     * Lấy danh mục Lĩnh vực của DVC qua bảng trung gian tại LPM
     */
    getDanhMucLinhVucDVCMapLPM(): Observable<ApiResultOfIListOfDVCLinhVucViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucLinhVucDVCMapLPM";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucLinhVucDVCMapLPM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucLinhVucDVCMapLPM(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCLinhVucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCLinhVucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucLinhVucDVCMapLPM(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCLinhVucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCLinhVucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCLinhVucViewModel>(<any>null);
    }

    /**
     * Lấy danh mục thủ tục theo id lĩnh vực của DVC (lấy dữ liệu bảng trung gian)
     * @param idDVCLinhVuc (optional) 
     */
    getThuTucByIdDVCLinhVuc(idDVCLinhVuc: string | null | undefined): Observable<ApiResultOfDVCMapThuTucViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetThuTucByIdDVCLinhVuc?";
        if (idDVCLinhVuc !== undefined && idDVCLinhVuc !== null)
            url_ += "idDVCLinhVuc=" + encodeURIComponent("" + idDVCLinhVuc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThuTucByIdDVCLinhVuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThuTucByIdDVCLinhVuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfDVCMapThuTucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfDVCMapThuTucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetThuTucByIdDVCLinhVuc(response: HttpResponseBase): Observable<ApiResultOfDVCMapThuTucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfDVCMapThuTucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfDVCMapThuTucViewModel>(<any>null);
    }

    /**
     * Lấy danh mục thủ tục theo id lĩnh vực của DVC (lấy dữ liệu bảng trung gian)
     * @param idDVCLinhVuc (optional) 
     * @param bMapTenLPM (optional) 
     */
    getThuTucDaMapByIdDVCLinhVuc(idDVCLinhVuc: string | null | undefined, bMapTenLPM: boolean | undefined): Observable<ApiResultOfIListOfDVCThuTucViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetThuTucDaMapByIdDVCLinhVuc?";
        if (idDVCLinhVuc !== undefined && idDVCLinhVuc !== null)
            url_ += "idDVCLinhVuc=" + encodeURIComponent("" + idDVCLinhVuc) + "&";
        if (bMapTenLPM === null)
            throw new Error("The parameter 'bMapTenLPM' cannot be null.");
        else if (bMapTenLPM !== undefined)
            url_ += "bMapTenLPM=" + encodeURIComponent("" + bMapTenLPM) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThuTucDaMapByIdDVCLinhVuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThuTucDaMapByIdDVCLinhVuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCThuTucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCThuTucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetThuTucDaMapByIdDVCLinhVuc(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCThuTucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCThuTucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCThuTucViewModel>(<any>null);
    }

    /**
     * Lấy danh mục phòng ban của DVC trực tiếp qua api
     */
    getDanhMucPhongBan(): Observable<ApiResultOfIListOfDVCPhongBanViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucPhongBan";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucPhongBan(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucPhongBan(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCPhongBanViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCPhongBanViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucPhongBan(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCPhongBanViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCPhongBanViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCPhongBanViewModel>(<any>null);
    }

    /**
     * Lấy danh mục người nhận của DVC qua API
     * @param idPhongBanDVC (optional) 
     */
    getDanhMucNguoiNhan(idPhongBanDVC: string | null | undefined): Observable<ApiResultOfIListOfDVCNguoiNhanViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucNguoiNhan?";
        if (idPhongBanDVC !== undefined && idPhongBanDVC !== null)
            url_ += "idPhongBanDVC=" + encodeURIComponent("" + idPhongBanDVC) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucNguoiNhan(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucNguoiNhan(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCNguoiNhanViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCNguoiNhanViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucNguoiNhan(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCNguoiNhanViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCNguoiNhanViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCNguoiNhanViewModel>(<any>null);
    }

    /**
     * Lấy thông tin bước xử lý dvc ánh xạ với bước quy trình LPM
     */
    getDvcMapBuocQuyTrinh(request: GetDvcMapBuocQuyTrinhQuery): Observable<ApiResultOfGetDvcMapBuocQuyTrinhDto> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDvcMapBuocQuyTrinh";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDvcMapBuocQuyTrinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDvcMapBuocQuyTrinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfGetDvcMapBuocQuyTrinhDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfGetDvcMapBuocQuyTrinhDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDvcMapBuocQuyTrinh(response: HttpResponseBase): Observable<ApiResultOfGetDvcMapBuocQuyTrinhDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfGetDvcMapBuocQuyTrinhDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfGetDvcMapBuocQuyTrinhDto>(<any>null);
    }

    /**
     * Danh sách dữ liệu cần ánh xạ với LPM
     */
    getDuLieuMapLpm(): Observable<ApiResultOfListOfDvcDuLieuMapViewModel> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDuLieuMapLpm";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDuLieuMapLpm(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDuLieuMapLpm(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfDvcDuLieuMapViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfDvcDuLieuMapViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDuLieuMapLpm(response: HttpResponseBase): Observable<ApiResultOfListOfDvcDuLieuMapViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfDvcDuLieuMapViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfDvcDuLieuMapViewModel>(<any>null);
    }

    /**
     * Lấy danh mục phòng ban của DVC trực tiếp qua api theo dạng cây - v2
     */
    getDanhMucPhongBanHierrachy(): Observable<ApiResultOfIListOfDvcDonViDto> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/GetDanhMucPhongBanHierrachy";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucPhongBanHierrachy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucPhongBanHierrachy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDvcDonViDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDvcDonViDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucPhongBanHierrachy(response: HttpResponseBase): Observable<ApiResultOfIListOfDvcDonViDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDvcDonViDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDvcDonViDto>(<any>null);
    }

    /**
     * Lấy danh mục người xử lý theo phòng ban trực tiếp qua api theo dạng cây - v2
     * @param phongBanId (optional) 
     * @param keywordSearch (optional) 
     */
    layDanhSachNguoiXuLyTheoPhongBan(phongBanId: string | null | undefined, keywordSearch: string | null | undefined): Observable<ApiResultOfIListOfDVCDataDanhMuc> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/LayDanhSachNguoiXuLyTheoPhongBan?";
        if (phongBanId !== undefined && phongBanId !== null)
            url_ += "phongBanId=" + encodeURIComponent("" + phongBanId) + "&";
        if (keywordSearch !== undefined && keywordSearch !== null)
            url_ += "keywordSearch=" + encodeURIComponent("" + keywordSearch) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayDanhSachNguoiXuLyTheoPhongBan(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayDanhSachNguoiXuLyTheoPhongBan(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCDataDanhMuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCDataDanhMuc>><any>_observableThrow(response_);
        }));
    }

    protected processLayDanhSachNguoiXuLyTheoPhongBan(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCDataDanhMuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCDataDanhMuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCDataDanhMuc>(<any>null);
    }

    /**
     * Lấy danh sách bước/luồng xử lý thuộc quy trình DVC
     * @param idQuyTrinhDvc (optional) 
     */
    layDanhSachLuongXuLy(idQuyTrinhDvc: string | null | undefined): Observable<ApiResultOfIListOfDvcThongTinBuocChiTietDto> {
        let url_ = this.baseUrl + "/api/DVCDanhMuc/LayDanhSachLuongXuLy?";
        if (idQuyTrinhDvc !== undefined && idQuyTrinhDvc !== null)
            url_ += "idQuyTrinhDvc=" + encodeURIComponent("" + idQuyTrinhDvc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayDanhSachLuongXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayDanhSachLuongXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDvcThongTinBuocChiTietDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDvcThongTinBuocChiTietDto>><any>_observableThrow(response_);
        }));
    }

    protected processLayDanhSachLuongXuLy(response: HttpResponseBase): Observable<ApiResultOfIListOfDvcThongTinBuocChiTietDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDvcThongTinBuocChiTietDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDvcThongTinBuocChiTietDto>(<any>null);
    }
}

export interface IDvhcClient {
    getCayDvhcTheoQuyenNguoiDung(): Observable<ApiResultOfScopeDvhcListVm>;
    /**
     * Lấy danh mục tỉnh
     */
    getDanhMucTinh(): Observable<ApiResultOfIListOfCommonObjectViewModel>;
    /**
     * Lấy danh mục quận huyện theo tỉnh
     * @param idTinh (optional) 
     */
    getDanhMucQuanHuyenByTinhId(idTinh: string | null | undefined): Observable<ApiResultOfIListOfCommonObjectViewModel>;
    /**
     * Lấy danh mục phường xã theo quận huyện
     * @param idQuanHuyen (optional) 
     */
    getDanhMucPhuongXaByQuanHuyenId(idQuanHuyen: string | null | undefined): Observable<ApiResultOfIListOfCommonObjectViewModel>;
    /**
     * Lấy danh mục quận huyện tiếp nhận hồ sơ (theo quyền người dùng)
     */
    getQuanHuyenTiepNhanHoSo(): Observable<ApiResultOfIListOfCommonObjectViewModel>;
    /**
     * Lấy danh mục phường xã theo id quận huyện tiếp nhận hồ sơ (theo quyền người dùng)
     * @param quanHuyenId (optional) 
     */
    getPhuongXaTiepNhanHoSoByQuanHuyenId(quanHuyenId: string | null | undefined): Observable<ApiResultOfIListOfCommonObjectViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class DvhcClient implements IDvhcClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    getCayDvhcTheoQuyenNguoiDung(): Observable<ApiResultOfScopeDvhcListVm> {
        let url_ = this.baseUrl + "/api/Dvhc/GetCayDvhcTheoQuyenNguoiDung";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCayDvhcTheoQuyenNguoiDung(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCayDvhcTheoQuyenNguoiDung(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfScopeDvhcListVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfScopeDvhcListVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetCayDvhcTheoQuyenNguoiDung(response: HttpResponseBase): Observable<ApiResultOfScopeDvhcListVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfScopeDvhcListVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfScopeDvhcListVm>(<any>null);
    }

    /**
     * Lấy danh mục tỉnh
     */
    getDanhMucTinh(): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        let url_ = this.baseUrl + "/api/Dvhc/GetDanhMucTinh";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucTinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucTinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucTinh(response: HttpResponseBase): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCommonObjectViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCommonObjectViewModel>(<any>null);
    }

    /**
     * Lấy danh mục quận huyện theo tỉnh
     * @param idTinh (optional) 
     */
    getDanhMucQuanHuyenByTinhId(idTinh: string | null | undefined): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        let url_ = this.baseUrl + "/api/Dvhc/GetDanhMucQuanHuyenByTinhId?";
        if (idTinh !== undefined && idTinh !== null)
            url_ += "idTinh=" + encodeURIComponent("" + idTinh) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucQuanHuyenByTinhId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucQuanHuyenByTinhId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucQuanHuyenByTinhId(response: HttpResponseBase): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCommonObjectViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCommonObjectViewModel>(<any>null);
    }

    /**
     * Lấy danh mục phường xã theo quận huyện
     * @param idQuanHuyen (optional) 
     */
    getDanhMucPhuongXaByQuanHuyenId(idQuanHuyen: string | null | undefined): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        let url_ = this.baseUrl + "/api/Dvhc/GetDanhMucPhuongXaByQuanHuyenId?";
        if (idQuanHuyen !== undefined && idQuanHuyen !== null)
            url_ += "idQuanHuyen=" + encodeURIComponent("" + idQuanHuyen) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucPhuongXaByQuanHuyenId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucPhuongXaByQuanHuyenId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucPhuongXaByQuanHuyenId(response: HttpResponseBase): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCommonObjectViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCommonObjectViewModel>(<any>null);
    }

    /**
     * Lấy danh mục quận huyện tiếp nhận hồ sơ (theo quyền người dùng)
     */
    getQuanHuyenTiepNhanHoSo(): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        let url_ = this.baseUrl + "/api/Dvhc/GetQuanHuyenTiepNhanHoSo";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetQuanHuyenTiepNhanHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetQuanHuyenTiepNhanHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetQuanHuyenTiepNhanHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCommonObjectViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCommonObjectViewModel>(<any>null);
    }

    /**
     * Lấy danh mục phường xã theo id quận huyện tiếp nhận hồ sơ (theo quyền người dùng)
     * @param quanHuyenId (optional) 
     */
    getPhuongXaTiepNhanHoSoByQuanHuyenId(quanHuyenId: string | null | undefined): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        let url_ = this.baseUrl + "/api/Dvhc/GetPhuongXaTiepNhanHoSoByQuanHuyenId?";
        if (quanHuyenId !== undefined && quanHuyenId !== null)
            url_ += "quanHuyenId=" + encodeURIComponent("" + quanHuyenId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetPhuongXaTiepNhanHoSoByQuanHuyenId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetPhuongXaTiepNhanHoSoByQuanHuyenId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCommonObjectViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetPhuongXaTiepNhanHoSoByQuanHuyenId(response: HttpResponseBase): Observable<ApiResultOfIListOfCommonObjectViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCommonObjectViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCommonObjectViewModel>(<any>null);
    }
}

export interface IEmailClient {
    send(toEmail: string | null | undefined, subject: string | null | undefined, body: string | null | undefined, attachments: FileParameter[] | null | undefined): Observable<FileResponse>;
}

@Injectable({
    providedIn: 'root'
})
export class EmailClient implements IEmailClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    send(toEmail: string | null | undefined, subject: string | null | undefined, body: string | null | undefined, attachments: FileParameter[] | null | undefined): Observable<FileResponse> {
        let url_ = this.baseUrl + "/api/Email/Send/Send";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = new FormData();
        if (toEmail !== null && toEmail !== undefined)
            content_.append("ToEmail", toEmail.toString());
        if (subject !== null && subject !== undefined)
            content_.append("Subject", subject.toString());
        if (body !== null && body !== undefined)
            content_.append("Body", body.toString());
        if (attachments !== null && attachments !== undefined)
            attachments.forEach(item_ => content_.append("Attachments", item_.data, item_.fileName ? item_.fileName : "Attachments") );

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSend(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSend(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processSend(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }
}

export interface IGiaDatClient {
    /**
     * Lấy danh sách khu vực
     */
    getKhuVuc(): Observable<ApiResultOfIListOfKhuVucViewModel>;
    /**
     * Lấy danh sách đường theo điều kiện
     * @param maHuyen (optional) 
     * @param maLoaiDat (optional) 
     */
    getDuong(maHuyen: string | null | undefined, maLoaiDat: string | null | undefined): Observable<ApiResultOfIListOfDuongViewModel>;
    /**
     * Lấy danh sách đoạn đường theo điều kiện
     * @param maHuyen (optional) 
     * @param idDuong (optional) 
     */
    getDoanDuong(maHuyen: string | null | undefined, idDuong: string | null | undefined): Observable<ApiResultOfIListOfDoanDuongViewModel>;
    /**
     * Lấy danh sách vị trí theo điều kiện
     * @param maHuyen (optional) 
     */
    getViTri(maHuyen: string | null | undefined): Observable<ApiResultOfIListOfViTriViewModel>;
    /**
     * Lấy danh sách cấp nhà
     */
    getCapNha(): Observable<ApiResultOfIListOfCapNhaViewModel>;
    /**
     * Lấy danh sách loại nhà theo cấp nhà
     * @param idCapNha (optional) 
     */
    getLoaiNha(idCapNha: string | null | undefined): Observable<ApiResultOfIListOfLoaiNhaViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class GiaDatClient implements IGiaDatClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách khu vực
     */
    getKhuVuc(): Observable<ApiResultOfIListOfKhuVucViewModel> {
        let url_ = this.baseUrl + "/api/GiaDat/GetKhuVuc";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetKhuVuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetKhuVuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfKhuVucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfKhuVucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetKhuVuc(response: HttpResponseBase): Observable<ApiResultOfIListOfKhuVucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfKhuVucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfKhuVucViewModel>(<any>null);
    }

    /**
     * Lấy danh sách đường theo điều kiện
     * @param maHuyen (optional) 
     * @param maLoaiDat (optional) 
     */
    getDuong(maHuyen: string | null | undefined, maLoaiDat: string | null | undefined): Observable<ApiResultOfIListOfDuongViewModel> {
        let url_ = this.baseUrl + "/api/GiaDat/GetDuong?";
        if (maHuyen !== undefined && maHuyen !== null)
            url_ += "maHuyen=" + encodeURIComponent("" + maHuyen) + "&";
        if (maLoaiDat !== undefined && maLoaiDat !== null)
            url_ += "maLoaiDat=" + encodeURIComponent("" + maLoaiDat) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDuong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDuong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDuongViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDuongViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDuong(response: HttpResponseBase): Observable<ApiResultOfIListOfDuongViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDuongViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDuongViewModel>(<any>null);
    }

    /**
     * Lấy danh sách đoạn đường theo điều kiện
     * @param maHuyen (optional) 
     * @param idDuong (optional) 
     */
    getDoanDuong(maHuyen: string | null | undefined, idDuong: string | null | undefined): Observable<ApiResultOfIListOfDoanDuongViewModel> {
        let url_ = this.baseUrl + "/api/GiaDat/GetDoanDuong?";
        if (maHuyen !== undefined && maHuyen !== null)
            url_ += "maHuyen=" + encodeURIComponent("" + maHuyen) + "&";
        if (idDuong !== undefined && idDuong !== null)
            url_ += "idDuong=" + encodeURIComponent("" + idDuong) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDoanDuong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDoanDuong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDoanDuongViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDoanDuongViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetDoanDuong(response: HttpResponseBase): Observable<ApiResultOfIListOfDoanDuongViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDoanDuongViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDoanDuongViewModel>(<any>null);
    }

    /**
     * Lấy danh sách vị trí theo điều kiện
     * @param maHuyen (optional) 
     */
    getViTri(maHuyen: string | null | undefined): Observable<ApiResultOfIListOfViTriViewModel> {
        let url_ = this.baseUrl + "/api/GiaDat/GetViTri?";
        if (maHuyen !== undefined && maHuyen !== null)
            url_ += "maHuyen=" + encodeURIComponent("" + maHuyen) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetViTri(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetViTri(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfViTriViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfViTriViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetViTri(response: HttpResponseBase): Observable<ApiResultOfIListOfViTriViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfViTriViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfViTriViewModel>(<any>null);
    }

    /**
     * Lấy danh sách cấp nhà
     */
    getCapNha(): Observable<ApiResultOfIListOfCapNhaViewModel> {
        let url_ = this.baseUrl + "/api/GiaDat/GetCapNha";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCapNha(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCapNha(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCapNhaViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCapNhaViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetCapNha(response: HttpResponseBase): Observable<ApiResultOfIListOfCapNhaViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCapNhaViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCapNhaViewModel>(<any>null);
    }

    /**
     * Lấy danh sách loại nhà theo cấp nhà
     * @param idCapNha (optional) 
     */
    getLoaiNha(idCapNha: string | null | undefined): Observable<ApiResultOfIListOfLoaiNhaViewModel> {
        let url_ = this.baseUrl + "/api/GiaDat/GetLoaiNha?";
        if (idCapNha !== undefined && idCapNha !== null)
            url_ += "idCapNha=" + encodeURIComponent("" + idCapNha) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetLoaiNha(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetLoaiNha(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLoaiNhaViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLoaiNhaViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetLoaiNha(response: HttpResponseBase): Observable<ApiResultOfIListOfLoaiNhaViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLoaiNhaViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLoaiNhaViewModel>(<any>null);
    }
}

export interface IHoSoClient {
    /**
     * Tiếp nhận hồ sơ trực tiếp.
     */
    tiepNhanHoSoTrucTiep(command: TiepNhanHoSoTrucTiepCommand): Observable<ApiResultOfTiepNhanHoSoTrucTiepVm>;
    /**
     * Sửa thông tin của hồ sơ.
     */
    chinhSuaHoSoTrucTiep(command: ChinhSuaHoSoTrucTiepCommand): Observable<ApiResultOfTiepNhanHoSoTrucTiepVm>;
    /**
     * Lấy thông tin hồ sơ theo id
     */
    getById(id: string | null): Observable<ApiResultOfHoSoByIdDto>;
    /**
     * Lấy thông tin chi tiết của một hồ sơ theo id
     */
    getHoSoChiTietById(id: string | null): Observable<ApiResultOfHoSoChiTietByIdDto>;
    /**
     * Tìm kiếm hồ sơ theo các tiêu chí khác nhau, có phân trang
     */
    search(request: SearchHoSoListQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto>;
    /**
     * Tìm kiếm hồ sơ cần xử lý theo người dùng
     */
    searchHoSoCanXuLyListByUser(request: SearchHoSoCanXuLyListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>;
    /**
     * Tìm kiếm hồ sơ liên quan đến người dùng
     */
    searchHoSoLienQuanListByUser(request: SearchHoSoLienQuanChuaKetThucListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>;
    /**
     * Phân công lại hàng loạt người đang xử lý hồ sơ.
     */
    phanCongLaiHangLoatNguoiDangXuLy(request: PhanCongLaiNguoiDangXuLyCommand[]): Observable<ApiResultOfInteger>;
    /**
     * Phân công lại người đang xử lý tại một bước của hồ sơ.
     */
    phanCongLaiNguoiDangXuLy(request: PhanCongLaiNguoiDangXuLyCommand): Observable<ApiResultOfBoolean>;
    /**
     * Lấy danh sách các bước cần phân công lại người đang xử lý
     */
    searchYeuCauPhanCongLaiList(request: SearchYeuCauPhanCongLaiListQuery): Observable<ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto>;
    /**
     * Lấy danh sách các bước đã được phân công lại
     */
    searchYeuCauDaPhanCongLaiList(request: SearchYeuCauDaPhanCongLaiListQuery): Observable<ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto>;
    /**
     * Tìm kiếm hồ sơ giao dich tu standard theo các tiêu chí khác nhau, có phân trang
     */
    getHoSoGiaoDichStandard(request: GetHoSoGiaoDichQuery): Observable<ApiResultOfPagedListOfHoSoGiaoDichDto>;
    /**
     * Tìm kiếm hồ sơ quá hạn xử lý theo người dùng
     */
    searchHoSoQuaHanListByUser(request: SearchHoSoQuaHanListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>;
    /**
     * Tìm kiếm hồ sơ sắp quá hạn xử lý theo người dùng
     */
    searchHoSoSapHetHanListByUser(request: SearchHoSoSapHetHanXuLyListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>;
    /**
     * Số lượng hồ sơ, đang xử lý, chưa xử lý, sắp quá hạn xử lý, quá hạn theo người dùng
     */
    soLuongHoSoByUser(request: SoLuongHoSoByUserQuery): Observable<ApiResultOfSoLuongHoSoDto>;
    /**
     * Số lượng hồ sơ cần xử lý có điều kiện lọc theo quyền người dùng
     */
    soLuongHoSoCanXuLyByUser(request: SoLuongHoSoCanXuLyByUserQuery): Observable<ApiResultOfInteger>;
    /**
     * Tìm kiếm hồ sơ theo các tiêu chí khác nhau
     */
    searchList(request: HoSoListQuery): Observable<ApiResultOfIListOfHoSoSearchingDto>;
    /**
     * Bao cao giai quyet ho so theo don vi
     */
    baoCaoGiaiQuyetHoSoTheoDonvi(request: BaoCaoGiaiQuyetHoSoTheoDonviQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>;
    /**
     * Bao cao giai quyet ho so theo thu tuc
     */
    baoCaoGiaiQuyetHoSoTheoThuTuc(request: BaoCaoGiaiQuyetHoSoTheoThuTucQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel>;
    /**
     * Bao cao giai quyet ho so theo chuyen vien
     */
    baoCaoGiaiQuyetHoSoTheoChuyenVien(request: BaoCaoGiaiQuyetHoSoTheoChuyenVienQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel>;
    /**
     * Bao cao giai quyet cong doan ho so theo phong ban
     */
    baoCaoGiaiQuyetHoSoTheoToChuc(request: BaoCaoThuLyHoSoTheoPhongBanQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>;
    /**
     * Tìm kiếm hồ sơ chờ kết quả thuế theo người dùng
     */
    searchHoSoChoKetQuaThueByUser(request: SearchHoSoChoKetQuaThueByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>;
    /**
     * Tìm kiếm hồ sơ đã hoàn thành nghĩa vụ tài chính theo người dùng
     */
    searchHoSoHoanThanhNvtcByUser(request: SearchHoSoHoanThanhNvtcByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>;
    /**
     * Cập nhật điều kiện in giấy chứng nhận
     */
    dieuKienInGcn(request: CapNhatDieuKienInGCNCommand): Observable<ApiResultOfBoolean>;
    /**
     * Dashboard giai quyet ho so theo huyen
     */
    giaiQuyetHoSoTheoHuyen(request: GiaiQuyetHoSoTheoHuyenQuery): Observable<ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel>;
    /**
     * Chi tiet bao cao giai quyet ho so theo don vi
     */
    chiTietGiaiQuyetHoSoTheoDonvi(request: ChiTietGiaiQuyetHoSoTheoDonviQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto>;
    /**
     * Chi tiet giao dich ho so dat dai
     */
    chiTietGiaoDichHoSoDatDai(request: ChiTietGiaoDichHoSoDatDaiQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto>;
    /**
     * Chi tiet Bao cao ho so theo chuyen vien
     */
    chiTietBaoCaoGiaiQuyetHoSoTheoChuyenVien(query: ChiTietBaoCaoHoSoTheoChuyenVienQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto>;
    /**
     * Bao cao tong hop ho so can xu ly
     */
    baoCaoTongHopHoSoCanXuLy(query: BaoCaoTongHopHoSoCanXuLyQuery): Observable<ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class HoSoClient implements IHoSoClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận hồ sơ trực tiếp.
     */
    tiepNhanHoSoTrucTiep(command: TiepNhanHoSoTrucTiepCommand): Observable<ApiResultOfTiepNhanHoSoTrucTiepVm> {
        let url_ = this.baseUrl + "/api/HoSo/TiepNhanHoSoTrucTiep";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSoTrucTiep(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSoTrucTiep(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfTiepNhanHoSoTrucTiepVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfTiepNhanHoSoTrucTiepVm>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSoTrucTiep(response: HttpResponseBase): Observable<ApiResultOfTiepNhanHoSoTrucTiepVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfTiepNhanHoSoTrucTiepVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfTiepNhanHoSoTrucTiepVm>(<any>null);
    }

    /**
     * Sửa thông tin của hồ sơ.
     */
    chinhSuaHoSoTrucTiep(command: ChinhSuaHoSoTrucTiepCommand): Observable<ApiResultOfTiepNhanHoSoTrucTiepVm> {
        let url_ = this.baseUrl + "/api/HoSo/ChinhSuaHoSoTrucTiep";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChinhSuaHoSoTrucTiep(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChinhSuaHoSoTrucTiep(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfTiepNhanHoSoTrucTiepVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfTiepNhanHoSoTrucTiepVm>><any>_observableThrow(response_);
        }));
    }

    protected processChinhSuaHoSoTrucTiep(response: HttpResponseBase): Observable<ApiResultOfTiepNhanHoSoTrucTiepVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfTiepNhanHoSoTrucTiepVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfTiepNhanHoSoTrucTiepVm>(<any>null);
    }

    /**
     * Lấy thông tin hồ sơ theo id
     */
    getById(id: string | null): Observable<ApiResultOfHoSoByIdDto> {
        let url_ = this.baseUrl + "/api/HoSo/GetById/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfHoSoByIdDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfHoSoByIdDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetById(response: HttpResponseBase): Observable<ApiResultOfHoSoByIdDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfHoSoByIdDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfHoSoByIdDto>(<any>null);
    }

    /**
     * Lấy thông tin chi tiết của một hồ sơ theo id
     */
    getHoSoChiTietById(id: string | null): Observable<ApiResultOfHoSoChiTietByIdDto> {
        let url_ = this.baseUrl + "/api/HoSo/GetHoSoChiTietById/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetHoSoChiTietById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetHoSoChiTietById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfHoSoChiTietByIdDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfHoSoChiTietByIdDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetHoSoChiTietById(response: HttpResponseBase): Observable<ApiResultOfHoSoChiTietByIdDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfHoSoChiTietByIdDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfHoSoChiTietByIdDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ theo các tiêu chí khác nhau, có phân trang
     */
    search(request: SearchHoSoListQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        let url_ = this.baseUrl + "/api/HoSo/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfHoSoSearchingDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfHoSoSearchingDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ cần xử lý theo người dùng
     */
    searchHoSoCanXuLyListByUser(request: SearchHoSoCanXuLyListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchHoSoCanXuLyListByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchHoSoCanXuLyListByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchHoSoCanXuLyListByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchHoSoCanXuLyListByUser(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ liên quan đến người dùng
     */
    searchHoSoLienQuanListByUser(request: SearchHoSoLienQuanChuaKetThucListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchHoSoLienQuanListByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchHoSoLienQuanListByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchHoSoLienQuanListByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchHoSoLienQuanListByUser(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>(<any>null);
    }

    /**
     * Phân công lại hàng loạt người đang xử lý hồ sơ.
     */
    phanCongLaiHangLoatNguoiDangXuLy(request: PhanCongLaiNguoiDangXuLyCommand[]): Observable<ApiResultOfInteger> {
        let url_ = this.baseUrl + "/api/HoSo/PhanCongLaiHangLoatNguoiDangXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPhanCongLaiHangLoatNguoiDangXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPhanCongLaiHangLoatNguoiDangXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfInteger>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfInteger>><any>_observableThrow(response_);
        }));
    }

    protected processPhanCongLaiHangLoatNguoiDangXuLy(response: HttpResponseBase): Observable<ApiResultOfInteger> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfInteger.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfInteger>(<any>null);
    }

    /**
     * Phân công lại người đang xử lý tại một bước của hồ sơ.
     */
    phanCongLaiNguoiDangXuLy(request: PhanCongLaiNguoiDangXuLyCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSo/PhanCongLaiNguoiDangXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPhanCongLaiNguoiDangXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPhanCongLaiNguoiDangXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processPhanCongLaiNguoiDangXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy danh sách các bước cần phân công lại người đang xử lý
     */
    searchYeuCauPhanCongLaiList(request: SearchYeuCauPhanCongLaiListQuery): Observable<ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchYeuCauPhanCongLaiList";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchYeuCauPhanCongLaiList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchYeuCauPhanCongLaiList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchYeuCauPhanCongLaiList(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto>(<any>null);
    }

    /**
     * Lấy danh sách các bước đã được phân công lại
     */
    searchYeuCauDaPhanCongLaiList(request: SearchYeuCauDaPhanCongLaiListQuery): Observable<ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchYeuCauDaPhanCongLaiList";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchYeuCauDaPhanCongLaiList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchYeuCauDaPhanCongLaiList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchYeuCauDaPhanCongLaiList(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ giao dich tu standard theo các tiêu chí khác nhau, có phân trang
     */
    getHoSoGiaoDichStandard(request: GetHoSoGiaoDichQuery): Observable<ApiResultOfPagedListOfHoSoGiaoDichDto> {
        let url_ = this.baseUrl + "/api/HoSo/GetHoSoGiaoDichStandard";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetHoSoGiaoDichStandard(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetHoSoGiaoDichStandard(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfHoSoGiaoDichDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfHoSoGiaoDichDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetHoSoGiaoDichStandard(response: HttpResponseBase): Observable<ApiResultOfPagedListOfHoSoGiaoDichDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfHoSoGiaoDichDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfHoSoGiaoDichDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ quá hạn xử lý theo người dùng
     */
    searchHoSoQuaHanListByUser(request: SearchHoSoQuaHanListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchHoSoQuaHanListByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchHoSoQuaHanListByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchHoSoQuaHanListByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchHoSoQuaHanListByUser(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ sắp quá hạn xử lý theo người dùng
     */
    searchHoSoSapHetHanListByUser(request: SearchHoSoSapHetHanXuLyListByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchHoSoSapHetHanListByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchHoSoSapHetHanListByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchHoSoSapHetHanListByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchHoSoSapHetHanListByUser(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>(<any>null);
    }

    /**
     * Số lượng hồ sơ, đang xử lý, chưa xử lý, sắp quá hạn xử lý, quá hạn theo người dùng
     */
    soLuongHoSoByUser(request: SoLuongHoSoByUserQuery): Observable<ApiResultOfSoLuongHoSoDto> {
        let url_ = this.baseUrl + "/api/HoSo/SoLuongHoSoByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSoLuongHoSoByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSoLuongHoSoByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfSoLuongHoSoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfSoLuongHoSoDto>><any>_observableThrow(response_);
        }));
    }

    protected processSoLuongHoSoByUser(response: HttpResponseBase): Observable<ApiResultOfSoLuongHoSoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfSoLuongHoSoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfSoLuongHoSoDto>(<any>null);
    }

    /**
     * Số lượng hồ sơ cần xử lý có điều kiện lọc theo quyền người dùng
     */
    soLuongHoSoCanXuLyByUser(request: SoLuongHoSoCanXuLyByUserQuery): Observable<ApiResultOfInteger> {
        let url_ = this.baseUrl + "/api/HoSo/SoLuongHoSoCanXuLyByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSoLuongHoSoCanXuLyByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSoLuongHoSoCanXuLyByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfInteger>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfInteger>><any>_observableThrow(response_);
        }));
    }

    protected processSoLuongHoSoCanXuLyByUser(response: HttpResponseBase): Observable<ApiResultOfInteger> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfInteger.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfInteger>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ theo các tiêu chí khác nhau
     */
    searchList(request: HoSoListQuery): Observable<ApiResultOfIListOfHoSoSearchingDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchList";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfHoSoSearchingDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfHoSoSearchingDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchList(response: HttpResponseBase): Observable<ApiResultOfIListOfHoSoSearchingDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfHoSoSearchingDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfHoSoSearchingDto>(<any>null);
    }

    /**
     * Bao cao giai quyet ho so theo don vi
     */
    baoCaoGiaiQuyetHoSoTheoDonvi(request: BaoCaoGiaiQuyetHoSoTheoDonviQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel> {
        let url_ = this.baseUrl + "/api/HoSo/BaoCaoGiaiQuyetHoSoTheoDonvi";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBaoCaoGiaiQuyetHoSoTheoDonvi(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBaoCaoGiaiQuyetHoSoTheoDonvi(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processBaoCaoGiaiQuyetHoSoTheoDonvi(response: HttpResponseBase): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>(<any>null);
    }

    /**
     * Bao cao giai quyet ho so theo thu tuc
     */
    baoCaoGiaiQuyetHoSoTheoThuTuc(request: BaoCaoGiaiQuyetHoSoTheoThuTucQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel> {
        let url_ = this.baseUrl + "/api/HoSo/BaoCaoGiaiQuyetHoSoTheoThuTuc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBaoCaoGiaiQuyetHoSoTheoThuTuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBaoCaoGiaiQuyetHoSoTheoThuTuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processBaoCaoGiaiQuyetHoSoTheoThuTuc(response: HttpResponseBase): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel>(<any>null);
    }

    /**
     * Bao cao giai quyet ho so theo chuyen vien
     */
    baoCaoGiaiQuyetHoSoTheoChuyenVien(request: BaoCaoGiaiQuyetHoSoTheoChuyenVienQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel> {
        let url_ = this.baseUrl + "/api/HoSo/BaoCaoGiaiQuyetHoSoTheoChuyenVien";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBaoCaoGiaiQuyetHoSoTheoChuyenVien(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBaoCaoGiaiQuyetHoSoTheoChuyenVien(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processBaoCaoGiaiQuyetHoSoTheoChuyenVien(response: HttpResponseBase): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel>(<any>null);
    }

    /**
     * Bao cao giai quyet cong doan ho so theo phong ban
     */
    baoCaoGiaiQuyetHoSoTheoToChuc(request: BaoCaoThuLyHoSoTheoPhongBanQuery): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel> {
        let url_ = this.baseUrl + "/api/HoSo/BaoCaoGiaiQuyetHoSoTheoToChuc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBaoCaoGiaiQuyetHoSoTheoToChuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBaoCaoGiaiQuyetHoSoTheoToChuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processBaoCaoGiaiQuyetHoSoTheoToChuc(response: HttpResponseBase): Observable<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ chờ kết quả thuế theo người dùng
     */
    searchHoSoChoKetQuaThueByUser(request: SearchHoSoChoKetQuaThueByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchHoSoChoKetQuaThueByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchHoSoChoKetQuaThueByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchHoSoChoKetQuaThueByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchHoSoChoKetQuaThueByUser(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ đã hoàn thành nghĩa vụ tài chính theo người dùng
     */
    searchHoSoHoanThanhNvtcByUser(request: SearchHoSoHoanThanhNvtcByUserQuery): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        let url_ = this.baseUrl + "/api/HoSo/SearchHoSoHoanThanhNvtcByUser";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchHoSoHoanThanhNvtcByUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchHoSoHoanThanhNvtcByUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchHoSoHoanThanhNvtcByUser(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto>(<any>null);
    }

    /**
     * Cập nhật điều kiện in giấy chứng nhận
     */
    dieuKienInGcn(request: CapNhatDieuKienInGCNCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSo/DieuKienInGcn";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDieuKienInGcn(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDieuKienInGcn(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDieuKienInGcn(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Dashboard giai quyet ho so theo huyen
     */
    giaiQuyetHoSoTheoHuyen(request: GiaiQuyetHoSoTheoHuyenQuery): Observable<ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel> {
        let url_ = this.baseUrl + "/api/HoSo/GiaiQuyetHoSoTheoHuyen";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGiaiQuyetHoSoTheoHuyen(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGiaiQuyetHoSoTheoHuyen(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGiaiQuyetHoSoTheoHuyen(response: HttpResponseBase): Observable<ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel>(<any>null);
    }

    /**
     * Chi tiet bao cao giai quyet ho so theo don vi
     */
    chiTietGiaiQuyetHoSoTheoDonvi(request: ChiTietGiaiQuyetHoSoTheoDonviQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        let url_ = this.baseUrl + "/api/HoSo/ChiTietGiaiQuyetHoSoTheoDonvi";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChiTietGiaiQuyetHoSoTheoDonvi(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChiTietGiaiQuyetHoSoTheoDonvi(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(response_);
        }));
    }

    protected processChiTietGiaiQuyetHoSoTheoDonvi(response: HttpResponseBase): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfHoSoSearchingDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfHoSoSearchingDto>(<any>null);
    }

    /**
     * Chi tiet giao dich ho so dat dai
     */
    chiTietGiaoDichHoSoDatDai(request: ChiTietGiaoDichHoSoDatDaiQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        let url_ = this.baseUrl + "/api/HoSo/ChiTietGiaoDichHoSoDatDai";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChiTietGiaoDichHoSoDatDai(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChiTietGiaoDichHoSoDatDai(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(response_);
        }));
    }

    protected processChiTietGiaoDichHoSoDatDai(response: HttpResponseBase): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfHoSoSearchingDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfHoSoSearchingDto>(<any>null);
    }

    /**
     * Chi tiet Bao cao ho so theo chuyen vien
     */
    chiTietBaoCaoGiaiQuyetHoSoTheoChuyenVien(query: ChiTietBaoCaoHoSoTheoChuyenVienQuery): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        let url_ = this.baseUrl + "/api/HoSo/ChiTietBaoCaoGiaiQuyetHoSoTheoChuyenVien";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(query);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChiTietBaoCaoGiaiQuyetHoSoTheoChuyenVien(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChiTietBaoCaoGiaiQuyetHoSoTheoChuyenVien(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfHoSoSearchingDto>><any>_observableThrow(response_);
        }));
    }

    protected processChiTietBaoCaoGiaiQuyetHoSoTheoChuyenVien(response: HttpResponseBase): Observable<ApiResultOfPagedListOfHoSoSearchingDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfHoSoSearchingDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfHoSoSearchingDto>(<any>null);
    }

    /**
     * Bao cao tong hop ho so can xu ly
     */
    baoCaoTongHopHoSoCanXuLy(query: BaoCaoTongHopHoSoCanXuLyQuery): Observable<ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel> {
        let url_ = this.baseUrl + "/api/HoSo/BaoCaoTongHopHoSoCanXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(query);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBaoCaoTongHopHoSoCanXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBaoCaoTongHopHoSoCanXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processBaoCaoTongHopHoSoCanXuLy(response: HttpResponseBase): Observable<ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel>(<any>null);
    }
}

export interface IHoSoDangKyClient {
    /**
     * Tiếp nhận hồ sơ đăng ký mới
     */
    taoMoiHoSoDangKyMoi(command: CreateHoSoDangKyMoiCommand): Observable<ApiResultOfBoolean>;
    /**
     * Tạo phiếu chuyển nghĩa vụ tài chính thủ công
     */
    taoPhieuChuyenNvtcThuCong(command: CreateOrUpdatePhieuChuyenNvtcThuCongCommand): Observable<ApiResultOfCreateOrEditPhieuChuyenDto>;
    /**
     * Tiếp nhận hồ sơ đăng ký mới
     */
    taoMoiHoSoDangKyBienDong(command: CreateHoSoDangKyBienDongCommand): Observable<ApiResultOfBoolean>;
    /**
     * Sửa thông tin của hồ sơ đăng ký.
     */
    chinhSuaHoSoDangKy(command: EditHoSoDangKyCommand): Observable<ApiResultOfInteger>;
    /**
     * Xóa hồ sơ đăng ký
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm hồ sơ theo các tiêu chí khác nhau, có phân trang
     */
    search(request: GetHoSoDangKyByIdHoSoQuery): Observable<ApiResultOfGetHoSoDangKyByIdHoSoDto>;
    /**
     * Get phiếu chuyển thuế
     */
    getPhieuChuyenThue(request: GetHoSoPhieuChuyenThueByIdHoSoQuery): Observable<ApiResultOfIListOfHoSoPhieuChuyenThueVm>;
    /**
     * Gửi phiếu chuyển thuế
     */
    guiPhieuChuyenNvtc(command: GuiPhieuChuyenNvtcCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật danh sách file trước khi ký số
     */
    updateDanhSachFileKySo(command: UpdateDanhSachFileKySoCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật ký số thành công
     */
    capNhatKySoThanhCong(command: CapNhatKySoThanhCongCommand): Observable<ApiResultOfBoolean>;
    /**
     * Truy vấn thông tin thuế
     * @param idPhieuLienThongThue (optional) 
     * @param loaiTruyVanThue (optional) 
     * @param isGetNewest (optional) 
     */
    truyVanThue(idPhieuLienThongThue: string | null | undefined, loaiTruyVanThue: LoaiTruyVanThue | undefined, isGetNewest: boolean | null | undefined): Observable<ApiResultOfTruyVanThueDto>;
    /**
     * Tìm kiếm phiếu liên thông thuế theo các tiêu chí khác nhau, có phân trang
     */
    searchPhieuLienThongThue(request: SearchPhieuLienThongThueQuery): Observable<ApiResultOfPagedListOfSearchPhieuLienThongThueDto>;
    /**
     * Lấy thông tin hồ sơ theo id chủ sử dụng thửa đất
     */
    layThongTinHoSoByIdChuSd(idChuSdThuaDat: string | null): Observable<ApiResultOfLayThongTinHoSoByIdChuSdDto>;
    /**
     * Lấy thông tin hồ sơ theo id chủ sử dụng thửa đất
     */
    layThongTinPhieuChuyenByDanhSachIdChuSd(request: LayThongTinHoSoByDanhSachIdChuSdThuaDatQuery): Observable<ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto>;
    layThongBaoThue(idPhieuLienThongThue: string | null | undefined): Observable<ApiResultOfIListOfNguoiNopThueDto>;
    /**
     * Lấy nội dung phiếu chuyển NVTC XML
     */
    getNoiDungGuiPhieuChuyenNvtc(idBienDong: string | null, idChuSdThuaDat: string | null): Observable<ApiResultOfNoiDungPhieuChuyenVm>;
    /**
     * Lấy thông tin phiếu chuyển NVTC Thủ công
     */
    getPhieuChuyenNvtcThuCong(idHsdkPhieuChuyen: string | null): Observable<ApiResultOfPhieuChuyenThueThuCongDto>;
    /**
     * Lấy danh sách file cần ký số
     */
    getDanhSachFileCanKySo(idBienDong: string | null, idChuSdThuaDat: string | null): Observable<ApiResultOfStringOf>;
    /**
     * Phiếu chuyển thuế từ standard theo các tiêu chí khác nhau, có phân trang
     */
    getPhieuChuyenThueStandard(request: GetPhieuChuyenThueStandardQuery): Observable<ApiResultOfPagedListOfPhieuChuyenThueStandard>;
    /**
     * Lấy nội dung phiếu chuyển NVTC XML theo ID
     * @param id (optional) 
     */
    getNoiDungGuiPhieuChuyenNvtcById(id: string | null | undefined): Observable<ApiResultOfString>;
    /**
     * Lấy danh sách đơn vị gửi - đơn vị nhận gửi cơ quan thuế
     * @param idHoSo (optional) 
     */
    getDanhSachDonViLienThongThue(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfDonViLienThongThueVm>;
    /**
     * Cập nhật hoàn thành nghĩa vụ tài chính
     */
    checkHoanThanhNvtc(command: CheckHoanThanhNvtcCommand): Observable<ApiResultOfBoolean>;
    /**
     * Lấy danh sách file hồ sơ scan gửi thuế (Đã ký)
     * @param idPhieuChuyen (optional) 
     */
    getDanhSachFileHoSoDaKy(idPhieuChuyen: string | null | undefined): Observable<ApiResultOfIListOfFileDinhKemVm>;
    /**
     * Lấy thông tin hồ sơ theo id biến động
     */
    layThongTinHoSoByIdBienDong(idBienDong: string | null): Observable<ApiResultOfHoSoByIdDto>;
    /**
     * Bao cao ho so lien thong thue
     */
    baoCaoHoSoLienThong(request: BaoCaoHoSoLienThongThueQuery): Observable<ApiResultOfIListOfBaoCaoHoSoLienThongViewModel>;
    /**
     * Cap nhat file phieu chuyen thue PDF
    Duong dan file tuong doi
     */
    capNhatPhieuChuyenPdf(request: CapNhatPhieuChuyenPdfCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cap nhat so phieu va ngay phat hanh
     */
    capNhatPhatHanhPhieuChuyen(request: CapNhatPhatHanhPhieuChuyenCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class HoSoDangKyClient implements IHoSoDangKyClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận hồ sơ đăng ký mới
     */
    taoMoiHoSoDangKyMoi(command: CreateHoSoDangKyMoiCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/TaoMoiHoSoDangKyMoi";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTaoMoiHoSoDangKyMoi(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTaoMoiHoSoDangKyMoi(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTaoMoiHoSoDangKyMoi(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tạo phiếu chuyển nghĩa vụ tài chính thủ công
     */
    taoPhieuChuyenNvtcThuCong(command: CreateOrUpdatePhieuChuyenNvtcThuCongCommand): Observable<ApiResultOfCreateOrEditPhieuChuyenDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/TaoPhieuChuyenNvtcThuCong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTaoPhieuChuyenNvtcThuCong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTaoPhieuChuyenNvtcThuCong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfCreateOrEditPhieuChuyenDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfCreateOrEditPhieuChuyenDto>><any>_observableThrow(response_);
        }));
    }

    protected processTaoPhieuChuyenNvtcThuCong(response: HttpResponseBase): Observable<ApiResultOfCreateOrEditPhieuChuyenDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfCreateOrEditPhieuChuyenDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfCreateOrEditPhieuChuyenDto>(<any>null);
    }

    /**
     * Tiếp nhận hồ sơ đăng ký mới
     */
    taoMoiHoSoDangKyBienDong(command: CreateHoSoDangKyBienDongCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/TaoMoiHoSoDangKyBienDong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTaoMoiHoSoDangKyBienDong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTaoMoiHoSoDangKyBienDong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTaoMoiHoSoDangKyBienDong(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Sửa thông tin của hồ sơ đăng ký.
     */
    chinhSuaHoSoDangKy(command: EditHoSoDangKyCommand): Observable<ApiResultOfInteger> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/ChinhSuaHoSoDangKy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChinhSuaHoSoDangKy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChinhSuaHoSoDangKy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfInteger>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfInteger>><any>_observableThrow(response_);
        }));
    }

    protected processChinhSuaHoSoDangKy(response: HttpResponseBase): Observable<ApiResultOfInteger> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfInteger.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfInteger>(<any>null);
    }

    /**
     * Xóa hồ sơ đăng ký
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm hồ sơ theo các tiêu chí khác nhau, có phân trang
     */
    search(request: GetHoSoDangKyByIdHoSoQuery): Observable<ApiResultOfGetHoSoDangKyByIdHoSoDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfGetHoSoDangKyByIdHoSoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfGetHoSoDangKyByIdHoSoDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfGetHoSoDangKyByIdHoSoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfGetHoSoDangKyByIdHoSoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfGetHoSoDangKyByIdHoSoDto>(<any>null);
    }

    /**
     * Get phiếu chuyển thuế
     */
    getPhieuChuyenThue(request: GetHoSoPhieuChuyenThueByIdHoSoQuery): Observable<ApiResultOfIListOfHoSoPhieuChuyenThueVm> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetPhieuChuyenThue";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetPhieuChuyenThue(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetPhieuChuyenThue(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfHoSoPhieuChuyenThueVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfHoSoPhieuChuyenThueVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetPhieuChuyenThue(response: HttpResponseBase): Observable<ApiResultOfIListOfHoSoPhieuChuyenThueVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfHoSoPhieuChuyenThueVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfHoSoPhieuChuyenThueVm>(<any>null);
    }

    /**
     * Gửi phiếu chuyển thuế
     */
    guiPhieuChuyenNvtc(command: GuiPhieuChuyenNvtcCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GuiPhieuChuyenNvtc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGuiPhieuChuyenNvtc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGuiPhieuChuyenNvtc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processGuiPhieuChuyenNvtc(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật danh sách file trước khi ký số
     */
    updateDanhSachFileKySo(command: UpdateDanhSachFileKySoCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/UpdateDanhSachFileKySo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpdateDanhSachFileKySo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpdateDanhSachFileKySo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processUpdateDanhSachFileKySo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật ký số thành công
     */
    capNhatKySoThanhCong(command: CapNhatKySoThanhCongCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/CapNhatKySoThanhCong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatKySoThanhCong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatKySoThanhCong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatKySoThanhCong(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Truy vấn thông tin thuế
     * @param idPhieuLienThongThue (optional) 
     * @param loaiTruyVanThue (optional) 
     * @param isGetNewest (optional) 
     */
    truyVanThue(idPhieuLienThongThue: string | null | undefined, loaiTruyVanThue: LoaiTruyVanThue | undefined, isGetNewest: boolean | null | undefined): Observable<ApiResultOfTruyVanThueDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/TruyVanThue?";
        if (idPhieuLienThongThue !== undefined && idPhieuLienThongThue !== null)
            url_ += "idPhieuLienThongThue=" + encodeURIComponent("" + idPhieuLienThongThue) + "&";
        if (loaiTruyVanThue === null)
            throw new Error("The parameter 'loaiTruyVanThue' cannot be null.");
        else if (loaiTruyVanThue !== undefined)
            url_ += "loaiTruyVanThue=" + encodeURIComponent("" + loaiTruyVanThue) + "&";
        if (isGetNewest !== undefined && isGetNewest !== null)
            url_ += "isGetNewest=" + encodeURIComponent("" + isGetNewest) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTruyVanThue(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTruyVanThue(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfTruyVanThueDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfTruyVanThueDto>><any>_observableThrow(response_);
        }));
    }

    protected processTruyVanThue(response: HttpResponseBase): Observable<ApiResultOfTruyVanThueDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfTruyVanThueDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfTruyVanThueDto>(<any>null);
    }

    /**
     * Tìm kiếm phiếu liên thông thuế theo các tiêu chí khác nhau, có phân trang
     */
    searchPhieuLienThongThue(request: SearchPhieuLienThongThueQuery): Observable<ApiResultOfPagedListOfSearchPhieuLienThongThueDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/SearchPhieuLienThongThue";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchPhieuLienThongThue(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchPhieuLienThongThue(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchPhieuLienThongThueDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchPhieuLienThongThueDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearchPhieuLienThongThue(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchPhieuLienThongThueDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchPhieuLienThongThueDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchPhieuLienThongThueDto>(<any>null);
    }

    /**
     * Lấy thông tin hồ sơ theo id chủ sử dụng thửa đất
     */
    layThongTinHoSoByIdChuSd(idChuSdThuaDat: string | null): Observable<ApiResultOfLayThongTinHoSoByIdChuSdDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/LayThongTinHoSoByIdChuSd/{idChuSdThuaDat}";
        if (idChuSdThuaDat === undefined || idChuSdThuaDat === null)
            throw new Error("The parameter 'idChuSdThuaDat' must be defined.");
        url_ = url_.replace("{idChuSdThuaDat}", encodeURIComponent("" + idChuSdThuaDat));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayThongTinHoSoByIdChuSd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayThongTinHoSoByIdChuSd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfLayThongTinHoSoByIdChuSdDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfLayThongTinHoSoByIdChuSdDto>><any>_observableThrow(response_);
        }));
    }

    protected processLayThongTinHoSoByIdChuSd(response: HttpResponseBase): Observable<ApiResultOfLayThongTinHoSoByIdChuSdDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfLayThongTinHoSoByIdChuSdDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfLayThongTinHoSoByIdChuSdDto>(<any>null);
    }

    /**
     * Lấy thông tin hồ sơ theo id chủ sử dụng thửa đất
     */
    layThongTinPhieuChuyenByDanhSachIdChuSd(request: LayThongTinHoSoByDanhSachIdChuSdThuaDatQuery): Observable<ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/LayThongTinPhieuChuyenByDanhSachIdChuSd";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayThongTinPhieuChuyenByDanhSachIdChuSd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayThongTinPhieuChuyenByDanhSachIdChuSd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto>><any>_observableThrow(response_);
        }));
    }

    protected processLayThongTinPhieuChuyenByDanhSachIdChuSd(response: HttpResponseBase): Observable<ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto>(<any>null);
    }

    layThongBaoThue(idPhieuLienThongThue: string | null | undefined): Observable<ApiResultOfIListOfNguoiNopThueDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/LayThongBaoThue?";
        if (idPhieuLienThongThue !== undefined && idPhieuLienThongThue !== null)
            url_ += "idPhieuLienThongThue=" + encodeURIComponent("" + idPhieuLienThongThue) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayThongBaoThue(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayThongBaoThue(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfNguoiNopThueDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfNguoiNopThueDto>><any>_observableThrow(response_);
        }));
    }

    protected processLayThongBaoThue(response: HttpResponseBase): Observable<ApiResultOfIListOfNguoiNopThueDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfNguoiNopThueDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfNguoiNopThueDto>(<any>null);
    }

    /**
     * Lấy nội dung phiếu chuyển NVTC XML
     */
    getNoiDungGuiPhieuChuyenNvtc(idBienDong: string | null, idChuSdThuaDat: string | null): Observable<ApiResultOfNoiDungPhieuChuyenVm> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetNoiDungGuiPhieuChuyenNvtc/{idBienDong}/{idChuSdThuaDat}";
        if (idBienDong === undefined || idBienDong === null)
            throw new Error("The parameter 'idBienDong' must be defined.");
        url_ = url_.replace("{idBienDong}", encodeURIComponent("" + idBienDong));
        if (idChuSdThuaDat === undefined || idChuSdThuaDat === null)
            throw new Error("The parameter 'idChuSdThuaDat' must be defined.");
        url_ = url_.replace("{idChuSdThuaDat}", encodeURIComponent("" + idChuSdThuaDat));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetNoiDungGuiPhieuChuyenNvtc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetNoiDungGuiPhieuChuyenNvtc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfNoiDungPhieuChuyenVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfNoiDungPhieuChuyenVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetNoiDungGuiPhieuChuyenNvtc(response: HttpResponseBase): Observable<ApiResultOfNoiDungPhieuChuyenVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfNoiDungPhieuChuyenVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfNoiDungPhieuChuyenVm>(<any>null);
    }

    /**
     * Lấy thông tin phiếu chuyển NVTC Thủ công
     */
    getPhieuChuyenNvtcThuCong(idHsdkPhieuChuyen: string | null): Observable<ApiResultOfPhieuChuyenThueThuCongDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetPhieuChuyenNvtcThuCong/{idHsdkPhieuChuyen}";
        if (idHsdkPhieuChuyen === undefined || idHsdkPhieuChuyen === null)
            throw new Error("The parameter 'idHsdkPhieuChuyen' must be defined.");
        url_ = url_.replace("{idHsdkPhieuChuyen}", encodeURIComponent("" + idHsdkPhieuChuyen));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetPhieuChuyenNvtcThuCong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetPhieuChuyenNvtcThuCong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPhieuChuyenThueThuCongDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPhieuChuyenThueThuCongDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetPhieuChuyenNvtcThuCong(response: HttpResponseBase): Observable<ApiResultOfPhieuChuyenThueThuCongDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPhieuChuyenThueThuCongDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPhieuChuyenThueThuCongDto>(<any>null);
    }

    /**
     * Lấy danh sách file cần ký số
     */
    getDanhSachFileCanKySo(idBienDong: string | null, idChuSdThuaDat: string | null): Observable<ApiResultOfStringOf> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetDanhSachFileCanKySo/{idBienDong}/{idChuSdThuaDat}";
        if (idBienDong === undefined || idBienDong === null)
            throw new Error("The parameter 'idBienDong' must be defined.");
        url_ = url_.replace("{idBienDong}", encodeURIComponent("" + idBienDong));
        if (idChuSdThuaDat === undefined || idChuSdThuaDat === null)
            throw new Error("The parameter 'idChuSdThuaDat' must be defined.");
        url_ = url_.replace("{idChuSdThuaDat}", encodeURIComponent("" + idChuSdThuaDat));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachFileCanKySo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachFileCanKySo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfStringOf>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfStringOf>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachFileCanKySo(response: HttpResponseBase): Observable<ApiResultOfStringOf> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfStringOf.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfStringOf>(<any>null);
    }

    /**
     * Phiếu chuyển thuế từ standard theo các tiêu chí khác nhau, có phân trang
     */
    getPhieuChuyenThueStandard(request: GetPhieuChuyenThueStandardQuery): Observable<ApiResultOfPagedListOfPhieuChuyenThueStandard> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetPhieuChuyenThueStandard";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetPhieuChuyenThueStandard(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetPhieuChuyenThueStandard(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfPhieuChuyenThueStandard>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfPhieuChuyenThueStandard>><any>_observableThrow(response_);
        }));
    }

    protected processGetPhieuChuyenThueStandard(response: HttpResponseBase): Observable<ApiResultOfPagedListOfPhieuChuyenThueStandard> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfPhieuChuyenThueStandard.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfPhieuChuyenThueStandard>(<any>null);
    }

    /**
     * Lấy nội dung phiếu chuyển NVTC XML theo ID
     * @param id (optional) 
     */
    getNoiDungGuiPhieuChuyenNvtcById(id: string | null | undefined): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetNoiDungGuiPhieuChuyenNvtcById?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetNoiDungGuiPhieuChuyenNvtcById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetNoiDungGuiPhieuChuyenNvtcById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processGetNoiDungGuiPhieuChuyenNvtcById(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Lấy danh sách đơn vị gửi - đơn vị nhận gửi cơ quan thuế
     * @param idHoSo (optional) 
     */
    getDanhSachDonViLienThongThue(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfDonViLienThongThueVm> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetDanhSachDonViLienThongThue?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachDonViLienThongThue(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachDonViLienThongThue(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDonViLienThongThueVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDonViLienThongThueVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachDonViLienThongThue(response: HttpResponseBase): Observable<ApiResultOfIListOfDonViLienThongThueVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDonViLienThongThueVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDonViLienThongThueVm>(<any>null);
    }

    /**
     * Cập nhật hoàn thành nghĩa vụ tài chính
     */
    checkHoanThanhNvtc(command: CheckHoanThanhNvtcCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/CheckHoanThanhNvtc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCheckHoanThanhNvtc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCheckHoanThanhNvtc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCheckHoanThanhNvtc(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy danh sách file hồ sơ scan gửi thuế (Đã ký)
     * @param idPhieuChuyen (optional) 
     */
    getDanhSachFileHoSoDaKy(idPhieuChuyen: string | null | undefined): Observable<ApiResultOfIListOfFileDinhKemVm> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/GetDanhSachFileHoSoDaKy?";
        if (idPhieuChuyen !== undefined && idPhieuChuyen !== null)
            url_ += "idPhieuChuyen=" + encodeURIComponent("" + idPhieuChuyen) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachFileHoSoDaKy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachFileHoSoDaKy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfFileDinhKemVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfFileDinhKemVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachFileHoSoDaKy(response: HttpResponseBase): Observable<ApiResultOfIListOfFileDinhKemVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfFileDinhKemVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfFileDinhKemVm>(<any>null);
    }

    /**
     * Lấy thông tin hồ sơ theo id biến động
     */
    layThongTinHoSoByIdBienDong(idBienDong: string | null): Observable<ApiResultOfHoSoByIdDto> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/LayThongTinHoSoByIdBienDong/{idBienDong}";
        if (idBienDong === undefined || idBienDong === null)
            throw new Error("The parameter 'idBienDong' must be defined.");
        url_ = url_.replace("{idBienDong}", encodeURIComponent("" + idBienDong));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayThongTinHoSoByIdBienDong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayThongTinHoSoByIdBienDong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfHoSoByIdDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfHoSoByIdDto>><any>_observableThrow(response_);
        }));
    }

    protected processLayThongTinHoSoByIdBienDong(response: HttpResponseBase): Observable<ApiResultOfHoSoByIdDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfHoSoByIdDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfHoSoByIdDto>(<any>null);
    }

    /**
     * Bao cao ho so lien thong thue
     */
    baoCaoHoSoLienThong(request: BaoCaoHoSoLienThongThueQuery): Observable<ApiResultOfIListOfBaoCaoHoSoLienThongViewModel> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/BaoCaoHoSoLienThong";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBaoCaoHoSoLienThong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBaoCaoHoSoLienThong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBaoCaoHoSoLienThongViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBaoCaoHoSoLienThongViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processBaoCaoHoSoLienThong(response: HttpResponseBase): Observable<ApiResultOfIListOfBaoCaoHoSoLienThongViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBaoCaoHoSoLienThongViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBaoCaoHoSoLienThongViewModel>(<any>null);
    }

    /**
     * Cap nhat file phieu chuyen thue PDF
    Duong dan file tuong doi
     */
    capNhatPhieuChuyenPdf(request: CapNhatPhieuChuyenPdfCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/CapNhatPhieuChuyenPdf";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatPhieuChuyenPdf(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatPhieuChuyenPdf(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatPhieuChuyenPdf(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cap nhat so phieu va ngay phat hanh
     */
    capNhatPhatHanhPhieuChuyen(request: CapNhatPhatHanhPhieuChuyenCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoDangKy/CapNhatPhatHanhPhieuChuyen";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatPhatHanhPhieuChuyen(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatPhatHanhPhieuChuyen(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatPhatHanhPhieuChuyen(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IHoSoFileDinhKemClient {
    /**
     * Lấy danh sách file đính kèm theo bước xử lý.
     * @param idHoSo (optional) 
     * @param idBuoc (optional) 
     */
    getFileDinhKemByIdBuocXuLy(idHoSo: string | null | undefined, idBuoc: string | null | undefined): Observable<ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto>;
    /**
     * Xóa file đính kèm của hồ sơ
     * @param id (optional) 
     * @param idHoSo (optional) 
     */
    delete(id: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Xóa văn bản xử lý
     * @param id (optional) 
     * @param idHoSo (optional) 
     */
    xoaVanBanXuLy(id: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfBoolean>;
    onPostUpload(): Observable<string>;
    upFileSignedToStorage(command: UpFileSignedToStorageCommand): Observable<ApiResultOfBoolean>;
    upFileXacNhanNVTC(command: UpFileXacNhanNVTCCommand): Observable<ApiResultOfFileXacNhanNVTCVm>;
}

@Injectable({
    providedIn: 'root'
})
export class HoSoFileDinhKemClient implements IHoSoFileDinhKemClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách file đính kèm theo bước xử lý.
     * @param idHoSo (optional) 
     * @param idBuoc (optional) 
     */
    getFileDinhKemByIdBuocXuLy(idHoSo: string | null | undefined, idBuoc: string | null | undefined): Observable<ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto> {
        let url_ = this.baseUrl + "/api/HoSoFileDinhKem/GetFileDinhKemByIdBuocXuLy?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "IdBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetFileDinhKemByIdBuocXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetFileDinhKemByIdBuocXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetFileDinhKemByIdBuocXuLy(response: HttpResponseBase): Observable<ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto>(<any>null);
    }

    /**
     * Xóa file đính kèm của hồ sơ
     * @param id (optional) 
     * @param idHoSo (optional) 
     */
    delete(id: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoFileDinhKem/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Xóa văn bản xử lý
     * @param id (optional) 
     * @param idHoSo (optional) 
     */
    xoaVanBanXuLy(id: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoFileDinhKem/XoaVanBanXuLy?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processXoaVanBanXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processXoaVanBanXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processXoaVanBanXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    onPostUpload(): Observable<string> {
        let url_ = this.baseUrl + "/api/HoSoFileDinhKem/OnPostUpload";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processOnPostUpload(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processOnPostUpload(<any>response_);
                } catch (e) {
                    return <Observable<string>><any>_observableThrow(e);
                }
            } else
                return <Observable<string>><any>_observableThrow(response_);
        }));
    }

    protected processOnPostUpload(response: HttpResponseBase): Observable<string> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = resultData200 !== undefined ? resultData200 : <any>null;
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<string>(<any>null);
    }

    upFileSignedToStorage(command: UpFileSignedToStorageCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/HoSoFileDinhKem/UpFileSignedToStorage";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpFileSignedToStorage(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpFileSignedToStorage(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processUpFileSignedToStorage(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    upFileXacNhanNVTC(command: UpFileXacNhanNVTCCommand): Observable<ApiResultOfFileXacNhanNVTCVm> {
        let url_ = this.baseUrl + "/api/HoSoFileDinhKem/UpFileXacNhanNVTC";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpFileXacNhanNVTC(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpFileXacNhanNVTC(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfFileXacNhanNVTCVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfFileXacNhanNVTCVm>><any>_observableThrow(response_);
        }));
    }

    protected processUpFileXacNhanNVTC(response: HttpResponseBase): Observable<ApiResultOfFileXacNhanNVTCVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfFileXacNhanNVTCVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfFileXacNhanNVTCVm>(<any>null);
    }
}

export interface IHoSoLoaiGiayToClient {
    /**
     * Lấy toàn bộ loại giấy tờ của một hồ sơ theo id hồ sơ
     * @param id (optional) 
     */
    getAllByIdHoSo(id: string | null | undefined): Observable<ApiResultOfIListOfHoSoLoaiGiayTo>;
    /**
     * Lấy toàn bộ file đính kèm của một hồ sơ theo id hồ sơ
     * @param idHoSo (optional) 
     */
    getAllFileDinhKemByIdHoSo(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfFileDinhKem>;
    /**
     * Lấy tất cả file scan của hồ sơ theo id hồ sơ (cả file nôp; cán bộ upload; file chuyển thuế)
     * @param idHoSo (optional) 
     */
    getAllFileOfHoSo(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfFileDinhKem>;
}

@Injectable({
    providedIn: 'root'
})
export class HoSoLoaiGiayToClient implements IHoSoLoaiGiayToClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ loại giấy tờ của một hồ sơ theo id hồ sơ
     * @param id (optional) 
     */
    getAllByIdHoSo(id: string | null | undefined): Observable<ApiResultOfIListOfHoSoLoaiGiayTo> {
        let url_ = this.baseUrl + "/api/HoSoLoaiGiayTo/GetAllByIdHoSo?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllByIdHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllByIdHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfHoSoLoaiGiayTo>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfHoSoLoaiGiayTo>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllByIdHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfHoSoLoaiGiayTo> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfHoSoLoaiGiayTo.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfHoSoLoaiGiayTo>(<any>null);
    }

    /**
     * Lấy toàn bộ file đính kèm của một hồ sơ theo id hồ sơ
     * @param idHoSo (optional) 
     */
    getAllFileDinhKemByIdHoSo(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfFileDinhKem> {
        let url_ = this.baseUrl + "/api/HoSoLoaiGiayTo/GetAllFileDinhKemByIdHoSo?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllFileDinhKemByIdHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllFileDinhKemByIdHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfFileDinhKem>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfFileDinhKem>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllFileDinhKemByIdHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfFileDinhKem> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfFileDinhKem.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfFileDinhKem>(<any>null);
    }

    /**
     * Lấy tất cả file scan của hồ sơ theo id hồ sơ (cả file nôp; cán bộ upload; file chuyển thuế)
     * @param idHoSo (optional) 
     */
    getAllFileOfHoSo(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfFileDinhKem> {
        let url_ = this.baseUrl + "/api/HoSoLoaiGiayTo/GetAllFileOfHoSo?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllFileOfHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllFileOfHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfFileDinhKem>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfFileDinhKem>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllFileOfHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfFileDinhKem> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfFileDinhKem.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfFileDinhKem>(<any>null);
    }
}

export interface IHoSoQuetClient {
    /**
     * Lấy thông tin hồ sơ quét đã chuyển cadas
     * @param idHoSo (optional) 
     */
    getHoSoQuetByIdHoSo(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfGetHoSoQuetByIdHoSoDto>;
}

@Injectable({
    providedIn: 'root'
})
export class HoSoQuetClient implements IHoSoQuetClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy thông tin hồ sơ quét đã chuyển cadas
     * @param idHoSo (optional) 
     */
    getHoSoQuetByIdHoSo(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfGetHoSoQuetByIdHoSoDto> {
        let url_ = this.baseUrl + "/api/HoSoQuet/GetHoSoQuetByIdHoSo?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetHoSoQuetByIdHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetHoSoQuetByIdHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetHoSoQuetByIdHoSoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetHoSoQuetByIdHoSoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetHoSoQuetByIdHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfGetHoSoQuetByIdHoSoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetHoSoQuetByIdHoSoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetHoSoQuetByIdHoSoDto>(<any>null);
    }
}

export interface ILichLamViecClient {
    /**
     * Lấy danh sách toàn bộ nghiệp vụ đang sử dụng.
     */
    getAllLoaiNgay(): Observable<ApiResultOfIListOfLoaiNgayNghiViewModel>;
    /**
     * Lấy cấu hình lịch làm việc theo tháng
     * @param month (optional) 
     * @param year (optional) 
     */
    getLichLamViecTheoThang(month: number | undefined, year: number | undefined): Observable<ApiResultOfLichLamViecViewModel>;
    /**
     * Cập nhật lịch làm việc theo ngày
     * @param idNgay (optional) 
     * @param idLoaiNgay (optional) 
     * @param ngay (optional) 
     */
    capNhatLichLamViecTheoNgay(idNgay: string | null | undefined, idLoaiNgay: number | undefined, ngay: Date | undefined): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class LichLamViecClient implements ILichLamViecClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách toàn bộ nghiệp vụ đang sử dụng.
     */
    getAllLoaiNgay(): Observable<ApiResultOfIListOfLoaiNgayNghiViewModel> {
        let url_ = this.baseUrl + "/api/LichLamViec/GetAllLoaiNgay";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllLoaiNgay(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllLoaiNgay(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLoaiNgayNghiViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLoaiNgayNghiViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllLoaiNgay(response: HttpResponseBase): Observable<ApiResultOfIListOfLoaiNgayNghiViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLoaiNgayNghiViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLoaiNgayNghiViewModel>(<any>null);
    }

    /**
     * Lấy cấu hình lịch làm việc theo tháng
     * @param month (optional) 
     * @param year (optional) 
     */
    getLichLamViecTheoThang(month: number | undefined, year: number | undefined): Observable<ApiResultOfLichLamViecViewModel> {
        let url_ = this.baseUrl + "/api/LichLamViec/GetLichLamViecTheoThang?";
        if (month === null)
            throw new Error("The parameter 'month' cannot be null.");
        else if (month !== undefined)
            url_ += "month=" + encodeURIComponent("" + month) + "&";
        if (year === null)
            throw new Error("The parameter 'year' cannot be null.");
        else if (year !== undefined)
            url_ += "year=" + encodeURIComponent("" + year) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetLichLamViecTheoThang(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetLichLamViecTheoThang(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfLichLamViecViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfLichLamViecViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetLichLamViecTheoThang(response: HttpResponseBase): Observable<ApiResultOfLichLamViecViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfLichLamViecViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfLichLamViecViewModel>(<any>null);
    }

    /**
     * Cập nhật lịch làm việc theo ngày
     * @param idNgay (optional) 
     * @param idLoaiNgay (optional) 
     * @param ngay (optional) 
     */
    capNhatLichLamViecTheoNgay(idNgay: string | null | undefined, idLoaiNgay: number | undefined, ngay: Date | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/LichLamViec/CapNhatLichLamViecTheoNgay?";
        if (idNgay !== undefined && idNgay !== null)
            url_ += "idNgay=" + encodeURIComponent("" + idNgay) + "&";
        if (idLoaiNgay === null)
            throw new Error("The parameter 'idLoaiNgay' cannot be null.");
        else if (idLoaiNgay !== undefined)
            url_ += "idLoaiNgay=" + encodeURIComponent("" + idLoaiNgay) + "&";
        if (ngay === null)
            throw new Error("The parameter 'ngay' cannot be null.");
        else if (ngay !== undefined)
            url_ += "ngay=" + encodeURIComponent(ngay ? "" + ngay.toJSON() : "") + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatLichLamViecTheoNgay(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatLichLamViecTheoNgay(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatLichLamViecTheoNgay(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface ILichSuPhieuChuyenThueClient {
    /**
     * Lấy lịch sử chuyển thuế by idPhieuChuyenThue
     * @param idPhieuChuyenThue (optional) 
     */
    getLichSuByIdPhieuChuyenThue(idPhieuChuyenThue: string | null | undefined): Observable<ApiResultOfIListOfLichSuPhieuChuyenThueViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class LichSuPhieuChuyenThueClient implements ILichSuPhieuChuyenThueClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy lịch sử chuyển thuế by idPhieuChuyenThue
     * @param idPhieuChuyenThue (optional) 
     */
    getLichSuByIdPhieuChuyenThue(idPhieuChuyenThue: string | null | undefined): Observable<ApiResultOfIListOfLichSuPhieuChuyenThueViewModel> {
        let url_ = this.baseUrl + "/api/LichSuPhieuChuyenThue/GetLichSuByIdPhieuChuyenThue?";
        if (idPhieuChuyenThue !== undefined && idPhieuChuyenThue !== null)
            url_ += "idPhieuChuyenThue=" + encodeURIComponent("" + idPhieuChuyenThue) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetLichSuByIdPhieuChuyenThue(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetLichSuByIdPhieuChuyenThue(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLichSuPhieuChuyenThueViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLichSuPhieuChuyenThueViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetLichSuByIdPhieuChuyenThue(response: HttpResponseBase): Observable<ApiResultOfIListOfLichSuPhieuChuyenThueViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLichSuPhieuChuyenThueViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLichSuPhieuChuyenThueViewModel>(<any>null);
    }
}

export interface ILinhVucClient {
    /**
     * Lấy toàn bộ lĩnh vực
     * @param isNeedToHasThuTucs (optional) 
     */
    getAll(isNeedToHasThuTucs: boolean | undefined): Observable<ApiResultOfIListOfLinhVuc>;
}

@Injectable({
    providedIn: 'root'
})
export class LinhVucClient implements ILinhVucClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ lĩnh vực
     * @param isNeedToHasThuTucs (optional) 
     */
    getAll(isNeedToHasThuTucs: boolean | undefined): Observable<ApiResultOfIListOfLinhVuc> {
        let url_ = this.baseUrl + "/api/LinhVuc/GetAll?";
        if (isNeedToHasThuTucs === null)
            throw new Error("The parameter 'isNeedToHasThuTucs' cannot be null.");
        else if (isNeedToHasThuTucs !== undefined)
            url_ += "isNeedToHasThuTucs=" + encodeURIComponent("" + isNeedToHasThuTucs) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLinhVuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLinhVuc>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfLinhVuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLinhVuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLinhVuc>(<any>null);
    }
}

export interface ILoaiGiayToClient {
    /**
     * Lấy toàn bộ loại giấy tờ
     */
    getAll(): Observable<ApiResultOfIListOfLoaiGiayTo>;
    /**
     * Lấy toàn bộ loại giấy tờ tùy thân
     */
    getAllGiayToTuyThan(): Observable<ApiResultOfIListOfLoaiGiayTo>;
    /**
     * Thêm loại giấy tờ
     */
    add(command: LoaiGiayToViewModel): Observable<ApiResultOfString>;
    /**
     * Sửa loại giấy tờ
     */
    edit(command: LoaiGiayToViewModel): Observable<ApiResultOfString>;
    /**
     * Xóa loại giấy tờ
     * @param id (optional) 
     */
    delete(id: number | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm loại giấy tờ theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: LoaiGiayToRequest): Observable<ApiResultOfPagedListOfLoaiGiayTo>;
}

@Injectable({
    providedIn: 'root'
})
export class LoaiGiayToClient implements ILoaiGiayToClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ loại giấy tờ
     */
    getAll(): Observable<ApiResultOfIListOfLoaiGiayTo> {
        let url_ = this.baseUrl + "/api/LoaiGiayTo/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLoaiGiayTo>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLoaiGiayTo>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfLoaiGiayTo> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLoaiGiayTo.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLoaiGiayTo>(<any>null);
    }

    /**
     * Lấy toàn bộ loại giấy tờ tùy thân
     */
    getAllGiayToTuyThan(): Observable<ApiResultOfIListOfLoaiGiayTo> {
        let url_ = this.baseUrl + "/api/LoaiGiayTo/GetAllGiayToTuyThan";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllGiayToTuyThan(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllGiayToTuyThan(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLoaiGiayTo>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLoaiGiayTo>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllGiayToTuyThan(response: HttpResponseBase): Observable<ApiResultOfIListOfLoaiGiayTo> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLoaiGiayTo.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLoaiGiayTo>(<any>null);
    }

    /**
     * Thêm loại giấy tờ
     */
    add(command: LoaiGiayToViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/LoaiGiayTo/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Sửa loại giấy tờ
     */
    edit(command: LoaiGiayToViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/LoaiGiayTo/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Xóa loại giấy tờ
     * @param id (optional) 
     */
    delete(id: number | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/LoaiGiayTo/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm loại giấy tờ theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: LoaiGiayToRequest): Observable<ApiResultOfPagedListOfLoaiGiayTo> {
        let url_ = this.baseUrl + "/api/LoaiGiayTo/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfLoaiGiayTo>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfLoaiGiayTo>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfLoaiGiayTo> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfLoaiGiayTo.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfLoaiGiayTo>(<any>null);
    }
}

export interface ILoaiHoSoClient {
    /**
     * Lấy toàn bộ loại hồ sơ
     */
    getAll(): Observable<ApiResultOfIListOfLoaiHoSo>;
    /**
     * Thêm loai ho so
     */
    add(command: LoaiHoSoViewModel): Observable<ApiResultOfString>;
    /**
     * Sửa loại hồ sơ
     */
    edit(command: LoaiHoSoViewModel): Observable<ApiResultOfString>;
    /**
     * Xóa loại hồ sơ
     * @param id (optional) 
     */
    delete(id: number | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm loại hồ sơ theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: LoaiHoSoRequest): Observable<ApiResultOfPagedListOfLoaiHoSo>;
}

@Injectable({
    providedIn: 'root'
})
export class LoaiHoSoClient implements ILoaiHoSoClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ loại hồ sơ
     */
    getAll(): Observable<ApiResultOfIListOfLoaiHoSo> {
        let url_ = this.baseUrl + "/api/LoaiHoSo/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLoaiHoSo>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLoaiHoSo>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfLoaiHoSo> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLoaiHoSo.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLoaiHoSo>(<any>null);
    }

    /**
     * Thêm loai ho so
     */
    add(command: LoaiHoSoViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/LoaiHoSo/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Sửa loại hồ sơ
     */
    edit(command: LoaiHoSoViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/LoaiHoSo/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Xóa loại hồ sơ
     * @param id (optional) 
     */
    delete(id: number | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/LoaiHoSo/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfBoolean.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm loại hồ sơ theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: LoaiHoSoRequest): Observable<ApiResultOfPagedListOfLoaiHoSo> {
        let url_ = this.baseUrl + "/api/LoaiHoSo/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfLoaiHoSo>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfLoaiHoSo>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfLoaiHoSo> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfLoaiHoSo.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfLoaiHoSo>(<any>null);
    }
}

export interface ILuongXuLyClient {
    /**
     * Lấy thông tin luồng xử lý của một hồ sơ
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getLuongXuLyTiepTheo(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfIListOfGetLuongXuLyTiepTheoDto>;
}

@Injectable({
    providedIn: 'root'
})
export class LuongXuLyClient implements ILuongXuLyClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy thông tin luồng xử lý của một hồ sơ
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getLuongXuLyTiepTheo(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfIListOfGetLuongXuLyTiepTheoDto> {
        let url_ = this.baseUrl + "/api/LuongXuLy/GetLuongXuLyTiepTheo?";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "idBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetLuongXuLyTiepTheo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetLuongXuLyTiepTheo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetLuongXuLyTiepTheoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetLuongXuLyTiepTheoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetLuongXuLyTiepTheo(response: HttpResponseBase): Observable<ApiResultOfIListOfGetLuongXuLyTiepTheoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetLuongXuLyTiepTheoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetLuongXuLyTiepTheoDto>(<any>null);
    }
}

export interface ILyDoClient {
    getLyDoTheoNghiepVu(idNghiepVu: number | undefined): Observable<ApiResultOfIListOfGetLyDoTheoNghiepVuDto>;
}

@Injectable({
    providedIn: 'root'
})
export class LyDoClient implements ILyDoClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    getLyDoTheoNghiepVu(idNghiepVu: number | undefined): Observable<ApiResultOfIListOfGetLyDoTheoNghiepVuDto> {
        let url_ = this.baseUrl + "/api/LyDo/GetLyDoTheoNghiepVu?";
        if (idNghiepVu === null)
            throw new Error("The parameter 'idNghiepVu' cannot be null.");
        else if (idNghiepVu !== undefined)
            url_ += "idNghiepVu=" + encodeURIComponent("" + idNghiepVu) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetLyDoTheoNghiepVu(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetLyDoTheoNghiepVu(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetLyDoTheoNghiepVuDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetLyDoTheoNghiepVuDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetLyDoTheoNghiepVu(response: HttpResponseBase): Observable<ApiResultOfIListOfGetLyDoTheoNghiepVuDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetLyDoTheoNghiepVuDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetLyDoTheoNghiepVuDto>(<any>null);
    }
}

export interface IMailManagerClient {
    /**
     * Thêm mới cấu hình Mail
     */
    addMailSetting(command: MailSettingViewModel): Observable<ApiResultOfMailSetting>;
    /**
     * Sửa thông tin cấu hình Mail
     */
    editMailSetting(command: MailSettingViewModel): Observable<ApiResultOfMailSetting>;
    /**
     * Xóa một cấu hình Mail
     * @param id (optional) 
     */
    deleteMailSetting(id: number | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm cấu hình Mail
     */
    searchMailSetting(request: MailSettingRequest): Observable<ApiResultOfPagedListOfMailSetting>;
    /**
     * Thêm mới Mail mẫu
     */
    addMailMau(command: MailMauViewModel): Observable<ApiResultOfMailMau>;
    /**
     * Sửa thông tin Mail mẫu
     */
    editMailMau(command: MailMauViewModel): Observable<ApiResultOfMailMau>;
    /**
     * Xóa một Mail mẫu
     * @param id (optional) 
     */
    deleteMailMau(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm Mail mẫu đã soạn
     */
    searchMailMau(request: MailMauRequest): Observable<ApiResultOfPagedListOfMailMau>;
}

@Injectable({
    providedIn: 'root'
})
export class MailManagerClient implements IMailManagerClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm mới cấu hình Mail
     */
    addMailSetting(command: MailSettingViewModel): Observable<ApiResultOfMailSetting> {
        let url_ = this.baseUrl + "/api/MailManager/AddMailSetting";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAddMailSetting(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAddMailSetting(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMailSetting>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMailSetting>><any>_observableThrow(response_);
        }));
    }

    protected processAddMailSetting(response: HttpResponseBase): Observable<ApiResultOfMailSetting> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMailSetting.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMailSetting>(<any>null);
    }

    /**
     * Sửa thông tin cấu hình Mail
     */
    editMailSetting(command: MailSettingViewModel): Observable<ApiResultOfMailSetting> {
        let url_ = this.baseUrl + "/api/MailManager/EditMailSetting";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEditMailSetting(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEditMailSetting(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMailSetting>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMailSetting>><any>_observableThrow(response_);
        }));
    }

    protected processEditMailSetting(response: HttpResponseBase): Observable<ApiResultOfMailSetting> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMailSetting.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMailSetting>(<any>null);
    }

    /**
     * Xóa một cấu hình Mail
     * @param id (optional) 
     */
    deleteMailSetting(id: number | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/MailManager/DeleteMailSetting?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteMailSetting(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteMailSetting(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteMailSetting(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm cấu hình Mail
     */
    searchMailSetting(request: MailSettingRequest): Observable<ApiResultOfPagedListOfMailSetting> {
        let url_ = this.baseUrl + "/api/MailManager/SearchMailSetting";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchMailSetting(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchMailSetting(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfMailSetting>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfMailSetting>><any>_observableThrow(response_);
        }));
    }

    protected processSearchMailSetting(response: HttpResponseBase): Observable<ApiResultOfPagedListOfMailSetting> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfMailSetting.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfMailSetting>(<any>null);
    }

    /**
     * Thêm mới Mail mẫu
     */
    addMailMau(command: MailMauViewModel): Observable<ApiResultOfMailMau> {
        let url_ = this.baseUrl + "/api/MailManager/AddMailMau";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAddMailMau(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAddMailMau(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMailMau>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMailMau>><any>_observableThrow(response_);
        }));
    }

    protected processAddMailMau(response: HttpResponseBase): Observable<ApiResultOfMailMau> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMailMau.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMailMau>(<any>null);
    }

    /**
     * Sửa thông tin Mail mẫu
     */
    editMailMau(command: MailMauViewModel): Observable<ApiResultOfMailMau> {
        let url_ = this.baseUrl + "/api/MailManager/EditMailMau";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEditMailMau(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEditMailMau(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMailMau>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMailMau>><any>_observableThrow(response_);
        }));
    }

    protected processEditMailMau(response: HttpResponseBase): Observable<ApiResultOfMailMau> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMailMau.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMailMau>(<any>null);
    }

    /**
     * Xóa một Mail mẫu
     * @param id (optional) 
     */
    deleteMailMau(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/MailManager/DeleteMailMau?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDeleteMailMau(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDeleteMailMau(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDeleteMailMau(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm Mail mẫu đã soạn
     */
    searchMailMau(request: MailMauRequest): Observable<ApiResultOfPagedListOfMailMau> {
        let url_ = this.baseUrl + "/api/MailManager/SearchMailMau";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchMailMau(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchMailMau(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfMailMau>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfMailMau>><any>_observableThrow(response_);
        }));
    }

    protected processSearchMailMau(response: HttpResponseBase): Observable<ApiResultOfPagedListOfMailMau> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfMailMau.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfMailMau>(<any>null);
    }
}

export interface IMapDanhMucDvcClient {
    /**
     * Thêm map danh mục DVC và LPM
     */
    add(command: MapDanhMucDvcViewModel): Observable<ApiResultOfMapDanhMucDvc>;
    /**
     * Sửa map danh mục DVC và LPM
     */
    edit(command: MapDanhMucDvcViewModel): Observable<ApiResultOfMapDanhMucDvc>;
    /**
     * Lấy danh sách map danh mục DVC và LPM theo loại danh mục
     * @param loai (optional) 
     * @param thamChieuLpm (optional) 
     */
    getByLoaiDanhMuc(loai: string | null | undefined, thamChieuLpm: string | null | undefined): Observable<ApiResultOfMapDanhMucDvc>;
}

@Injectable({
    providedIn: 'root'
})
export class MapDanhMucDvcClient implements IMapDanhMucDvcClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm map danh mục DVC và LPM
     */
    add(command: MapDanhMucDvcViewModel): Observable<ApiResultOfMapDanhMucDvc> {
        let url_ = this.baseUrl + "/api/MapDanhMucDvc/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMapDanhMucDvc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMapDanhMucDvc>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfMapDanhMucDvc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMapDanhMucDvc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMapDanhMucDvc>(<any>null);
    }

    /**
     * Sửa map danh mục DVC và LPM
     */
    edit(command: MapDanhMucDvcViewModel): Observable<ApiResultOfMapDanhMucDvc> {
        let url_ = this.baseUrl + "/api/MapDanhMucDvc/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMapDanhMucDvc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMapDanhMucDvc>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfMapDanhMucDvc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMapDanhMucDvc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMapDanhMucDvc>(<any>null);
    }

    /**
     * Lấy danh sách map danh mục DVC và LPM theo loại danh mục
     * @param loai (optional) 
     * @param thamChieuLpm (optional) 
     */
    getByLoaiDanhMuc(loai: string | null | undefined, thamChieuLpm: string | null | undefined): Observable<ApiResultOfMapDanhMucDvc> {
        let url_ = this.baseUrl + "/api/MapDanhMucDvc/GetByLoaiDanhMuc?";
        if (loai !== undefined && loai !== null)
            url_ += "loai=" + encodeURIComponent("" + loai) + "&";
        if (thamChieuLpm !== undefined && thamChieuLpm !== null)
            url_ += "thamChieuLpm=" + encodeURIComponent("" + thamChieuLpm) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetByLoaiDanhMuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetByLoaiDanhMuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfMapDanhMucDvc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfMapDanhMucDvc>><any>_observableThrow(response_);
        }));
    }

    protected processGetByLoaiDanhMuc(response: HttpResponseBase): Observable<ApiResultOfMapDanhMucDvc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfMapDanhMucDvc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfMapDanhMucDvc>(<any>null);
    }
}

export interface INghiepVuClient {
    /**
     * Lấy danh sách toàn bộ nghiệp vụ đang sử dụng.
     */
    getAllActive(): Observable<ApiResultOfIListOfNghiepVuPublicViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class NghiepVuClient implements INghiepVuClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách toàn bộ nghiệp vụ đang sử dụng.
     */
    getAllActive(): Observable<ApiResultOfIListOfNghiepVuPublicViewModel> {
        let url_ = this.baseUrl + "/api/NghiepVu/GetAllActive";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllActive(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllActive(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfNghiepVuPublicViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfNghiepVuPublicViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllActive(response: HttpResponseBase): Observable<ApiResultOfIListOfNghiepVuPublicViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfNghiepVuPublicViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfNghiepVuPublicViewModel>(<any>null);
    }
}

export interface INotificationClient {
    /**
     * Lấy danh sách notifications cho user đăng nhập
     * @param topNumberMessage (optional) 
     */
    getNotifications(topNumberMessage: number | undefined): Observable<ApiResultOfIListOfCurrentUserNotificationsDto>;
}

@Injectable({
    providedIn: 'root'
})
export class NotificationClient implements INotificationClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách notifications cho user đăng nhập
     * @param topNumberMessage (optional) 
     */
    getNotifications(topNumberMessage: number | undefined): Observable<ApiResultOfIListOfCurrentUserNotificationsDto> {
        let url_ = this.baseUrl + "/api/Notification/GetNotifications?";
        if (topNumberMessage === null)
            throw new Error("The parameter 'topNumberMessage' cannot be null.");
        else if (topNumberMessage !== undefined)
            url_ += "topNumberMessage=" + encodeURIComponent("" + topNumberMessage) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetNotifications(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetNotifications(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfCurrentUserNotificationsDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfCurrentUserNotificationsDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetNotifications(response: HttpResponseBase): Observable<ApiResultOfIListOfCurrentUserNotificationsDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfCurrentUserNotificationsDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfCurrentUserNotificationsDto>(<any>null);
    }
}

export interface IProxyClient {
    index(key: string | null): Observable<FileResponse>;
}

@Injectable({
    providedIn: 'root'
})
export class ProxyClient implements IProxyClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    index(key: string | null): Observable<FileResponse> {
        let url_ = this.baseUrl + "/proxy/{key}";
        if (key === undefined || key === null)
            throw new Error("The parameter 'key' must be defined.");
        url_ = url_.replace("{key}", encodeURIComponent("" + key));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/octet-stream"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processIndex(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processIndex(<any>response_);
                } catch (e) {
                    return <Observable<FileResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<FileResponse>><any>_observableThrow(response_);
        }));
    }

    protected processIndex(response: HttpResponseBase): Observable<FileResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200 || status === 206) {
            const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
            const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
            const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
            return _observableOf({ fileName: fileName, data: <any>responseBlob, status: status, headers: _headers });
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<FileResponse>(<any>null);
    }
}

export interface IQthtClient {
    /**
     * Lấy ds người thực hiện theo ĐVHC
     * @param dvhcId (optional) 
     */
    getUserByDvhc(dvhcId: string | null | undefined): Observable<ApiResultOfIListOfQthtUserViewModel>;
    /**
     * Lấy config từ qtht
     */
    getConfigFromQtht(): Observable<ApiResultOfCustomerConfigViewModel>;
    /**
     * Lấy danh sách nhóm chức năng được phân quyền
     */
    getActionGroupsCodeByCurrentUser(): Observable<ApiResultOfListOfString>;
    /**
     * Lấy danh sách nhóm chức năng được phân quyền
     */
    getCurrentUserInfo(): Observable<ApiResultOfUserInfoQtht>;
    /**
     * Lấy ds người dung theo appcode
     */
    getListUser(): Observable<ApiResultOfIListOfQthtUserViewModel>;
    /**
     * Lấy danh sách log thao tác người dùng
     */
    searchLogBusiness(request: QthtSearchLogBusinessRequest): Observable<ApiResultOfQthtLogBusinessModel>;
    /**
     * Lấy danh sách phòng ban theo danh sách người dùng
     */
    getPhongBanByListUserIds(userIds: string[]): Observable<ApiResultOfIListOfQTHTPhongBanViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class QthtClient implements IQthtClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy ds người thực hiện theo ĐVHC
     * @param dvhcId (optional) 
     */
    getUserByDvhc(dvhcId: string | null | undefined): Observable<ApiResultOfIListOfQthtUserViewModel> {
        let url_ = this.baseUrl + "/api/Qtht/GetUserByDvhc?";
        if (dvhcId !== undefined && dvhcId !== null)
            url_ += "dvhcId=" + encodeURIComponent("" + dvhcId) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetUserByDvhc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetUserByDvhc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfQthtUserViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfQthtUserViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetUserByDvhc(response: HttpResponseBase): Observable<ApiResultOfIListOfQthtUserViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfQthtUserViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfQthtUserViewModel>(<any>null);
    }

    /**
     * Lấy config từ qtht
     */
    getConfigFromQtht(): Observable<ApiResultOfCustomerConfigViewModel> {
        let url_ = this.baseUrl + "/api/Qtht/GetConfigFromQtht";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetConfigFromQtht(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetConfigFromQtht(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfCustomerConfigViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfCustomerConfigViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetConfigFromQtht(response: HttpResponseBase): Observable<ApiResultOfCustomerConfigViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfCustomerConfigViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfCustomerConfigViewModel>(<any>null);
    }

    /**
     * Lấy danh sách nhóm chức năng được phân quyền
     */
    getActionGroupsCodeByCurrentUser(): Observable<ApiResultOfListOfString> {
        let url_ = this.baseUrl + "/api/Qtht/GetActionGroupsCodeByCurrentUser";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetActionGroupsCodeByCurrentUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetActionGroupsCodeByCurrentUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfListOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfListOfString>><any>_observableThrow(response_);
        }));
    }

    protected processGetActionGroupsCodeByCurrentUser(response: HttpResponseBase): Observable<ApiResultOfListOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfListOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfListOfString>(<any>null);
    }

    /**
     * Lấy danh sách nhóm chức năng được phân quyền
     */
    getCurrentUserInfo(): Observable<ApiResultOfUserInfoQtht> {
        let url_ = this.baseUrl + "/api/Qtht/GetCurrentUserInfo";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCurrentUserInfo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCurrentUserInfo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfUserInfoQtht>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfUserInfoQtht>><any>_observableThrow(response_);
        }));
    }

    protected processGetCurrentUserInfo(response: HttpResponseBase): Observable<ApiResultOfUserInfoQtht> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfUserInfoQtht.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfUserInfoQtht>(<any>null);
    }

    /**
     * Lấy ds người dung theo appcode
     */
    getListUser(): Observable<ApiResultOfIListOfQthtUserViewModel> {
        let url_ = this.baseUrl + "/api/Qtht/GetListUser";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetListUser(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetListUser(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfQthtUserViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfQthtUserViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetListUser(response: HttpResponseBase): Observable<ApiResultOfIListOfQthtUserViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfQthtUserViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfQthtUserViewModel>(<any>null);
    }

    /**
     * Lấy danh sách log thao tác người dùng
     */
    searchLogBusiness(request: QthtSearchLogBusinessRequest): Observable<ApiResultOfQthtLogBusinessModel> {
        let url_ = this.baseUrl + "/api/Qtht/SearchLogBusiness";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchLogBusiness(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchLogBusiness(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfQthtLogBusinessModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfQthtLogBusinessModel>><any>_observableThrow(response_);
        }));
    }

    protected processSearchLogBusiness(response: HttpResponseBase): Observable<ApiResultOfQthtLogBusinessModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfQthtLogBusinessModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfQthtLogBusinessModel.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfQthtLogBusinessModel>(<any>null);
    }

    /**
     * Lấy danh sách phòng ban theo danh sách người dùng
     */
    getPhongBanByListUserIds(userIds: string[]): Observable<ApiResultOfIListOfQTHTPhongBanViewModel> {
        let url_ = this.baseUrl + "/api/Qtht/GetPhongBanByListUserIds";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(userIds);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetPhongBanByListUserIds(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetPhongBanByListUserIds(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfQTHTPhongBanViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfQTHTPhongBanViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetPhongBanByListUserIds(response: HttpResponseBase): Observable<ApiResultOfIListOfQTHTPhongBanViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfQTHTPhongBanViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfQTHTPhongBanViewModel>(<any>null);
    }
}

export interface IQuyTrinhClient {
    /**
     * Lấy thông tin quy trình theo id
     */
    getById(id: string | null): Observable<ApiResultOfQuyTrinh>;
    /**
     * Lấy toàn bộ các quy trình
     */
    getAll(): Observable<ApiResultOfIListOfQuyTrinh>;
    /**
     * Lấy toàn bộ quy trình thuộc một thủ tục.
     * @param id (optional) 
     */
    getAllActiveByThuTucId(id: string | null | undefined): Observable<ApiResultOfIListOfQuyTrinh>;
}

@Injectable({
    providedIn: 'root'
})
export class QuyTrinhClient implements IQuyTrinhClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy thông tin quy trình theo id
     */
    getById(id: string | null): Observable<ApiResultOfQuyTrinh> {
        let url_ = this.baseUrl + "/api/QuyTrinh/GetById/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfQuyTrinh>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfQuyTrinh>><any>_observableThrow(response_);
        }));
    }

    protected processGetById(response: HttpResponseBase): Observable<ApiResultOfQuyTrinh> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfQuyTrinh.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfQuyTrinh>(<any>null);
    }

    /**
     * Lấy toàn bộ các quy trình
     */
    getAll(): Observable<ApiResultOfIListOfQuyTrinh> {
        let url_ = this.baseUrl + "/api/QuyTrinh/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfQuyTrinh>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfQuyTrinh>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfQuyTrinh> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfQuyTrinh.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfQuyTrinh>(<any>null);
    }

    /**
     * Lấy toàn bộ quy trình thuộc một thủ tục.
     * @param id (optional) 
     */
    getAllActiveByThuTucId(id: string | null | undefined): Observable<ApiResultOfIListOfQuyTrinh> {
        let url_ = this.baseUrl + "/api/QuyTrinh/GetAllActiveByThuTucId?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllActiveByThuTucId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllActiveByThuTucId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfQuyTrinh>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfQuyTrinh>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllActiveByThuTucId(response: HttpResponseBase): Observable<ApiResultOfIListOfQuyTrinh> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfQuyTrinh.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfQuyTrinh>(<any>null);
    }
}

export interface IShortUrlClient {
    createShortUrl(command: CreateShortUrlCommand): Observable<ApiResultOfShortUrlVM>;
}

@Injectable({
    providedIn: 'root'
})
export class ShortUrlClient implements IShortUrlClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    createShortUrl(command: CreateShortUrlCommand): Observable<ApiResultOfShortUrlVM> {
        let url_ = this.baseUrl + "/api/ShortUrl/CreateShortUrl";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCreateShortUrl(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCreateShortUrl(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfShortUrlVM>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfShortUrlVM>><any>_observableThrow(response_);
        }));
    }

    protected processCreateShortUrl(response: HttpResponseBase): Observable<ApiResultOfShortUrlVM> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfShortUrlVM.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfShortUrlVM>(<any>null);
    }
}

export interface ITheoDoiCongViecClient {
    /**
     * Lấy thống kê công việc
     */
    getThongKeCongViec(): Observable<ApiResultOfThongKeCongViecDto>;
    /**
     * Lấy thống kê công việc cho lãnh đạo
     */
    getThongKeCongViecChoLanhDao(): Observable<ApiResultOfThongKeCongViecChoLanhDaoDto>;
}

@Injectable({
    providedIn: 'root'
})
export class TheoDoiCongViecClient implements ITheoDoiCongViecClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy thống kê công việc
     */
    getThongKeCongViec(): Observable<ApiResultOfThongKeCongViecDto> {
        let url_ = this.baseUrl + "/api/TheoDoiCongViec/GetThongKeCongViec";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThongKeCongViec(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThongKeCongViec(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfThongKeCongViecDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfThongKeCongViecDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetThongKeCongViec(response: HttpResponseBase): Observable<ApiResultOfThongKeCongViecDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfThongKeCongViecDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfThongKeCongViecDto>(<any>null);
    }

    /**
     * Lấy thống kê công việc cho lãnh đạo
     */
    getThongKeCongViecChoLanhDao(): Observable<ApiResultOfThongKeCongViecChoLanhDaoDto> {
        let url_ = this.baseUrl + "/api/TheoDoiCongViec/GetThongKeCongViecChoLanhDao";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThongKeCongViecChoLanhDao(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThongKeCongViecChoLanhDao(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfThongKeCongViecChoLanhDaoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfThongKeCongViecChoLanhDaoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetThongKeCongViecChoLanhDao(response: HttpResponseBase): Observable<ApiResultOfThongKeCongViecChoLanhDaoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfThongKeCongViecChoLanhDaoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfThongKeCongViecChoLanhDaoDto>(<any>null);
    }
}

export interface IThuTucClient {
    /**
     * Lấy danh sách toàn bộ các thủ tục
     */
    getAll(): Observable<ApiResultOfIListOfThuTuc>;
    /**
     * Lấy toàn bộ các thủ tục thuộc một lĩnh vực theo id lĩnh vực
     * @param id (optional) 
     */
    getAllByLinhVucId(id: string | null | undefined): Observable<ApiResultOfIListOfThuTuc>;
}

@Injectable({
    providedIn: 'root'
})
export class ThuTucClient implements IThuTucClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách toàn bộ các thủ tục
     */
    getAll(): Observable<ApiResultOfIListOfThuTuc> {
        let url_ = this.baseUrl + "/api/ThuTuc/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfThuTuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfThuTuc>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfThuTuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfThuTuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfThuTuc>(<any>null);
    }

    /**
     * Lấy toàn bộ các thủ tục thuộc một lĩnh vực theo id lĩnh vực
     * @param id (optional) 
     */
    getAllByLinhVucId(id: string | null | undefined): Observable<ApiResultOfIListOfThuTuc> {
        let url_ = this.baseUrl + "/api/ThuTuc/GetAllByLinhVucId?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllByLinhVucId(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllByLinhVucId(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfThuTuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfThuTuc>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllByLinhVucId(response: HttpResponseBase): Observable<ApiResultOfIListOfThuTuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfThuTuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfThuTuc>(<any>null);
    }
}

export interface IThuTucDvhcClient {
    /**
     * Lấy toàn bộ đơn vị hành chính được gán cho một thủ tục
     * @param idThuTuc (optional) 
     */
    getAllByThuTuc(idThuTuc: string | null | undefined): Observable<ApiResultOfIListOfThuTucDvhcViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class ThuTucDvhcClient implements IThuTucDvhcClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ đơn vị hành chính được gán cho một thủ tục
     * @param idThuTuc (optional) 
     */
    getAllByThuTuc(idThuTuc: string | null | undefined): Observable<ApiResultOfIListOfThuTucDvhcViewModel> {
        let url_ = this.baseUrl + "/api/ThuTucDvhc/GetAllByThuTuc?";
        if (idThuTuc !== undefined && idThuTuc !== null)
            url_ += "idThuTuc=" + encodeURIComponent("" + idThuTuc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllByThuTuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllByThuTuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfThuTucDvhcViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfThuTucDvhcViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllByThuTuc(response: HttpResponseBase): Observable<ApiResultOfIListOfThuTucDvhcViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfThuTucDvhcViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfThuTucDvhcViewModel>(<any>null);
    }
}

export interface IThuTucLoaiGiayToClient {
    /**
     * Lấy toàn bộ loại giấy tờ cho một thủ tục
     * @param idThuTuc (optional) 
     */
    getAllByThuTuc(idThuTuc: string | null | undefined): Observable<ApiResultOfIListOfThuTucLoaiGiayToViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class ThuTucLoaiGiayToClient implements IThuTucLoaiGiayToClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ loại giấy tờ cho một thủ tục
     * @param idThuTuc (optional) 
     */
    getAllByThuTuc(idThuTuc: string | null | undefined): Observable<ApiResultOfIListOfThuTucLoaiGiayToViewModel> {
        let url_ = this.baseUrl + "/api/ThuTucLoaiGiayTo/GetAllByThuTuc?";
        if (idThuTuc !== undefined && idThuTuc !== null)
            url_ += "idThuTuc=" + encodeURIComponent("" + idThuTuc) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllByThuTuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllByThuTuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfThuTucLoaiGiayToViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfThuTucLoaiGiayToViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllByThuTuc(response: HttpResponseBase): Observable<ApiResultOfIListOfThuTucLoaiGiayToViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfThuTucLoaiGiayToViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfThuTucLoaiGiayToViewModel>(<any>null);
    }
}

export interface ITienTrinhXuLyClient {
    /**
     * Lấy danh sách tiến trình xử lý theo bước xử lý.
     */
    getTienTrinhXuLyByIdBuocXuLy(idBuocXuLy: string | null): Observable<ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto>;
    /**
     * Tìm kiến tiến trình xử lý theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: SearchTienTrinhXuLyListQuery): Observable<ApiResultOfPagedListOfTienTrinhXuLySearchingDto>;
}

@Injectable({
    providedIn: 'root'
})
export class TienTrinhXuLyClient implements ITienTrinhXuLyClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách tiến trình xử lý theo bước xử lý.
     */
    getTienTrinhXuLyByIdBuocXuLy(idBuocXuLy: string | null): Observable<ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto> {
        let url_ = this.baseUrl + "/api/TienTrinhXuLy/GetTienTrinhXuLyByIdBuocXuLy/{idBuocXuLy}";
        if (idBuocXuLy === undefined || idBuocXuLy === null)
            throw new Error("The parameter 'idBuocXuLy' must be defined.");
        url_ = url_.replace("{idBuocXuLy}", encodeURIComponent("" + idBuocXuLy));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetTienTrinhXuLyByIdBuocXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetTienTrinhXuLyByIdBuocXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetTienTrinhXuLyByIdBuocXuLy(response: HttpResponseBase): Observable<ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto>(<any>null);
    }

    /**
     * Tìm kiến tiến trình xử lý theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: SearchTienTrinhXuLyListQuery): Observable<ApiResultOfPagedListOfTienTrinhXuLySearchingDto> {
        let url_ = this.baseUrl + "/api/TienTrinhXuLy/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfTienTrinhXuLySearchingDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfTienTrinhXuLySearchingDto>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfTienTrinhXuLySearchingDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfTienTrinhXuLySearchingDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfTienTrinhXuLySearchingDto>(<any>null);
    }
}

export interface ITraCuuThongTinDatDaiClient {
    searchViewDangKyFromCadas(request: SearchViewDangKyQuery): Observable<ApiResultOfPagedListOfSearchViewDangKyItemVm>;
    searchViewDangKyNangCaoFromCadas(request: SearchViewDangKyNangCaoQuery): Observable<ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm>;
    searchViewBienDongNangCaoFromCadas(request: SearchViewBienDongNangCaoQuery): Observable<ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm>;
    getTrangThaiThuaDatList(): Observable<ApiResultOfIListOfGetTrangThaiThuaDatListDto>;
    getDoiTuongSuDungList(): Observable<ApiResultOfIListOfGetDoiTuongSuDungListDto>;
    getMucDichSuDungList(): Observable<ApiResultOfIListOfGetMucDichSuDungSuDungListDto>;
    getHinhThucSuDungList(): Observable<ApiResultOfIListOfGetHinhThucSuDungListDto>;
    getDSGiayChungNhan(request: GetDSGiayChungNhanQuery): Observable<ApiResultOfIListOfGiayChungNhanDto>;
    getDSGiayChungNhanSBD(request: GetDSGiayChungNhanSBDQuery): Observable<ApiResultOfIListOfGcnSauBienDongDto>;
    getTrichLuc(request: GetTrichLucQuery): Observable<ApiResultOfTrichLucDto>;
    getKetQuaDoDac(request: GetKetQuaDoDacQuery): Observable<ApiResultOfKetQuaDoDacDto>;
    getBienBanXacNhanRanhGioi(request: GetBienBanXacNhanRanhGioiQuery): Observable<ApiResultOfBienBanXacNhanRanhGioiDto>;
    /**
     * Lấy danh sách loại biến động
     * @param idHoSo (optional) 
     */
    getDanhSachLoaiBienDong(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfLoaiBienDongVm>;
    /**
     * Lấy cấu hình loại biến động
     * @param idLoaiBienDong (optional) 
     * @param idChuSuDungThuaDat (optional) 
     * @param idDvhc (optional) 
     * @param listIdThuaDat (optional) 
     */
    getCauHinhLoaiBienDong(idLoaiBienDong: string | null | undefined, idChuSuDungThuaDat: string | null | undefined, idDvhc: string | null | undefined, listIdThuaDat: string | null | undefined): Observable<ApiResultOfCauHinhLoaiBienDongVm>;
}

@Injectable({
    providedIn: 'root'
})
export class TraCuuThongTinDatDaiClient implements ITraCuuThongTinDatDaiClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    searchViewDangKyFromCadas(request: SearchViewDangKyQuery): Observable<ApiResultOfPagedListOfSearchViewDangKyItemVm> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/SearchViewDangKyFromCadas";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchViewDangKyFromCadas(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchViewDangKyFromCadas(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchViewDangKyItemVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchViewDangKyItemVm>><any>_observableThrow(response_);
        }));
    }

    protected processSearchViewDangKyFromCadas(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchViewDangKyItemVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchViewDangKyItemVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchViewDangKyItemVm>(<any>null);
    }

    searchViewDangKyNangCaoFromCadas(request: SearchViewDangKyNangCaoQuery): Observable<ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/SearchViewDangKyNangCaoFromCadas";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchViewDangKyNangCaoFromCadas(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchViewDangKyNangCaoFromCadas(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm>><any>_observableThrow(response_);
        }));
    }

    protected processSearchViewDangKyNangCaoFromCadas(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm>(<any>null);
    }

    searchViewBienDongNangCaoFromCadas(request: SearchViewBienDongNangCaoQuery): Observable<ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/SearchViewBienDongNangCaoFromCadas";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearchViewBienDongNangCaoFromCadas(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearchViewBienDongNangCaoFromCadas(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm>><any>_observableThrow(response_);
        }));
    }

    protected processSearchViewBienDongNangCaoFromCadas(response: HttpResponseBase): Observable<ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm>(<any>null);
    }

    getTrangThaiThuaDatList(): Observable<ApiResultOfIListOfGetTrangThaiThuaDatListDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetTrangThaiThuaDatList";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetTrangThaiThuaDatList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetTrangThaiThuaDatList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetTrangThaiThuaDatListDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetTrangThaiThuaDatListDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetTrangThaiThuaDatList(response: HttpResponseBase): Observable<ApiResultOfIListOfGetTrangThaiThuaDatListDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetTrangThaiThuaDatListDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetTrangThaiThuaDatListDto>(<any>null);
    }

    getDoiTuongSuDungList(): Observable<ApiResultOfIListOfGetDoiTuongSuDungListDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetDoiTuongSuDungList";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDoiTuongSuDungList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDoiTuongSuDungList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetDoiTuongSuDungListDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetDoiTuongSuDungListDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDoiTuongSuDungList(response: HttpResponseBase): Observable<ApiResultOfIListOfGetDoiTuongSuDungListDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetDoiTuongSuDungListDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetDoiTuongSuDungListDto>(<any>null);
    }

    getMucDichSuDungList(): Observable<ApiResultOfIListOfGetMucDichSuDungSuDungListDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetMucDichSuDungList";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetMucDichSuDungList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetMucDichSuDungList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetMucDichSuDungSuDungListDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetMucDichSuDungSuDungListDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetMucDichSuDungList(response: HttpResponseBase): Observable<ApiResultOfIListOfGetMucDichSuDungSuDungListDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetMucDichSuDungSuDungListDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetMucDichSuDungSuDungListDto>(<any>null);
    }

    getHinhThucSuDungList(): Observable<ApiResultOfIListOfGetHinhThucSuDungListDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetHinhThucSuDungList";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetHinhThucSuDungList(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetHinhThucSuDungList(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGetHinhThucSuDungListDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGetHinhThucSuDungListDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetHinhThucSuDungList(response: HttpResponseBase): Observable<ApiResultOfIListOfGetHinhThucSuDungListDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGetHinhThucSuDungListDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGetHinhThucSuDungListDto>(<any>null);
    }

    getDSGiayChungNhan(request: GetDSGiayChungNhanQuery): Observable<ApiResultOfIListOfGiayChungNhanDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetDSGiayChungNhan";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDSGiayChungNhan(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDSGiayChungNhan(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGiayChungNhanDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGiayChungNhanDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDSGiayChungNhan(response: HttpResponseBase): Observable<ApiResultOfIListOfGiayChungNhanDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGiayChungNhanDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGiayChungNhanDto>(<any>null);
    }

    getDSGiayChungNhanSBD(request: GetDSGiayChungNhanSBDQuery): Observable<ApiResultOfIListOfGcnSauBienDongDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetDSGiayChungNhanSBD";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDSGiayChungNhanSBD(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDSGiayChungNhanSBD(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfGcnSauBienDongDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfGcnSauBienDongDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDSGiayChungNhanSBD(response: HttpResponseBase): Observable<ApiResultOfIListOfGcnSauBienDongDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfGcnSauBienDongDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfGcnSauBienDongDto>(<any>null);
    }

    getTrichLuc(request: GetTrichLucQuery): Observable<ApiResultOfTrichLucDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetTrichLuc";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetTrichLuc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetTrichLuc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfTrichLucDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfTrichLucDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetTrichLuc(response: HttpResponseBase): Observable<ApiResultOfTrichLucDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfTrichLucDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfTrichLucDto>(<any>null);
    }

    getKetQuaDoDac(request: GetKetQuaDoDacQuery): Observable<ApiResultOfKetQuaDoDacDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetKetQuaDoDac";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetKetQuaDoDac(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetKetQuaDoDac(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfKetQuaDoDacDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfKetQuaDoDacDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetKetQuaDoDac(response: HttpResponseBase): Observable<ApiResultOfKetQuaDoDacDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfKetQuaDoDacDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfKetQuaDoDacDto>(<any>null);
    }

    getBienBanXacNhanRanhGioi(request: GetBienBanXacNhanRanhGioiQuery): Observable<ApiResultOfBienBanXacNhanRanhGioiDto> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetBienBanXacNhanRanhGioi";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetBienBanXacNhanRanhGioi(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetBienBanXacNhanRanhGioi(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBienBanXacNhanRanhGioiDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBienBanXacNhanRanhGioiDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetBienBanXacNhanRanhGioi(response: HttpResponseBase): Observable<ApiResultOfBienBanXacNhanRanhGioiDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBienBanXacNhanRanhGioiDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBienBanXacNhanRanhGioiDto>(<any>null);
    }

    /**
     * Lấy danh sách loại biến động
     * @param idHoSo (optional) 
     */
    getDanhSachLoaiBienDong(idHoSo: string | null | undefined): Observable<ApiResultOfIListOfLoaiBienDongVm> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetDanhSachLoaiBienDong?";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachLoaiBienDong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachLoaiBienDong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfLoaiBienDongVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfLoaiBienDongVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachLoaiBienDong(response: HttpResponseBase): Observable<ApiResultOfIListOfLoaiBienDongVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfLoaiBienDongVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfLoaiBienDongVm>(<any>null);
    }

    /**
     * Lấy cấu hình loại biến động
     * @param idLoaiBienDong (optional) 
     * @param idChuSuDungThuaDat (optional) 
     * @param idDvhc (optional) 
     * @param listIdThuaDat (optional) 
     */
    getCauHinhLoaiBienDong(idLoaiBienDong: string | null | undefined, idChuSuDungThuaDat: string | null | undefined, idDvhc: string | null | undefined, listIdThuaDat: string | null | undefined): Observable<ApiResultOfCauHinhLoaiBienDongVm> {
        let url_ = this.baseUrl + "/api/TraCuuThongTinDatDai/GetCauHinhLoaiBienDong?";
        if (idLoaiBienDong !== undefined && idLoaiBienDong !== null)
            url_ += "idLoaiBienDong=" + encodeURIComponent("" + idLoaiBienDong) + "&";
        if (idChuSuDungThuaDat !== undefined && idChuSuDungThuaDat !== null)
            url_ += "idChuSuDungThuaDat=" + encodeURIComponent("" + idChuSuDungThuaDat) + "&";
        if (idDvhc !== undefined && idDvhc !== null)
            url_ += "idDvhc=" + encodeURIComponent("" + idDvhc) + "&";
        if (listIdThuaDat !== undefined && listIdThuaDat !== null)
            url_ += "listIdThuaDat=" + encodeURIComponent("" + listIdThuaDat) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetCauHinhLoaiBienDong(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetCauHinhLoaiBienDong(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfCauHinhLoaiBienDongVm>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfCauHinhLoaiBienDongVm>><any>_observableThrow(response_);
        }));
    }

    protected processGetCauHinhLoaiBienDong(response: HttpResponseBase): Observable<ApiResultOfCauHinhLoaiBienDongVm> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfCauHinhLoaiBienDongVm.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfCauHinhLoaiBienDongVm>(<any>null);
    }
}

export interface ITrangThaiHoSoClient {
    /**
     * Lấy toàn bộ trạng thái thực hiện hồ sơ đang active (đang sử dụng)
     */
    getAllTrangThaiThucHienActive(): Observable<ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel>;
    /**
     * Lấy toàn bộ khối xử lý hồ sơ đang active (đang sử dụng)
     */
    getAllActive(): Observable<ApiResultOfIListOfTrangThaiHoSoPublicViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class TrangThaiHoSoClient implements ITrangThaiHoSoClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ trạng thái thực hiện hồ sơ đang active (đang sử dụng)
     */
    getAllTrangThaiThucHienActive(): Observable<ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel> {
        let url_ = this.baseUrl + "/api/TrangThaiHoSo/GetAllTrangThaiThucHienActive";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllTrangThaiThucHienActive(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllTrangThaiThucHienActive(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllTrangThaiThucHienActive(response: HttpResponseBase): Observable<ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel>(<any>null);
    }

    /**
     * Lấy toàn bộ khối xử lý hồ sơ đang active (đang sử dụng)
     */
    getAllActive(): Observable<ApiResultOfIListOfTrangThaiHoSoPublicViewModel> {
        let url_ = this.baseUrl + "/api/TrangThaiHoSo/GetAllActive";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllActive(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllActive(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfTrangThaiHoSoPublicViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfTrangThaiHoSoPublicViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllActive(response: HttpResponseBase): Observable<ApiResultOfIListOfTrangThaiHoSoPublicViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfTrangThaiHoSoPublicViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfTrangThaiHoSoPublicViewModel>(<any>null);
    }
}

export interface ITrangThaiThucHienClient {
    /**
     * Thêm trạng thái thực hiện
     */
    add(command: TrangThaiThucHienViewModel): Observable<ApiResultOfString>;
    /**
     * Sửa trạng thái thực hiện
     */
    edit(command: TrangThaiThucHienViewModel): Observable<ApiResultOfString>;
    /**
     * Xóa trạng thái thực hiện
     * @param id (optional) 
     */
    delete(id: number | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm trạng thái thực hiện có thể phân trang.
     */
    search(request: TrangThaiThucHienRequest): Observable<ApiResultOfPagedListOfTrangThaiThucHien>;
}

@Injectable({
    providedIn: 'root'
})
export class TrangThaiThucHienClient implements ITrangThaiThucHienClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm trạng thái thực hiện
     */
    add(command: TrangThaiThucHienViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/TrangThaiThucHien/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Sửa trạng thái thực hiện
     */
    edit(command: TrangThaiThucHienViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/TrangThaiThucHien/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Xóa trạng thái thực hiện
     * @param id (optional) 
     */
    delete(id: number | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/TrangThaiThucHien/Delete?";
        if (id === null)
            throw new Error("The parameter 'id' cannot be null.");
        else if (id !== undefined)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm trạng thái thực hiện có thể phân trang.
     */
    search(request: TrangThaiThucHienRequest): Observable<ApiResultOfPagedListOfTrangThaiThucHien> {
        let url_ = this.baseUrl + "/api/TrangThaiThucHien/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfTrangThaiThucHien>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfTrangThaiThucHien>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfTrangThaiThucHien> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfTrangThaiThucHien.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfTrangThaiThucHien>(<any>null);
    }
}

export interface ITrangThaiXuLyClient {
    /**
     * Lấy toàn bộ danh sách trạng thái xử lý
     */
    getAll(): Observable<ApiResultOfIListOfTrangThaiXuLy>;
    /**
     * Lấy toàn bộ trạng thái xử lý đang active (đang sử dụng)
     */
    getAllActive(): Observable<ApiResultOfIListOfTrangThaiXuLyPublicViewModel>;
}

@Injectable({
    providedIn: 'root'
})
export class TrangThaiXuLyClient implements ITrangThaiXuLyClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy toàn bộ danh sách trạng thái xử lý
     */
    getAll(): Observable<ApiResultOfIListOfTrangThaiXuLy> {
        let url_ = this.baseUrl + "/api/TrangThaiXuLy/GetAll";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAll(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAll(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfTrangThaiXuLy>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfTrangThaiXuLy>><any>_observableThrow(response_);
        }));
    }

    protected processGetAll(response: HttpResponseBase): Observable<ApiResultOfIListOfTrangThaiXuLy> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfTrangThaiXuLy.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfTrangThaiXuLy>(<any>null);
    }

    /**
     * Lấy toàn bộ trạng thái xử lý đang active (đang sử dụng)
     */
    getAllActive(): Observable<ApiResultOfIListOfTrangThaiXuLyPublicViewModel> {
        let url_ = this.baseUrl + "/api/TrangThaiXuLy/GetAllActive";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetAllActive(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetAllActive(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfTrangThaiXuLyPublicViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfTrangThaiXuLyPublicViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetAllActive(response: HttpResponseBase): Observable<ApiResultOfIListOfTrangThaiXuLyPublicViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfTrangThaiXuLyPublicViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfTrangThaiXuLyPublicViewModel>(<any>null);
    }
}

export interface IXuLyBuocClient {
    /**
     * Chuyển trạng thái xử lý của hồ sơ
     */
    chuyenTrangThaiXuLy(request: ChuyenTrangThaiXuLyTrongBuocCommand): Observable<ApiResultOfBoolean>;
    /**
     * Chuyển bước xử lý của hồ sơ
     */
    chuyenBuocXuLy(request: ChuyenBuocXuLyCommand): Observable<ApiResultOfBoolean>;
    /**
     * Chuyển bước xử lý hàng loạt
     */
    chuyenBuocXuLyHangLoat(request: ChuyenBuocXuLyHangLoatCommand): Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatDto>;
    /**
     * Chuyển bước xử lý hàng loạt nhanh
     */
    chuyenBuocXuLyHangLoatNhanh(request: ChuyenBuocXuLyHangLoatNhanhCommand): Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto>;
    /**
     * Yêu cầu xử lý nội bộ
     */
    yeuCauXuLyNoiBo(request: YeuCauXuLyNoiBoCommand): Observable<ApiResultOfBoolean>;
    /**
     * Lấy thao tác xử lý tiếp theo của một bước
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getThaoTacXuLyTiepTheo(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfGetThaoTacXuLyTiepTheoDto>;
    /**
     * Lấy danh sách bước đã xử lý trước đó
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getDanhSachBuocDaXuLyTruoc(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfIListOfBuocDaXuLyTruocDto>;
    /**
     * Lấy danh sách đơn vị xử lý hồ sơ
     * @param idQuanHuyen (optional) 
     */
    getDanhSachDonViXuLyHoSo(idQuanHuyen: string | null | undefined): Observable<ApiResultOfIListOfPhongBanDto>;
    /**
     * Lấy danh sách người xử lý liên quan theo bước
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getDanhSachNguoiXuLyLienQuanTheoBuoc(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfNguoiXyLyLienQuanTheoBuocDto>;
    /**
     * Chuyển lại bước xử lý mới cho hồ sơ
     */
    chuyenLaiBuocXuLy(request: ChuyenLaiBuocXuLyCommand): Observable<ApiResultOfBoolean>;
    /**
     * Chuyển lại bước xử lý mới cho hồ sơ security
     */
    chuyenLaiBuocXuLySecurity(request: ChuyenLaiBuocXuLySecurityCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class XuLyBuocClient implements IXuLyBuocClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Chuyển trạng thái xử lý của hồ sơ
     */
    chuyenTrangThaiXuLy(request: ChuyenTrangThaiXuLyTrongBuocCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/ChuyenTrangThaiXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenTrangThaiXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenTrangThaiXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenTrangThaiXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Chuyển bước xử lý của hồ sơ
     */
    chuyenBuocXuLy(request: ChuyenBuocXuLyCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/ChuyenBuocXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenBuocXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenBuocXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenBuocXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Chuyển bước xử lý hàng loạt
     */
    chuyenBuocXuLyHangLoat(request: ChuyenBuocXuLyHangLoatCommand): Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatDto> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/ChuyenBuocXuLyHangLoat";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenBuocXuLyHangLoat(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenBuocXuLyHangLoat(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatDto>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenBuocXuLyHangLoat(response: HttpResponseBase): Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfChuyenBuocXuLyHangLoatDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfChuyenBuocXuLyHangLoatDto>(<any>null);
    }

    /**
     * Chuyển bước xử lý hàng loạt nhanh
     */
    chuyenBuocXuLyHangLoatNhanh(request: ChuyenBuocXuLyHangLoatNhanhCommand): Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/ChuyenBuocXuLyHangLoatNhanh";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenBuocXuLyHangLoatNhanh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenBuocXuLyHangLoatNhanh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenBuocXuLyHangLoatNhanh(response: HttpResponseBase): Observable<ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto>(<any>null);
    }

    /**
     * Yêu cầu xử lý nội bộ
     */
    yeuCauXuLyNoiBo(request: YeuCauXuLyNoiBoCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/YeuCauXuLyNoiBo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processYeuCauXuLyNoiBo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processYeuCauXuLyNoiBo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processYeuCauXuLyNoiBo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy thao tác xử lý tiếp theo của một bước
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getThaoTacXuLyTiepTheo(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfGetThaoTacXuLyTiepTheoDto> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/GetThaoTacXuLyTiepTheo?";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "idBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetThaoTacXuLyTiepTheo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetThaoTacXuLyTiepTheo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfGetThaoTacXuLyTiepTheoDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfGetThaoTacXuLyTiepTheoDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetThaoTacXuLyTiepTheo(response: HttpResponseBase): Observable<ApiResultOfGetThaoTacXuLyTiepTheoDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfGetThaoTacXuLyTiepTheoDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfGetThaoTacXuLyTiepTheoDto>(<any>null);
    }

    /**
     * Lấy danh sách bước đã xử lý trước đó
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getDanhSachBuocDaXuLyTruoc(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfIListOfBuocDaXuLyTruocDto> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/GetDanhSachBuocDaXuLyTruoc?";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "idBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachBuocDaXuLyTruoc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachBuocDaXuLyTruoc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfBuocDaXuLyTruocDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfBuocDaXuLyTruocDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachBuocDaXuLyTruoc(response: HttpResponseBase): Observable<ApiResultOfIListOfBuocDaXuLyTruocDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfBuocDaXuLyTruocDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfBuocDaXuLyTruocDto>(<any>null);
    }

    /**
     * Lấy danh sách đơn vị xử lý hồ sơ
     * @param idQuanHuyen (optional) 
     */
    getDanhSachDonViXuLyHoSo(idQuanHuyen: string | null | undefined): Observable<ApiResultOfIListOfPhongBanDto> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/GetDanhSachDonViXuLyHoSo?";
        if (idQuanHuyen !== undefined && idQuanHuyen !== null)
            url_ += "idQuanHuyen=" + encodeURIComponent("" + idQuanHuyen) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachDonViXuLyHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachDonViXuLyHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfPhongBanDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfPhongBanDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachDonViXuLyHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfPhongBanDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfPhongBanDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfPhongBanDto>(<any>null);
    }

    /**
     * Lấy danh sách người xử lý liên quan theo bước
     * @param idBuoc (optional) 
     * @param idHoSo (optional) 
     */
    getDanhSachNguoiXuLyLienQuanTheoBuoc(idBuoc: string | null | undefined, idHoSo: string | null | undefined): Observable<ApiResultOfNguoiXyLyLienQuanTheoBuocDto> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/GetDanhSachNguoiXuLyLienQuanTheoBuoc?";
        if (idBuoc !== undefined && idBuoc !== null)
            url_ += "idBuoc=" + encodeURIComponent("" + idBuoc) + "&";
        if (idHoSo !== undefined && idHoSo !== null)
            url_ += "idHoSo=" + encodeURIComponent("" + idHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhSachNguoiXuLyLienQuanTheoBuoc(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhSachNguoiXuLyLienQuanTheoBuoc(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfNguoiXyLyLienQuanTheoBuocDto>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfNguoiXyLyLienQuanTheoBuocDto>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhSachNguoiXuLyLienQuanTheoBuoc(response: HttpResponseBase): Observable<ApiResultOfNguoiXyLyLienQuanTheoBuocDto> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfNguoiXyLyLienQuanTheoBuocDto.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfNguoiXyLyLienQuanTheoBuocDto>(<any>null);
    }

    /**
     * Chuyển lại bước xử lý mới cho hồ sơ
     */
    chuyenLaiBuocXuLy(request: ChuyenLaiBuocXuLyCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/ChuyenLaiBuocXuLy";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenLaiBuocXuLy(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenLaiBuocXuLy(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenLaiBuocXuLy(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Chuyển lại bước xử lý mới cho hồ sơ security
     */
    chuyenLaiBuocXuLySecurity(request: ChuyenLaiBuocXuLySecurityCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/XuLyBuoc/ChuyenLaiBuocXuLySecurity";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenLaiBuocXuLySecurity(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenLaiBuocXuLySecurity(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenLaiBuocXuLySecurity(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface ILinhVucManageClient {
    /**
     * Thêm lĩnh vực
     */
    add(command: LinhVucViewModel): Observable<ApiResultOfString>;
    /**
     * Sửa lĩnh vực
     */
    edit(command: LinhVucViewModel): Observable<ApiResultOfString>;
    /**
     * Xóa lĩnh vực
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm thủ tục theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: LinhVucRequest): Observable<ApiResultOfPagedListOfLinhVuc>;
}

@Injectable({
    providedIn: 'root'
})
export class LinhVucManageClient implements ILinhVucManageClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm lĩnh vực
     */
    add(command: LinhVucViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/LinhVucManage/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Sửa lĩnh vực
     */
    edit(command: LinhVucViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/LinhVucManage/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Xóa lĩnh vực
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/LinhVucManage/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm thủ tục theo các tiêu chí khác nhau, có thể phân trang.
     */
    search(request: LinhVucRequest): Observable<ApiResultOfPagedListOfLinhVuc> {
        let url_ = this.baseUrl + "/api/LinhVucManage/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfLinhVuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfLinhVuc>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfLinhVuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfLinhVuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfLinhVuc>(<any>null);
    }
}

export interface IQuyTrinhManageClient {
    /**
     * Thêm quy trình
     */
    add(command: QuyTrinhViewModel): Observable<ApiResultOfString>;
    /**
     * Sửa thông tin của quy trình
     */
    edit(command: QuyTrinhViewModel): Observable<ApiResultOfString>;
    /**
     * Xóa một quy trình
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Lấy thông tin quy trình theo id
     */
    getById(id: string | null): Observable<ApiResultOfQuyTrinh>;
    /**
     * Cập nhật file quy trình
     */
    updateFileQuyTrinh(request: CapNhatQuyTrinhRequest): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm quy trình theo các tiêu chí khác nhau, có thể phân trang
     */
    search(request: QuyTrinhRequest): Observable<ApiResultOfPagedListOfQuyTrinh>;
}

@Injectable({
    providedIn: 'root'
})
export class QuyTrinhManageClient implements IQuyTrinhManageClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm quy trình
     */
    add(command: QuyTrinhViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/QuyTrinhManage/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Sửa thông tin của quy trình
     */
    edit(command: QuyTrinhViewModel): Observable<ApiResultOfString> {
        let url_ = this.baseUrl + "/api/QuyTrinhManage/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfString>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfString>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfString> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfString.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfString>(<any>null);
    }

    /**
     * Xóa một quy trình
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/QuyTrinhManage/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy thông tin quy trình theo id
     */
    getById(id: string | null): Observable<ApiResultOfQuyTrinh> {
        let url_ = this.baseUrl + "/api/QuyTrinhManage/GetById/{id}";
        if (id === undefined || id === null)
            throw new Error("The parameter 'id' must be defined.");
        url_ = url_.replace("{id}", encodeURIComponent("" + id));
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetById(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetById(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfQuyTrinh>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfQuyTrinh>><any>_observableThrow(response_);
        }));
    }

    protected processGetById(response: HttpResponseBase): Observable<ApiResultOfQuyTrinh> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfQuyTrinh.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfQuyTrinh>(<any>null);
    }

    /**
     * Cập nhật file quy trình
     */
    updateFileQuyTrinh(request: CapNhatQuyTrinhRequest): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/QuyTrinhManage/UpdateFileQuyTrinh";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processUpdateFileQuyTrinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processUpdateFileQuyTrinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processUpdateFileQuyTrinh(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm quy trình theo các tiêu chí khác nhau, có thể phân trang
     */
    search(request: QuyTrinhRequest): Observable<ApiResultOfPagedListOfQuyTrinh> {
        let url_ = this.baseUrl + "/api/QuyTrinhManage/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfQuyTrinh>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfQuyTrinh>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfQuyTrinh> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfQuyTrinh.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfQuyTrinh>(<any>null);
    }
}

export interface IThuTucManageClient {
    /**
     * Thêm thủ tục
     */
    add(command: ThuTucViewModel): Observable<ApiResultOfThuTuc>;
    /**
     * Sửa thông tin thủ tục
     */
    edit(command: ThuTucViewModel): Observable<ApiResultOfThuTuc>;
    /**
     * Xóa một thủ tục
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tìm kiếm thủ tục theo các tiêu chí khác nhau, có phân trang
     */
    search(request: ThuTucRequest): Observable<ApiResultOfPagedListOfThuTuc>;
}

@Injectable({
    providedIn: 'root'
})
export class ThuTucManageClient implements IThuTucManageClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Thêm thủ tục
     */
    add(command: ThuTucViewModel): Observable<ApiResultOfThuTuc> {
        let url_ = this.baseUrl + "/api/ThuTucManage/Add";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processAdd(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processAdd(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfThuTuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfThuTuc>><any>_observableThrow(response_);
        }));
    }

    protected processAdd(response: HttpResponseBase): Observable<ApiResultOfThuTuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfThuTuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfThuTuc>(<any>null);
    }

    /**
     * Sửa thông tin thủ tục
     */
    edit(command: ThuTucViewModel): Observable<ApiResultOfThuTuc> {
        let url_ = this.baseUrl + "/api/ThuTucManage/Edit";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("put", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processEdit(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processEdit(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfThuTuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfThuTuc>><any>_observableThrow(response_);
        }));
    }

    protected processEdit(response: HttpResponseBase): Observable<ApiResultOfThuTuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfThuTuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfThuTuc>(<any>null);
    }

    /**
     * Xóa một thủ tục
     * @param id (optional) 
     */
    delete(id: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/ThuTucManage/Delete?";
        if (id !== undefined && id !== null)
            url_ += "id=" + encodeURIComponent("" + id) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("delete", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDelete(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDelete(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDelete(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tìm kiếm thủ tục theo các tiêu chí khác nhau, có phân trang
     */
    search(request: ThuTucRequest): Observable<ApiResultOfPagedListOfThuTuc> {
        let url_ = this.baseUrl + "/api/ThuTucManage/Search";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processSearch(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processSearch(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfThuTuc>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfThuTuc>><any>_observableThrow(response_);
        }));
    }

    protected processSearch(response: HttpResponseBase): Observable<ApiResultOfPagedListOfThuTuc> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfThuTuc.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfThuTuc>(<any>null);
    }
}

export interface IDVCCaMauClient {
    /**
     * Tiếp nhận Hồ sơ Dịch vụ công Cà Mau
     */
    tiepNhanHoSo(command: AddDvcHoSoCaMauRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công Cà Mau
     */
    boSungHoSo(command: UpdateDvcHoSoCaMauRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCCaMauClient implements IDVCCaMauClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận Hồ sơ Dịch vụ công Cà Mau
     */
    tiepNhanHoSo(command: AddDvcHoSoCaMauRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCCaMau/TiepNhanHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công Cà Mau
     */
    boSungHoSo(command: UpdateDvcHoSoCaMauRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCCaMau/BoSungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBoSungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBoSungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processBoSungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCCaMau/CapNhatTrangThaiHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatTrangThaiHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatTrangThaiHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatTrangThaiHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IDVCHauGiangClient {
    /**
     * Tiếp nhận Hồ sơ Dịch vụ công Hậu Giang
     */
    tiepNhanHoSo(command: AddDvcHoSoHauGiangRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công Hậu Giang
     */
    boSungHoSo(command: UpdateDvcHoSoHauGiangRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCHauGiangClient implements IDVCHauGiangClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận Hồ sơ Dịch vụ công Hậu Giang
     */
    tiepNhanHoSo(command: AddDvcHoSoHauGiangRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHauGiang/TiepNhanHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công Hậu Giang
     */
    boSungHoSo(command: UpdateDvcHoSoHauGiangRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHauGiang/BoSungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBoSungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBoSungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processBoSungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHauGiang/CapNhatTrangThaiHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatTrangThaiHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatTrangThaiHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatTrangThaiHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IDVCHoSoClient {
    /**
     * Lấy danh sách các hồ sơ cần tiếp nhận trên DVC
     */
    getHoSoTiepNhan(request: DVCHoSoRequest): Observable<ApiResultOfPagedListOfDVCHoSoViewModel>;
    /**
     * Lấy danh sách file đính kèm trên DVC theo id hồ sơ
     * @param idDvcRawData (optional) 
     */
    getFileDinhKemHoSo(idDvcRawData: string | null | undefined): Observable<ApiResultOfIListOfDVCFileDinhKemViewModel>;
    /**
     * Tiếp nhận hồ sơ trực tiếp từ DVC
     */
    tiepNhanHoSoDVC(command: DVCHoSoTiepNhanCommand): Observable<ApiResultOfIListOfDVCHoSoTiepNhan>;
    /**
     * Add Hồ sơ Dịch vụ công Quảng Nam
     */
    tiepNhanHoSoDvcQNM(command: AddDvcHoSoQnmRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cap nhat Hồ sơ Dịch vụ công Quảng Nam
     */
    capNhatHoSoDvcQNM(command: CapNhatDvcHoSoQnmRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Nhận thông báo thuế đất từ dịch vụ công Quảng Nam
     */
    nhanThongBaoThueDatQNM(command: NhanThongBaoThueDatQNMCommand): Observable<NhanThongBaoThueDatQNMCommandResponse>;
    /**
     * Nhận chứng từ thuế đất từ dịch vụ công Quảng Nam
     */
    nhanChungTuThueDatQNM(command: NhanChungTuThueDatQNMCommand): Observable<NhanChungTuThueDatQNMCommandResponse>;
    /**
     * Đồng bộ hồ sơ từ DVC
     */
    dongBoHoSo(command: DongBoHoSoTuDvcQuery): Observable<ApiResultOfBoolean>;
    /**
     * Đồng bộ hồ sơ Tây Ninh
     */
    dongBoHoSoTayNinh(command: DongBoHoSoTuDvcQuery): Observable<ApiResultOfBoolean>;
    /**
     * Cap nhat phí, lệ phí hồ sơ Dịch vụ công Quảng Nam
     */
    capNhatPhiLePhiHoSoDvcQNM(command: UpdatePhiLePhiHoSoQNMCommand): Observable<ApiResultOfBoolean>;
    /**
     * Lây danh mục yêu cầu bổ sung hồ sơ Dịch vụ công Quảng Nam
     * @param maHoSo (optional) Ma hồ sơ
     */
    getDanhMucYeuCauBoSungQNM(maHoSo: string | null | undefined): Observable<ApiResultOfApiDanhMucYeuCauBoSungQNM>;
    /**
     * Yêu cầu bổ sung hồ sơ Dịch vụ công Quảng Nam
     * @param maHoSo (optional) 
     * @param brief (optional) 
     * @param expiredTime (optional) 
     * @param userRequest (optional) 
     * @param files (optional) 
     * @param documents (optional) 
     */
    yeuCauBoSungHoSoQNM(maHoSo: string | null | undefined, brief: string | null | undefined, expiredTime: string | null | undefined, userRequest: string | null | undefined, files: string | null | undefined, documents: FileParameter[] | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Yêu cầu bổ sung hồ sơ Dịch vụ công
     * @param idHoSo (optional) 
     * @param isGuiThongBaoThueDvc (optional) 
     * @param noiDungYeuCau (optional) 
     * @param documents (optional) 
     * @param fileDinhKems (optional) 
     * @param fileVanBans (optional) 
     */
    yeuCauBoSungHoSo(idHoSo: string | null | undefined, isGuiThongBaoThueDvc: boolean | undefined, noiDungYeuCau: string | null | undefined, documents: FileParameter[] | null | undefined, fileDinhKems: string | null | undefined, fileVanBans: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tam dung hồ sơ Dịch vụ công KonTum
     * @param idHoSo (optional) 
     * @param noiDungYeuCau (optional) 
     * @param thoiGianTamDung (optional) 
     * @param documents (optional) 
     * @param checkTuDong (optional) 
     */
    tamDungHoSo(idHoSo: string | null | undefined, noiDungYeuCau: string | null | undefined, thoiGianTamDung: number | undefined, documents: FileParameter[] | null | undefined, checkTuDong: boolean | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Tiếp tục xử lý sau khi tạm dừng hồ sơ Dịch vụ công KonTum
     * @param idHoSo (optional) 
     * @param noiDungYeuCau (optional) 
     */
    xuLyTiepHoSo(idHoSo: string | null | undefined, noiDungYeuCau: string | null | undefined): Observable<ApiResultOfBoolean>;
    /**
     * Chuyển lại kết thúc hồ sơ sang dịch vu công
     */
    chuyenLaiKetThucHoSoSangDVC(request: ChuyenLaiKetThucHoSoSangDVCCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCHoSoClient implements IDVCHoSoClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Lấy danh sách các hồ sơ cần tiếp nhận trên DVC
     */
    getHoSoTiepNhan(request: DVCHoSoRequest): Observable<ApiResultOfPagedListOfDVCHoSoViewModel> {
        let url_ = this.baseUrl + "/api/DVCHoSo/GetHoSoTiepNhan";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetHoSoTiepNhan(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetHoSoTiepNhan(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfPagedListOfDVCHoSoViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfPagedListOfDVCHoSoViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetHoSoTiepNhan(response: HttpResponseBase): Observable<ApiResultOfPagedListOfDVCHoSoViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfPagedListOfDVCHoSoViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfPagedListOfDVCHoSoViewModel>(<any>null);
    }

    /**
     * Lấy danh sách file đính kèm trên DVC theo id hồ sơ
     * @param idDvcRawData (optional) 
     */
    getFileDinhKemHoSo(idDvcRawData: string | null | undefined): Observable<ApiResultOfIListOfDVCFileDinhKemViewModel> {
        let url_ = this.baseUrl + "/api/DVCHoSo/GetFileDinhKemHoSo?";
        if (idDvcRawData !== undefined && idDvcRawData !== null)
            url_ += "idDvcRawData=" + encodeURIComponent("" + idDvcRawData) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetFileDinhKemHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetFileDinhKemHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCFileDinhKemViewModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCFileDinhKemViewModel>><any>_observableThrow(response_);
        }));
    }

    protected processGetFileDinhKemHoSo(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCFileDinhKemViewModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCFileDinhKemViewModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCFileDinhKemViewModel>(<any>null);
    }

    /**
     * Tiếp nhận hồ sơ trực tiếp từ DVC
     */
    tiepNhanHoSoDVC(command: DVCHoSoTiepNhanCommand): Observable<ApiResultOfIListOfDVCHoSoTiepNhan> {
        let url_ = this.baseUrl + "/api/DVCHoSo/TiepNhanHoSoDVC";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSoDVC(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSoDVC(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDVCHoSoTiepNhan>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDVCHoSoTiepNhan>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSoDVC(response: HttpResponseBase): Observable<ApiResultOfIListOfDVCHoSoTiepNhan> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDVCHoSoTiepNhan.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDVCHoSoTiepNhan>(<any>null);
    }

    /**
     * Add Hồ sơ Dịch vụ công Quảng Nam
     */
    tiepNhanHoSoDvcQNM(command: AddDvcHoSoQnmRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/TiepNhanHoSoDvcQNM";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSoDvcQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSoDvcQNM(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSoDvcQNM(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cap nhat Hồ sơ Dịch vụ công Quảng Nam
     */
    capNhatHoSoDvcQNM(command: CapNhatDvcHoSoQnmRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/CapNhatHoSoDvcQNM";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatHoSoDvcQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatHoSoDvcQNM(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatHoSoDvcQNM(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Nhận thông báo thuế đất từ dịch vụ công Quảng Nam
     */
    nhanThongBaoThueDatQNM(command: NhanThongBaoThueDatQNMCommand): Observable<NhanThongBaoThueDatQNMCommandResponse> {
        let url_ = this.baseUrl + "/api/DVCHoSo/NhanThongBaoThueDatQNM";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processNhanThongBaoThueDatQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processNhanThongBaoThueDatQNM(<any>response_);
                } catch (e) {
                    return <Observable<NhanThongBaoThueDatQNMCommandResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<NhanThongBaoThueDatQNMCommandResponse>><any>_observableThrow(response_);
        }));
    }

    protected processNhanThongBaoThueDatQNM(response: HttpResponseBase): Observable<NhanThongBaoThueDatQNMCommandResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = NhanThongBaoThueDatQNMCommandResponse.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<NhanThongBaoThueDatQNMCommandResponse>(<any>null);
    }

    /**
     * Nhận chứng từ thuế đất từ dịch vụ công Quảng Nam
     */
    nhanChungTuThueDatQNM(command: NhanChungTuThueDatQNMCommand): Observable<NhanChungTuThueDatQNMCommandResponse> {
        let url_ = this.baseUrl + "/api/DVCHoSo/NhanChungTuThueDatQNM";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processNhanChungTuThueDatQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processNhanChungTuThueDatQNM(<any>response_);
                } catch (e) {
                    return <Observable<NhanChungTuThueDatQNMCommandResponse>><any>_observableThrow(e);
                }
            } else
                return <Observable<NhanChungTuThueDatQNMCommandResponse>><any>_observableThrow(response_);
        }));
    }

    protected processNhanChungTuThueDatQNM(response: HttpResponseBase): Observable<NhanChungTuThueDatQNMCommandResponse> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = NhanChungTuThueDatQNMCommandResponse.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<NhanChungTuThueDatQNMCommandResponse>(<any>null);
    }

    /**
     * Đồng bộ hồ sơ từ DVC
     */
    dongBoHoSo(command: DongBoHoSoTuDvcQuery): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/DongBoHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDongBoHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDongBoHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDongBoHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Đồng bộ hồ sơ Tây Ninh
     */
    dongBoHoSoTayNinh(command: DongBoHoSoTuDvcQuery): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/DongBoHoSoTayNinh";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processDongBoHoSoTayNinh(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processDongBoHoSoTayNinh(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processDongBoHoSoTayNinh(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cap nhat phí, lệ phí hồ sơ Dịch vụ công Quảng Nam
     */
    capNhatPhiLePhiHoSoDvcQNM(command: UpdatePhiLePhiHoSoQNMCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/CapNhatPhiLePhiHoSoDvcQNM";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatPhiLePhiHoSoDvcQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatPhiLePhiHoSoDvcQNM(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatPhiLePhiHoSoDvcQNM(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lây danh mục yêu cầu bổ sung hồ sơ Dịch vụ công Quảng Nam
     * @param maHoSo (optional) Ma hồ sơ
     */
    getDanhMucYeuCauBoSungQNM(maHoSo: string | null | undefined): Observable<ApiResultOfApiDanhMucYeuCauBoSungQNM> {
        let url_ = this.baseUrl + "/api/DVCHoSo/GetDanhMucYeuCauBoSungQNM?";
        if (maHoSo !== undefined && maHoSo !== null)
            url_ += "maHoSo=" + encodeURIComponent("" + maHoSo) + "&";
        url_ = url_.replace(/[?&]$/, "");

        let options_ : any = {
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("get", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processGetDanhMucYeuCauBoSungQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processGetDanhMucYeuCauBoSungQNM(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfApiDanhMucYeuCauBoSungQNM>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfApiDanhMucYeuCauBoSungQNM>><any>_observableThrow(response_);
        }));
    }

    protected processGetDanhMucYeuCauBoSungQNM(response: HttpResponseBase): Observable<ApiResultOfApiDanhMucYeuCauBoSungQNM> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfApiDanhMucYeuCauBoSungQNM.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfApiDanhMucYeuCauBoSungQNM>(<any>null);
    }

    /**
     * Yêu cầu bổ sung hồ sơ Dịch vụ công Quảng Nam
     * @param maHoSo (optional) 
     * @param brief (optional) 
     * @param expiredTime (optional) 
     * @param userRequest (optional) 
     * @param files (optional) 
     * @param documents (optional) 
     */
    yeuCauBoSungHoSoQNM(maHoSo: string | null | undefined, brief: string | null | undefined, expiredTime: string | null | undefined, userRequest: string | null | undefined, files: string | null | undefined, documents: FileParameter[] | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/YeuCauBoSungHoSoQNM";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = new FormData();
        if (maHoSo !== null && maHoSo !== undefined)
            content_.append("MaHoSo", maHoSo.toString());
        if (brief !== null && brief !== undefined)
            content_.append("Brief", brief.toString());
        if (expiredTime !== null && expiredTime !== undefined)
            content_.append("ExpiredTime", expiredTime.toString());
        if (userRequest !== null && userRequest !== undefined)
            content_.append("UserRequest", userRequest.toString());
        if (files !== null && files !== undefined)
            content_.append("Files", files.toString());
        if (documents !== null && documents !== undefined)
            documents.forEach(item_ => content_.append("Documents", item_.data, item_.fileName ? item_.fileName : "Documents") );

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processYeuCauBoSungHoSoQNM(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processYeuCauBoSungHoSoQNM(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processYeuCauBoSungHoSoQNM(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Yêu cầu bổ sung hồ sơ Dịch vụ công
     * @param idHoSo (optional) 
     * @param isGuiThongBaoThueDvc (optional) 
     * @param noiDungYeuCau (optional) 
     * @param documents (optional) 
     * @param fileDinhKems (optional) 
     * @param fileVanBans (optional) 
     */
    yeuCauBoSungHoSo(idHoSo: string | null | undefined, isGuiThongBaoThueDvc: boolean | undefined, noiDungYeuCau: string | null | undefined, documents: FileParameter[] | null | undefined, fileDinhKems: string | null | undefined, fileVanBans: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/YeuCauBoSungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = new FormData();
        if (idHoSo !== null && idHoSo !== undefined)
            content_.append("IdHoSo", idHoSo.toString());
        if (isGuiThongBaoThueDvc === null || isGuiThongBaoThueDvc === undefined)
            throw new Error("The parameter 'isGuiThongBaoThueDvc' cannot be null.");
        else
            content_.append("IsGuiThongBaoThueDvc", isGuiThongBaoThueDvc.toString());
        if (noiDungYeuCau !== null && noiDungYeuCau !== undefined)
            content_.append("NoiDungYeuCau", noiDungYeuCau.toString());
        if (documents !== null && documents !== undefined)
            documents.forEach(item_ => content_.append("Documents", item_.data, item_.fileName ? item_.fileName : "Documents") );
        if (fileDinhKems !== null && fileDinhKems !== undefined)
            content_.append("FileDinhKems", fileDinhKems.toString());
        if (fileVanBans !== null && fileVanBans !== undefined)
            content_.append("FileVanBans", fileVanBans.toString());

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processYeuCauBoSungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processYeuCauBoSungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processYeuCauBoSungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tam dung hồ sơ Dịch vụ công KonTum
     * @param idHoSo (optional) 
     * @param noiDungYeuCau (optional) 
     * @param thoiGianTamDung (optional) 
     * @param documents (optional) 
     * @param checkTuDong (optional) 
     */
    tamDungHoSo(idHoSo: string | null | undefined, noiDungYeuCau: string | null | undefined, thoiGianTamDung: number | undefined, documents: FileParameter[] | null | undefined, checkTuDong: boolean | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/TamDungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = new FormData();
        if (idHoSo !== null && idHoSo !== undefined)
            content_.append("IdHoSo", idHoSo.toString());
        if (noiDungYeuCau !== null && noiDungYeuCau !== undefined)
            content_.append("NoiDungYeuCau", noiDungYeuCau.toString());
        if (thoiGianTamDung === null || thoiGianTamDung === undefined)
            throw new Error("The parameter 'thoiGianTamDung' cannot be null.");
        else
            content_.append("ThoiGianTamDung", thoiGianTamDung.toString());
        if (documents !== null && documents !== undefined)
            documents.forEach(item_ => content_.append("Documents", item_.data, item_.fileName ? item_.fileName : "Documents") );
        if (checkTuDong === null || checkTuDong === undefined)
            throw new Error("The parameter 'checkTuDong' cannot be null.");
        else
            content_.append("CheckTuDong", checkTuDong.toString());

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTamDungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTamDungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTamDungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Tiếp tục xử lý sau khi tạm dừng hồ sơ Dịch vụ công KonTum
     * @param idHoSo (optional) 
     * @param noiDungYeuCau (optional) 
     */
    xuLyTiepHoSo(idHoSo: string | null | undefined, noiDungYeuCau: string | null | undefined): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/XuLyTiepHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = new FormData();
        if (idHoSo !== null && idHoSo !== undefined)
            content_.append("IdHoSo", idHoSo.toString());
        if (noiDungYeuCau !== null && noiDungYeuCau !== undefined)
            content_.append("NoiDungYeuCau", noiDungYeuCau.toString());

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processXuLyTiepHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processXuLyTiepHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processXuLyTiepHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Chuyển lại kết thúc hồ sơ sang dịch vu công
     */
    chuyenLaiKetThucHoSoSangDVC(request: ChuyenLaiKetThucHoSoSangDVCCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCHoSo/ChuyenLaiKetThucHoSoSangDVC";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(request);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processChuyenLaiKetThucHoSoSangDVC(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processChuyenLaiKetThucHoSoSangDVC(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processChuyenLaiKetThucHoSoSangDVC(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IDVCIGateV1Client {
    /**
     * Tiếp nhận Hồ sơ Dịch vụ công iGate V1
     */
    tiepNhanHoSo(command: AddDvcHoSoIGateV1RawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công iGate V1
     */
    boSungHoSo(command: UpdateDvcHoSoIGateV1RawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean>;
    /**
     * Lấy thông tin hồ sơ
     */
    layThongTinHoSo(command: GetThongTinHoSoQuery): Observable<ApiResultOfDvcIGateV1ThongTinHoSoModel>;
    /**
     * Tiếp nhận Hồ sơ Dịch vụ công iGate V1; version 2 phương án ánh xạ bên dịch vụ công
     */
    tiepNhanHoSoV2(command: AddDvcHoSoIGateV1PlanBRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Thông tin phiếu kiểm soát
     */
    phieuKiemSoatIlis(command: PhieuKiemSoatIlisQuery): Observable<ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCIGateV1Client implements IDVCIGateV1Client {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận Hồ sơ Dịch vụ công iGate V1
     */
    tiepNhanHoSo(command: AddDvcHoSoIGateV1RawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV1/TiepNhanHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công iGate V1
     */
    boSungHoSo(command: UpdateDvcHoSoIGateV1RawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV1/BoSungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBoSungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBoSungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processBoSungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV1/CapNhatTrangThaiHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatTrangThaiHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatTrangThaiHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatTrangThaiHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Lấy thông tin hồ sơ
     */
    layThongTinHoSo(command: GetThongTinHoSoQuery): Observable<ApiResultOfDvcIGateV1ThongTinHoSoModel> {
        let url_ = this.baseUrl + "/api/DVCIGateV1/LayThongTinHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processLayThongTinHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processLayThongTinHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfDvcIGateV1ThongTinHoSoModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfDvcIGateV1ThongTinHoSoModel>><any>_observableThrow(response_);
        }));
    }

    protected processLayThongTinHoSo(response: HttpResponseBase): Observable<ApiResultOfDvcIGateV1ThongTinHoSoModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfDvcIGateV1ThongTinHoSoModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfDvcIGateV1ThongTinHoSoModel>(<any>null);
    }

    /**
     * Tiếp nhận Hồ sơ Dịch vụ công iGate V1; version 2 phương án ánh xạ bên dịch vụ công
     */
    tiepNhanHoSoV2(command: AddDvcHoSoIGateV1PlanBRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV1/TiepNhanHoSoV2";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSoV2(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSoV2(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSoV2(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Thông tin phiếu kiểm soát
     */
    phieuKiemSoatIlis(command: PhieuKiemSoatIlisQuery): Observable<ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel> {
        let url_ = this.baseUrl + "/api/DVCIGateV1/PhieuKiemSoatIlis";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processPhieuKiemSoatIlis(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processPhieuKiemSoatIlis(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel>><any>_observableThrow(response_);
        }));
    }

    protected processPhieuKiemSoatIlis(response: HttpResponseBase): Observable<ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel>(<any>null);
    }
}

export interface IDVCIGateV2Client {
    /**
     * Tiếp nhận Hồ sơ Dịch vụ công IGate V2
     */
    tiepNhanHoSo(command: AddDvcHoSoIGateV2RawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công IGate V2
     */
    boSungHoSo(command: UpdateDvcHoSoIGateV2RawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC IGate V2
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoIGateV2Command): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCIGateV2Client implements IDVCIGateV2Client {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận Hồ sơ Dịch vụ công IGate V2
     */
    tiepNhanHoSo(command: AddDvcHoSoIGateV2RawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV2/TiepNhanHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công IGate V2
     */
    boSungHoSo(command: UpdateDvcHoSoIGateV2RawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV2/BoSungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBoSungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBoSungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processBoSungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC IGate V2
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoIGateV2Command): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCIGateV2/CapNhatTrangThaiHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatTrangThaiHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatTrangThaiHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatTrangThaiHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export interface IDVCQuangNinhClient {
    /**
     * Tiếp nhận Hồ sơ Dịch vụ công Quảng Ninh
     */
    tiepNhanHoSo(command: AddDvcHoSoQuangNinhRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công Quảng Ninh
     */
    boSungHoSo(command: UpdateDvcHoSoQuangNinhRawDataCommand): Observable<ApiResultOfBoolean>;
    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC Quảng Ninh
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean>;
}

@Injectable({
    providedIn: 'root'
})
export class DVCQuangNinhClient implements IDVCQuangNinhClient {
    private http: HttpClient;
    private baseUrl: string;
    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_LPM_BASE_URL) baseUrl?: string) {
        this.http = http;
        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : "";
    }

    /**
     * Tiếp nhận Hồ sơ Dịch vụ công Quảng Ninh
     */
    tiepNhanHoSo(command: AddDvcHoSoQuangNinhRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCQuangNinh/TiepNhanHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processTiepNhanHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processTiepNhanHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processTiepNhanHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật Hồ sơ bổ sung Dịch vụ công Quảng Ninh
     */
    boSungHoSo(command: UpdateDvcHoSoQuangNinhRawDataCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCQuangNinh/BoSungHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processBoSungHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processBoSungHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processBoSungHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }

    /**
     * Cập nhật trạng thái trả hồ sơ từ DVC Quảng Ninh
     */
    capNhatTrangThaiHoSo(command: CapNhatTrangThaiHoSoCommand): Observable<ApiResultOfBoolean> {
        let url_ = this.baseUrl + "/api/DVCQuangNinh/CapNhatTrangThaiHoSo";
        url_ = url_.replace(/[?&]$/, "");

        const content_ = JSON.stringify(command);

        let options_ : any = {
            body: content_,
            observe: "response",
            responseType: "blob",
            headers: new HttpHeaders({
                "Content-Type": "application/json",
                "Accept": "application/json"
            })
        };

        return this.http.request("post", url_, options_).pipe(_observableMergeMap((response_ : any) => {
            return this.processCapNhatTrangThaiHoSo(response_);
        })).pipe(_observableCatch((response_: any) => {
            if (response_ instanceof HttpResponseBase) {
                try {
                    return this.processCapNhatTrangThaiHoSo(<any>response_);
                } catch (e) {
                    return <Observable<ApiResultOfBoolean>><any>_observableThrow(e);
                }
            } else
                return <Observable<ApiResultOfBoolean>><any>_observableThrow(response_);
        }));
    }

    protected processCapNhatTrangThaiHoSo(response: HttpResponseBase): Observable<ApiResultOfBoolean> {
        const status = response.status;
        const responseBlob =
            response instanceof HttpResponse ? response.body :
            (<any>response).error instanceof Blob ? (<any>response).error : undefined;

        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}
        if (status === 200) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result200: any = null;
            let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result200 = ApiResultOfBoolean.fromJS(resultData200);
            return _observableOf(result200);
            }));
        } else if (status === 404) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            let result404: any = null;
            let resultData404 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
            result404 = ApiResultOfString.fromJS(resultData404);
            return throwException("A server side error occurred.", status, _responseText, _headers, result404);
            }));
        } else if (status !== 200 && status !== 204) {
            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {
            return throwException("An unexpected server error occurred.", status, _responseText, _headers);
            }));
        }
        return _observableOf<ApiResultOfBoolean>(<any>null);
    }
}

export class ApiResultOfBoolean implements IApiResultOfBoolean {
    isError?: boolean;
    message?: string | undefined;
    data?: boolean;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfBoolean) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"];
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfBoolean {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfBoolean();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfBoolean {
    isError?: boolean;
    message?: string | undefined;
    data?: boolean;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export enum ApiCode {
    Success = 0,
    GeneralError = 100,
    ExistingData = 102,
    InvalidArgument = 105,
    BusinessError = 400,
    UnAuthorizedAccess = 401,
    NotFoundError = 404,
    InternalError = 500,
    ValidationError = 600,
    BuocXuLyNotExistOrProcessed = 801,
}

export class ValidationError implements IValidationError {
    field?: string | undefined;
    message?: string | undefined;

    constructor(data?: IValidationError) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.field = _data["field"];
            this.message = _data["message"];
        }
    }

    static fromJS(data: any): ValidationError {
        data = typeof data === 'object' ? data : {};
        let result = new ValidationError();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["field"] = this.field;
        data["message"] = this.message;
        return data; 
    }
}

export interface IValidationError {
    field?: string | undefined;
    message?: string | undefined;
}

export class ApiResultOfString implements IApiResultOfString {
    isError?: boolean;
    message?: string | undefined;
    data?: string | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfString) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"];
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfString {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfString();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfString {
    isError?: boolean;
    message?: string | undefined;
    data?: string | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfBuoc implements IApiResultOfBuoc {
    isError?: boolean;
    message?: string | undefined;
    data?: Buoc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfBuoc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? Buoc.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfBuoc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfBuoc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfBuoc {
    isError?: boolean;
    message?: string | undefined;
    data?: Buoc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class AuditableEntity implements IAuditableEntity {
    ngayTao?: Date | undefined;
    nguoiTao?: string | undefined;
    idNguoiTao?: string | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiCapNhat?: string | undefined;
    idNguoiCapNhat?: string | undefined;

    constructor(data?: IAuditableEntity) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.nguoiTao = _data["nguoiTao"];
            this.idNguoiTao = _data["idNguoiTao"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.idNguoiCapNhat = _data["idNguoiCapNhat"];
        }
    }

    static fromJS(data: any): AuditableEntity {
        data = typeof data === 'object' ? data : {};
        let result = new AuditableEntity();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["nguoiTao"] = this.nguoiTao;
        data["idNguoiTao"] = this.idNguoiTao;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["idNguoiCapNhat"] = this.idNguoiCapNhat;
        return data; 
    }
}

export interface IAuditableEntity {
    ngayTao?: Date | undefined;
    nguoiTao?: string | undefined;
    idNguoiTao?: string | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiCapNhat?: string | undefined;
    idNguoiCapNhat?: string | undefined;
}

export class BaseEntityOfString extends AuditableEntity implements IBaseEntityOfString {
    id?: string | undefined;

    constructor(data?: IBaseEntityOfString) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): BaseEntityOfString {
        data = typeof data === 'object' ? data : {};
        let result = new BaseEntityOfString();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        super.toJSON(data);
        return data; 
    }
}

export interface IBaseEntityOfString extends IAuditableEntity {
    id?: string | undefined;
}

export class Buoc extends BaseEntityOfString implements IBuoc {
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    maForm?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTime?: number | undefined;
    idTrangThaiHoSo?: number | undefined;
    idQuyTrinh?: string | undefined;
    quyTrinh?: QuyTrinh | undefined;
    trangThaiHoSo?: TrangThaiHoSo | undefined;
    ketQuaBuocs?: KetQuaBuoc[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    cauHinhPhanCongCTs?: CauHinhPhanCongCT[] | undefined;
    phanCongs?: PhanCong[] | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    cauHinhBuocs?: CauHinhBuoc[] | undefined;
    idBuocNguon?: string | undefined;
    idBuocDich?: string | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;

    constructor(data?: IBuoc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.maForm = _data["maForm"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.thoiGianThucHienTime = _data["thoiGianThucHienTime"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.quyTrinh = _data["quyTrinh"] ? QuyTrinh.fromJS(_data["quyTrinh"]) : <any>undefined;
            this.trangThaiHoSo = _data["trangThaiHoSo"] ? TrangThaiHoSo.fromJS(_data["trangThaiHoSo"]) : <any>undefined;
            if (Array.isArray(_data["ketQuaBuocs"])) {
                this.ketQuaBuocs = [] as any;
                for (let item of _data["ketQuaBuocs"])
                    this.ketQuaBuocs!.push(KetQuaBuoc.fromJS(item));
            }
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
            if (Array.isArray(_data["tienTrinhXuLys"])) {
                this.tienTrinhXuLys = [] as any;
                for (let item of _data["tienTrinhXuLys"])
                    this.tienTrinhXuLys!.push(TienTrinhXuLy.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhPhanCongCTs"])) {
                this.cauHinhPhanCongCTs = [] as any;
                for (let item of _data["cauHinhPhanCongCTs"])
                    this.cauHinhPhanCongCTs!.push(CauHinhPhanCongCT.fromJS(item));
            }
            if (Array.isArray(_data["phanCongs"])) {
                this.phanCongs = [] as any;
                for (let item of _data["phanCongs"])
                    this.phanCongs!.push(PhanCong.fromJS(item));
            }
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhBuocs"])) {
                this.cauHinhBuocs = [] as any;
                for (let item of _data["cauHinhBuocs"])
                    this.cauHinhBuocs!.push(CauHinhBuoc.fromJS(item));
            }
            this.idBuocNguon = _data["idBuocNguon"];
            this.idBuocDich = _data["idBuocDich"];
            if (Array.isArray(_data["cauHinhMails"])) {
                this.cauHinhMails = [] as any;
                for (let item of _data["cauHinhMails"])
                    this.cauHinhMails!.push(CauHinhMail.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Buoc {
        data = typeof data === 'object' ? data : {};
        let result = new Buoc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["maForm"] = this.maForm;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["thoiGianThucHienTime"] = this.thoiGianThucHienTime;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["quyTrinh"] = this.quyTrinh ? this.quyTrinh.toJSON() : <any>undefined;
        data["trangThaiHoSo"] = this.trangThaiHoSo ? this.trangThaiHoSo.toJSON() : <any>undefined;
        if (Array.isArray(this.ketQuaBuocs)) {
            data["ketQuaBuocs"] = [];
            for (let item of this.ketQuaBuocs)
                data["ketQuaBuocs"].push(item.toJSON());
        }
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        if (Array.isArray(this.tienTrinhXuLys)) {
            data["tienTrinhXuLys"] = [];
            for (let item of this.tienTrinhXuLys)
                data["tienTrinhXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhPhanCongCTs)) {
            data["cauHinhPhanCongCTs"] = [];
            for (let item of this.cauHinhPhanCongCTs)
                data["cauHinhPhanCongCTs"].push(item.toJSON());
        }
        if (Array.isArray(this.phanCongs)) {
            data["phanCongs"] = [];
            for (let item of this.phanCongs)
                data["phanCongs"].push(item.toJSON());
        }
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhBuocs)) {
            data["cauHinhBuocs"] = [];
            for (let item of this.cauHinhBuocs)
                data["cauHinhBuocs"].push(item.toJSON());
        }
        data["idBuocNguon"] = this.idBuocNguon;
        data["idBuocDich"] = this.idBuocDich;
        if (Array.isArray(this.cauHinhMails)) {
            data["cauHinhMails"] = [];
            for (let item of this.cauHinhMails)
                data["cauHinhMails"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IBuoc extends IBaseEntityOfString {
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    maForm?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTime?: number | undefined;
    idTrangThaiHoSo?: number | undefined;
    idQuyTrinh?: string | undefined;
    quyTrinh?: QuyTrinh | undefined;
    trangThaiHoSo?: TrangThaiHoSo | undefined;
    ketQuaBuocs?: KetQuaBuoc[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    cauHinhPhanCongCTs?: CauHinhPhanCongCT[] | undefined;
    phanCongs?: PhanCong[] | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    cauHinhBuocs?: CauHinhBuoc[] | undefined;
    idBuocNguon?: string | undefined;
    idBuocDich?: string | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;
}

export enum TrangThai {
    DeActive = 0,
    Active = 1,
}

export class QuyTrinh extends BaseEntityOfString implements IQuyTrinh {
    maQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    ngayHieuLuc?: Date | undefined;
    ngayHetHan?: Date | undefined;
    thoiGianThucHien?: number | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    idLinhVuc?: string | undefined;
    linhVuc?: LinhVuc | undefined;
    idThuTuc?: string | undefined;
    thuTuc?: ThuTuc | undefined;
    maTinh?: string | undefined;
    fileQuyTrinh?: string | undefined;
    idProcess?: string | undefined;
    suDungMacDinh?: SuDung;
    buocs?: Buoc[] | undefined;
    hoSos?: HoSo[] | undefined;
    phanCongs?: PhanCong[] | undefined;
    cauHinhPhanCongs?: CauHinhPhanCong[] | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;

    constructor(data?: IQuyTrinh) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.ngayHieuLuc = _data["ngayHieuLuc"] ? new Date(_data["ngayHieuLuc"].toString()) : <any>undefined;
            this.ngayHetHan = _data["ngayHetHan"] ? new Date(_data["ngayHetHan"].toString()) : <any>undefined;
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.linhVuc = _data["linhVuc"] ? LinhVuc.fromJS(_data["linhVuc"]) : <any>undefined;
            this.idThuTuc = _data["idThuTuc"];
            this.thuTuc = _data["thuTuc"] ? ThuTuc.fromJS(_data["thuTuc"]) : <any>undefined;
            this.maTinh = _data["maTinh"];
            this.fileQuyTrinh = _data["fileQuyTrinh"];
            this.idProcess = _data["idProcess"];
            this.suDungMacDinh = _data["suDungMacDinh"];
            if (Array.isArray(_data["buocs"])) {
                this.buocs = [] as any;
                for (let item of _data["buocs"])
                    this.buocs!.push(Buoc.fromJS(item));
            }
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            if (Array.isArray(_data["phanCongs"])) {
                this.phanCongs = [] as any;
                for (let item of _data["phanCongs"])
                    this.phanCongs!.push(PhanCong.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhPhanCongs"])) {
                this.cauHinhPhanCongs = [] as any;
                for (let item of _data["cauHinhPhanCongs"])
                    this.cauHinhPhanCongs!.push(CauHinhPhanCong.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhMails"])) {
                this.cauHinhMails = [] as any;
                for (let item of _data["cauHinhMails"])
                    this.cauHinhMails!.push(CauHinhMail.fromJS(item));
            }
        }
    }

    static fromJS(data: any): QuyTrinh {
        data = typeof data === 'object' ? data : {};
        let result = new QuyTrinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["ngayHieuLuc"] = this.ngayHieuLuc ? this.ngayHieuLuc.toISOString() : <any>undefined;
        data["ngayHetHan"] = this.ngayHetHan ? this.ngayHetHan.toISOString() : <any>undefined;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["idLinhVuc"] = this.idLinhVuc;
        data["linhVuc"] = this.linhVuc ? this.linhVuc.toJSON() : <any>undefined;
        data["idThuTuc"] = this.idThuTuc;
        data["thuTuc"] = this.thuTuc ? this.thuTuc.toJSON() : <any>undefined;
        data["maTinh"] = this.maTinh;
        data["fileQuyTrinh"] = this.fileQuyTrinh;
        data["idProcess"] = this.idProcess;
        data["suDungMacDinh"] = this.suDungMacDinh;
        if (Array.isArray(this.buocs)) {
            data["buocs"] = [];
            for (let item of this.buocs)
                data["buocs"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        if (Array.isArray(this.phanCongs)) {
            data["phanCongs"] = [];
            for (let item of this.phanCongs)
                data["phanCongs"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhPhanCongs)) {
            data["cauHinhPhanCongs"] = [];
            for (let item of this.cauHinhPhanCongs)
                data["cauHinhPhanCongs"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhMails)) {
            data["cauHinhMails"] = [];
            for (let item of this.cauHinhMails)
                data["cauHinhMails"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IQuyTrinh extends IBaseEntityOfString {
    maQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    ngayHieuLuc?: Date | undefined;
    ngayHetHan?: Date | undefined;
    thoiGianThucHien?: number | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    idLinhVuc?: string | undefined;
    linhVuc?: LinhVuc | undefined;
    idThuTuc?: string | undefined;
    thuTuc?: ThuTuc | undefined;
    maTinh?: string | undefined;
    fileQuyTrinh?: string | undefined;
    idProcess?: string | undefined;
    suDungMacDinh?: SuDung;
    buocs?: Buoc[] | undefined;
    hoSos?: HoSo[] | undefined;
    phanCongs?: PhanCong[] | undefined;
    cauHinhPhanCongs?: CauHinhPhanCong[] | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;
}

export class LinhVuc extends BaseEntityOfString implements ILinhVuc {
    maLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    moTa?: string | undefined;
    quyTrinhs?: QuyTrinh[] | undefined;
    thuTucs?: ThuTuc[] | undefined;
    hoSos?: HoSo[] | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;

    constructor(data?: ILinhVuc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maLinhVuc = _data["maLinhVuc"];
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.moTa = _data["moTa"];
            if (Array.isArray(_data["quyTrinhs"])) {
                this.quyTrinhs = [] as any;
                for (let item of _data["quyTrinhs"])
                    this.quyTrinhs!.push(QuyTrinh.fromJS(item));
            }
            if (Array.isArray(_data["thuTucs"])) {
                this.thuTucs = [] as any;
                for (let item of _data["thuTucs"])
                    this.thuTucs!.push(ThuTuc.fromJS(item));
            }
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
        }
    }

    static fromJS(data: any): LinhVuc {
        data = typeof data === 'object' ? data : {};
        let result = new LinhVuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLinhVuc"] = this.maLinhVuc;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["moTa"] = this.moTa;
        if (Array.isArray(this.quyTrinhs)) {
            data["quyTrinhs"] = [];
            for (let item of this.quyTrinhs)
                data["quyTrinhs"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucs)) {
            data["thuTucs"] = [];
            for (let item of this.thuTucs)
                data["thuTucs"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        super.toJSON(data);
        return data; 
    }
}

export interface ILinhVuc extends IBaseEntityOfString {
    maLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    moTa?: string | undefined;
    quyTrinhs?: QuyTrinh[] | undefined;
    thuTucs?: ThuTuc[] | undefined;
    hoSos?: HoSo[] | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
}

export class ThuTuc extends BaseEntityOfString implements IThuTuc {
    maThuTuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenVietTat?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    mucDoThuTuc?: MucDoThuTuc;
    tenMucDoThuTuc?: string | undefined;
    idLinhVuc?: string | undefined;
    linhVuc?: LinhVuc | undefined;
    quyTrinhs?: QuyTrinh[] | undefined;
    hoSos?: HoSo[] | undefined;
    thuTucLoaiGiayTos?: ThuTucLoaiGiayTo[] | undefined;
    thuTucDvhcs?: ThuTucDvhc[] | undefined;
    loaiBienDong?: string | undefined;

    constructor(data?: IThuTuc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maThuTuc = _data["maThuTuc"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenVietTat = _data["tenVietTat"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.mucDoThuTuc = _data["mucDoThuTuc"];
            this.tenMucDoThuTuc = _data["tenMucDoThuTuc"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.linhVuc = _data["linhVuc"] ? LinhVuc.fromJS(_data["linhVuc"]) : <any>undefined;
            if (Array.isArray(_data["quyTrinhs"])) {
                this.quyTrinhs = [] as any;
                for (let item of _data["quyTrinhs"])
                    this.quyTrinhs!.push(QuyTrinh.fromJS(item));
            }
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            if (Array.isArray(_data["thuTucLoaiGiayTos"])) {
                this.thuTucLoaiGiayTos = [] as any;
                for (let item of _data["thuTucLoaiGiayTos"])
                    this.thuTucLoaiGiayTos!.push(ThuTucLoaiGiayTo.fromJS(item));
            }
            if (Array.isArray(_data["thuTucDvhcs"])) {
                this.thuTucDvhcs = [] as any;
                for (let item of _data["thuTucDvhcs"])
                    this.thuTucDvhcs!.push(ThuTucDvhc.fromJS(item));
            }
            this.loaiBienDong = _data["loaiBienDong"];
        }
    }

    static fromJS(data: any): ThuTuc {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maThuTuc"] = this.maThuTuc;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenVietTat"] = this.tenVietTat;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["mucDoThuTuc"] = this.mucDoThuTuc;
        data["tenMucDoThuTuc"] = this.tenMucDoThuTuc;
        data["idLinhVuc"] = this.idLinhVuc;
        data["linhVuc"] = this.linhVuc ? this.linhVuc.toJSON() : <any>undefined;
        if (Array.isArray(this.quyTrinhs)) {
            data["quyTrinhs"] = [];
            for (let item of this.quyTrinhs)
                data["quyTrinhs"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucLoaiGiayTos)) {
            data["thuTucLoaiGiayTos"] = [];
            for (let item of this.thuTucLoaiGiayTos)
                data["thuTucLoaiGiayTos"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucDvhcs)) {
            data["thuTucDvhcs"] = [];
            for (let item of this.thuTucDvhcs)
                data["thuTucDvhcs"].push(item.toJSON());
        }
        data["loaiBienDong"] = this.loaiBienDong;
        super.toJSON(data);
        return data; 
    }
}

export interface IThuTuc extends IBaseEntityOfString {
    maThuTuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenVietTat?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    mucDoThuTuc?: MucDoThuTuc;
    tenMucDoThuTuc?: string | undefined;
    idLinhVuc?: string | undefined;
    linhVuc?: LinhVuc | undefined;
    quyTrinhs?: QuyTrinh[] | undefined;
    hoSos?: HoSo[] | undefined;
    thuTucLoaiGiayTos?: ThuTucLoaiGiayTo[] | undefined;
    thuTucDvhcs?: ThuTucDvhc[] | undefined;
    loaiBienDong?: string | undefined;
}

export enum MucDoThuTuc {
    MucDo1 = 1,
    MucDo2 = 2,
    MucDo3 = 3,
    MucDo4 = 4,
}

export class HoSo extends BaseEntityOfString implements IHoSo {
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    ngayHoanThanh?: Date | undefined;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idTrangThaiThucHien?: number;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    giaTriCauHinh?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    heThongDvc?: HeThongDvc;
    maTinh?: string | undefined;
    idHoSoDVC?: string | undefined;
    loaiHoSo?: LoaiHoSo | undefined;
    quyTrinh?: QuyTrinh | undefined;
    thuTuc?: ThuTuc | undefined;
    linhVuc?: LinhVuc | undefined;
    loaiGiayToTuyThan?: LoaiGiayTo | undefined;
    trangThaiHoSo?: TrangThaiHoSo | undefined;
    trangThaiXuLy?: TrangThaiXuLy | undefined;
    trangThaiThucHien?: TrangThaiThucHien | undefined;
    soTien?: number | undefined;
    dvhc?: Dvhc | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    phanCongs?: PhanCong[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
    hoSoLoaiGiayTos?: HoSoLoaiGiayTo[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    hoSoDangKys?: HoSoDangKy[] | undefined;
    phieuChuyenThues?: PhieuChuyenThue[] | undefined;
    vanBanXuLys?: VanBanXuly[] | undefined;
    hoSoQuets?: HoSoQuet[] | undefined;
    hoSoDoiTuongKhaiThacs?: HoSoDoiTuongKhaiThac[] | undefined;
    ngayHanXuLy?: Date | undefined;
    dieuKienInGCN?: number | undefined;
    thamDinh?: number | undefined;
    thamTra?: number | undefined;
    thoiGianThucHienTheoNgayHenTra?: number | undefined;

    constructor(data?: IHoSo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.soBienNhan = _data["soBienNhan"];
            this.maHoSo = _data["maHoSo"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.chuHoSo = _data["chuHoSo"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.ngayHoanThanh = _data["ngayHoanThanh"] ? new Date(_data["ngayHoanThanh"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idNguoiThuLy = _data["idNguoiThuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.giaTriCauHinh = _data["giaTriCauHinh"];
            this.nguonDuLieu = _data["nguonDuLieu"];
            this.heThongDvc = _data["heThongDvc"];
            this.maTinh = _data["maTinh"];
            this.idHoSoDVC = _data["idHoSoDVC"];
            this.loaiHoSo = _data["loaiHoSo"] ? LoaiHoSo.fromJS(_data["loaiHoSo"]) : <any>undefined;
            this.quyTrinh = _data["quyTrinh"] ? QuyTrinh.fromJS(_data["quyTrinh"]) : <any>undefined;
            this.thuTuc = _data["thuTuc"] ? ThuTuc.fromJS(_data["thuTuc"]) : <any>undefined;
            this.linhVuc = _data["linhVuc"] ? LinhVuc.fromJS(_data["linhVuc"]) : <any>undefined;
            this.loaiGiayToTuyThan = _data["loaiGiayToTuyThan"] ? LoaiGiayTo.fromJS(_data["loaiGiayToTuyThan"]) : <any>undefined;
            this.trangThaiHoSo = _data["trangThaiHoSo"] ? TrangThaiHoSo.fromJS(_data["trangThaiHoSo"]) : <any>undefined;
            this.trangThaiXuLy = _data["trangThaiXuLy"] ? TrangThaiXuLy.fromJS(_data["trangThaiXuLy"]) : <any>undefined;
            this.trangThaiThucHien = _data["trangThaiThucHien"] ? TrangThaiThucHien.fromJS(_data["trangThaiThucHien"]) : <any>undefined;
            this.soTien = _data["soTien"];
            this.dvhc = _data["dvhc"] ? Dvhc.fromJS(_data["dvhc"]) : <any>undefined;
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["phanCongs"])) {
                this.phanCongs = [] as any;
                for (let item of _data["phanCongs"])
                    this.phanCongs!.push(PhanCong.fromJS(item));
            }
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
            if (Array.isArray(_data["hoSoLoaiGiayTos"])) {
                this.hoSoLoaiGiayTos = [] as any;
                for (let item of _data["hoSoLoaiGiayTos"])
                    this.hoSoLoaiGiayTos!.push(HoSoLoaiGiayTo.fromJS(item));
            }
            if (Array.isArray(_data["tienTrinhXuLys"])) {
                this.tienTrinhXuLys = [] as any;
                for (let item of _data["tienTrinhXuLys"])
                    this.tienTrinhXuLys!.push(TienTrinhXuLy.fromJS(item));
            }
            if (Array.isArray(_data["hoSoDangKys"])) {
                this.hoSoDangKys = [] as any;
                for (let item of _data["hoSoDangKys"])
                    this.hoSoDangKys!.push(HoSoDangKy.fromJS(item));
            }
            if (Array.isArray(_data["phieuChuyenThues"])) {
                this.phieuChuyenThues = [] as any;
                for (let item of _data["phieuChuyenThues"])
                    this.phieuChuyenThues!.push(PhieuChuyenThue.fromJS(item));
            }
            if (Array.isArray(_data["vanBanXuLys"])) {
                this.vanBanXuLys = [] as any;
                for (let item of _data["vanBanXuLys"])
                    this.vanBanXuLys!.push(VanBanXuly.fromJS(item));
            }
            if (Array.isArray(_data["hoSoQuets"])) {
                this.hoSoQuets = [] as any;
                for (let item of _data["hoSoQuets"])
                    this.hoSoQuets!.push(HoSoQuet.fromJS(item));
            }
            if (Array.isArray(_data["hoSoDoiTuongKhaiThacs"])) {
                this.hoSoDoiTuongKhaiThacs = [] as any;
                for (let item of _data["hoSoDoiTuongKhaiThacs"])
                    this.hoSoDoiTuongKhaiThacs!.push(HoSoDoiTuongKhaiThac.fromJS(item));
            }
            this.ngayHanXuLy = _data["ngayHanXuLy"] ? new Date(_data["ngayHanXuLy"].toString()) : <any>undefined;
            this.dieuKienInGCN = _data["dieuKienInGCN"];
            this.thamDinh = _data["thamDinh"];
            this.thamTra = _data["thamTra"];
            this.thoiGianThucHienTheoNgayHenTra = _data["thoiGianThucHienTheoNgayHenTra"];
        }
    }

    static fromJS(data: any): HoSo {
        data = typeof data === 'object' ? data : {};
        let result = new HoSo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["soBienNhan"] = this.soBienNhan;
        data["maHoSo"] = this.maHoSo;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["chuHoSo"] = this.chuHoSo;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["ngayHoanThanh"] = this.ngayHoanThanh ? this.ngayHoanThanh.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idNguoiThuLy"] = this.idNguoiThuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["giaTriCauHinh"] = this.giaTriCauHinh;
        data["nguonDuLieu"] = this.nguonDuLieu;
        data["heThongDvc"] = this.heThongDvc;
        data["maTinh"] = this.maTinh;
        data["idHoSoDVC"] = this.idHoSoDVC;
        data["loaiHoSo"] = this.loaiHoSo ? this.loaiHoSo.toJSON() : <any>undefined;
        data["quyTrinh"] = this.quyTrinh ? this.quyTrinh.toJSON() : <any>undefined;
        data["thuTuc"] = this.thuTuc ? this.thuTuc.toJSON() : <any>undefined;
        data["linhVuc"] = this.linhVuc ? this.linhVuc.toJSON() : <any>undefined;
        data["loaiGiayToTuyThan"] = this.loaiGiayToTuyThan ? this.loaiGiayToTuyThan.toJSON() : <any>undefined;
        data["trangThaiHoSo"] = this.trangThaiHoSo ? this.trangThaiHoSo.toJSON() : <any>undefined;
        data["trangThaiXuLy"] = this.trangThaiXuLy ? this.trangThaiXuLy.toJSON() : <any>undefined;
        data["trangThaiThucHien"] = this.trangThaiThucHien ? this.trangThaiThucHien.toJSON() : <any>undefined;
        data["soTien"] = this.soTien;
        data["dvhc"] = this.dvhc ? this.dvhc.toJSON() : <any>undefined;
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.phanCongs)) {
            data["phanCongs"] = [];
            for (let item of this.phanCongs)
                data["phanCongs"].push(item.toJSON());
        }
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoLoaiGiayTos)) {
            data["hoSoLoaiGiayTos"] = [];
            for (let item of this.hoSoLoaiGiayTos)
                data["hoSoLoaiGiayTos"].push(item.toJSON());
        }
        if (Array.isArray(this.tienTrinhXuLys)) {
            data["tienTrinhXuLys"] = [];
            for (let item of this.tienTrinhXuLys)
                data["tienTrinhXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoDangKys)) {
            data["hoSoDangKys"] = [];
            for (let item of this.hoSoDangKys)
                data["hoSoDangKys"].push(item.toJSON());
        }
        if (Array.isArray(this.phieuChuyenThues)) {
            data["phieuChuyenThues"] = [];
            for (let item of this.phieuChuyenThues)
                data["phieuChuyenThues"].push(item.toJSON());
        }
        if (Array.isArray(this.vanBanXuLys)) {
            data["vanBanXuLys"] = [];
            for (let item of this.vanBanXuLys)
                data["vanBanXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoQuets)) {
            data["hoSoQuets"] = [];
            for (let item of this.hoSoQuets)
                data["hoSoQuets"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoDoiTuongKhaiThacs)) {
            data["hoSoDoiTuongKhaiThacs"] = [];
            for (let item of this.hoSoDoiTuongKhaiThacs)
                data["hoSoDoiTuongKhaiThacs"].push(item.toJSON());
        }
        data["ngayHanXuLy"] = this.ngayHanXuLy ? this.ngayHanXuLy.toISOString() : <any>undefined;
        data["dieuKienInGCN"] = this.dieuKienInGCN;
        data["thamDinh"] = this.thamDinh;
        data["thamTra"] = this.thamTra;
        data["thoiGianThucHienTheoNgayHenTra"] = this.thoiGianThucHienTheoNgayHenTra;
        super.toJSON(data);
        return data; 
    }
}

export interface IHoSo extends IBaseEntityOfString {
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    ngayHoanThanh?: Date | undefined;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idTrangThaiThucHien?: number;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    giaTriCauHinh?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    heThongDvc?: HeThongDvc;
    maTinh?: string | undefined;
    idHoSoDVC?: string | undefined;
    loaiHoSo?: LoaiHoSo | undefined;
    quyTrinh?: QuyTrinh | undefined;
    thuTuc?: ThuTuc | undefined;
    linhVuc?: LinhVuc | undefined;
    loaiGiayToTuyThan?: LoaiGiayTo | undefined;
    trangThaiHoSo?: TrangThaiHoSo | undefined;
    trangThaiXuLy?: TrangThaiXuLy | undefined;
    trangThaiThucHien?: TrangThaiThucHien | undefined;
    soTien?: number | undefined;
    dvhc?: Dvhc | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    phanCongs?: PhanCong[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
    hoSoLoaiGiayTos?: HoSoLoaiGiayTo[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    hoSoDangKys?: HoSoDangKy[] | undefined;
    phieuChuyenThues?: PhieuChuyenThue[] | undefined;
    vanBanXuLys?: VanBanXuly[] | undefined;
    hoSoQuets?: HoSoQuet[] | undefined;
    hoSoDoiTuongKhaiThacs?: HoSoDoiTuongKhaiThac[] | undefined;
    ngayHanXuLy?: Date | undefined;
    dieuKienInGCN?: number | undefined;
    thamDinh?: number | undefined;
    thamTra?: number | undefined;
    thoiGianThucHienTheoNgayHenTra?: number | undefined;
}

export enum NguonDuLieu {
    Offline = 0,
    Online = 1,
}

export enum HeThongDvc {
    IGate = 0,
    IGateV1 = 1,
    IGateV2 = 2,
}

export class BaseEntityOfInteger extends AuditableEntity implements IBaseEntityOfInteger {
    id?: number;

    constructor(data?: IBaseEntityOfInteger) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): BaseEntityOfInteger {
        data = typeof data === 'object' ? data : {};
        let result = new BaseEntityOfInteger();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        super.toJSON(data);
        return data; 
    }
}

export interface IBaseEntityOfInteger extends IAuditableEntity {
    id?: number;
}

export class LoaiHoSo extends BaseEntityOfInteger implements ILoaiHoSo {
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;

    constructor(data?: ILoaiHoSo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): LoaiHoSo {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiHoSo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ILoaiHoSo extends IBaseEntityOfInteger {
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
}

export class LoaiGiayTo extends BaseEntityOfInteger implements ILoaiGiayTo {
    maLoaiGiayTo?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    moTa?: string | undefined;
    tenQuyUoc?: string | undefined;
    laGiayToTuyThan?: LaGiayToTuyThan;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
    thuTucLoaiGiayTos?: ThuTucLoaiGiayTo[] | undefined;
    hoSoLoaiGiayTos?: HoSoLoaiGiayTo[] | undefined;
    dtKhaiThacLoaiGiayTos?: DtKhaiThacLoaiGiayTo[] | undefined;

    constructor(data?: ILoaiGiayTo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maLoaiGiayTo = _data["maLoaiGiayTo"];
            this.tenLoaiGiayTo = _data["tenLoaiGiayTo"];
            this.moTa = _data["moTa"];
            this.tenQuyUoc = _data["tenQuyUoc"];
            this.laGiayToTuyThan = _data["laGiayToTuyThan"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            if (Array.isArray(_data["thuTucLoaiGiayTos"])) {
                this.thuTucLoaiGiayTos = [] as any;
                for (let item of _data["thuTucLoaiGiayTos"])
                    this.thuTucLoaiGiayTos!.push(ThuTucLoaiGiayTo.fromJS(item));
            }
            if (Array.isArray(_data["hoSoLoaiGiayTos"])) {
                this.hoSoLoaiGiayTos = [] as any;
                for (let item of _data["hoSoLoaiGiayTos"])
                    this.hoSoLoaiGiayTos!.push(HoSoLoaiGiayTo.fromJS(item));
            }
            if (Array.isArray(_data["dtKhaiThacLoaiGiayTos"])) {
                this.dtKhaiThacLoaiGiayTos = [] as any;
                for (let item of _data["dtKhaiThacLoaiGiayTos"])
                    this.dtKhaiThacLoaiGiayTos!.push(DtKhaiThacLoaiGiayTo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): LoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLoaiGiayTo"] = this.maLoaiGiayTo;
        data["tenLoaiGiayTo"] = this.tenLoaiGiayTo;
        data["moTa"] = this.moTa;
        data["tenQuyUoc"] = this.tenQuyUoc;
        data["laGiayToTuyThan"] = this.laGiayToTuyThan;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucLoaiGiayTos)) {
            data["thuTucLoaiGiayTos"] = [];
            for (let item of this.thuTucLoaiGiayTos)
                data["thuTucLoaiGiayTos"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoLoaiGiayTos)) {
            data["hoSoLoaiGiayTos"] = [];
            for (let item of this.hoSoLoaiGiayTos)
                data["hoSoLoaiGiayTos"].push(item.toJSON());
        }
        if (Array.isArray(this.dtKhaiThacLoaiGiayTos)) {
            data["dtKhaiThacLoaiGiayTos"] = [];
            for (let item of this.dtKhaiThacLoaiGiayTos)
                data["dtKhaiThacLoaiGiayTos"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ILoaiGiayTo extends IBaseEntityOfInteger {
    maLoaiGiayTo?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    moTa?: string | undefined;
    tenQuyUoc?: string | undefined;
    laGiayToTuyThan?: LaGiayToTuyThan;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
    thuTucLoaiGiayTos?: ThuTucLoaiGiayTo[] | undefined;
    hoSoLoaiGiayTos?: HoSoLoaiGiayTo[] | undefined;
    dtKhaiThacLoaiGiayTos?: DtKhaiThacLoaiGiayTo[] | undefined;
}

export enum LaGiayToTuyThan {
    Khong = 0,
    Co = 1,
}

export class ThuTucLoaiGiayTo extends BaseEntityOfString implements IThuTucLoaiGiayTo {
    idThuTuc?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinh?: number;
    soBanSao?: number;
    stt?: number;
    thuTuc?: ThuTuc | undefined;
    loaiGiayTo?: LoaiGiayTo | undefined;

    constructor(data?: IThuTucLoaiGiayTo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idThuTuc = _data["idThuTuc"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.soBanChinh = _data["soBanChinh"];
            this.soBanSao = _data["soBanSao"];
            this.stt = _data["stt"];
            this.thuTuc = _data["thuTuc"] ? ThuTuc.fromJS(_data["thuTuc"]) : <any>undefined;
            this.loaiGiayTo = _data["loaiGiayTo"] ? LoaiGiayTo.fromJS(_data["loaiGiayTo"]) : <any>undefined;
        }
    }

    static fromJS(data: any): ThuTucLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTucLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idThuTuc"] = this.idThuTuc;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["soBanChinh"] = this.soBanChinh;
        data["soBanSao"] = this.soBanSao;
        data["stt"] = this.stt;
        data["thuTuc"] = this.thuTuc ? this.thuTuc.toJSON() : <any>undefined;
        data["loaiGiayTo"] = this.loaiGiayTo ? this.loaiGiayTo.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IThuTucLoaiGiayTo extends IBaseEntityOfString {
    idThuTuc?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinh?: number;
    soBanSao?: number;
    stt?: number;
    thuTuc?: ThuTuc | undefined;
    loaiGiayTo?: LoaiGiayTo | undefined;
}

export class HoSoLoaiGiayTo extends BaseEntityOfString implements IHoSoLoaiGiayTo {
    idHoSo?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinh?: number;
    soBanSao?: number;
    tenGiayTo?: string | undefined;
    soBanChinhHienCo?: number;
    soBanSaoHienCo?: number;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    loaiGiayTo?: LoaiGiayTo | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: IHoSoLoaiGiayTo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.soBanChinh = _data["soBanChinh"];
            this.soBanSao = _data["soBanSao"];
            this.tenGiayTo = _data["tenGiayTo"];
            this.soBanChinhHienCo = _data["soBanChinhHienCo"];
            this.soBanSaoHienCo = _data["soBanSaoHienCo"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.loaiGiayTo = _data["loaiGiayTo"] ? LoaiGiayTo.fromJS(_data["loaiGiayTo"]) : <any>undefined;
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): HoSoLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["soBanChinh"] = this.soBanChinh;
        data["soBanSao"] = this.soBanSao;
        data["tenGiayTo"] = this.tenGiayTo;
        data["soBanChinhHienCo"] = this.soBanChinhHienCo;
        data["soBanSaoHienCo"] = this.soBanSaoHienCo;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["loaiGiayTo"] = this.loaiGiayTo ? this.loaiGiayTo.toJSON() : <any>undefined;
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IHoSoLoaiGiayTo extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinh?: number;
    soBanSao?: number;
    tenGiayTo?: string | undefined;
    soBanChinhHienCo?: number;
    soBanSaoHienCo?: number;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    loaiGiayTo?: LoaiGiayTo | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class FileDinhKem extends BaseEntityOfString implements IFileDinhKem {
    idHoSo?: string | undefined;
    idHoSoLoaiGiayTo?: string | undefined;
    idTienTrinhXuLy?: string | undefined;
    idVanBanXuLy?: string | undefined;
    idPhieuChuyen?: string | undefined;
    tenFile?: string | undefined;
    idBuoc?: string | undefined;
    link?: string | undefined;
    laNguoiDanNop?: LaNguoiDanNop;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buoc?: Buoc | undefined;
    tienTrinhXuLy?: TienTrinhXuLy | undefined;
    hoSoLoaiGiayTo?: HoSoLoaiGiayTo | undefined;
    hoSoDangKy?: HoSoDangKy | undefined;
    vanBanXuLy?: VanBanXuly | undefined;

    constructor(data?: IFileDinhKem) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idHoSoLoaiGiayTo = _data["idHoSoLoaiGiayTo"];
            this.idTienTrinhXuLy = _data["idTienTrinhXuLy"];
            this.idVanBanXuLy = _data["idVanBanXuLy"];
            this.idPhieuChuyen = _data["idPhieuChuyen"];
            this.tenFile = _data["tenFile"];
            this.idBuoc = _data["idBuoc"];
            this.link = _data["link"];
            this.laNguoiDanNop = _data["laNguoiDanNop"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.tienTrinhXuLy = _data["tienTrinhXuLy"] ? TienTrinhXuLy.fromJS(_data["tienTrinhXuLy"]) : <any>undefined;
            this.hoSoLoaiGiayTo = _data["hoSoLoaiGiayTo"] ? HoSoLoaiGiayTo.fromJS(_data["hoSoLoaiGiayTo"]) : <any>undefined;
            this.hoSoDangKy = _data["hoSoDangKy"] ? HoSoDangKy.fromJS(_data["hoSoDangKy"]) : <any>undefined;
            this.vanBanXuLy = _data["vanBanXuLy"] ? VanBanXuly.fromJS(_data["vanBanXuLy"]) : <any>undefined;
        }
    }

    static fromJS(data: any): FileDinhKem {
        data = typeof data === 'object' ? data : {};
        let result = new FileDinhKem();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idHoSoLoaiGiayTo"] = this.idHoSoLoaiGiayTo;
        data["idTienTrinhXuLy"] = this.idTienTrinhXuLy;
        data["idVanBanXuLy"] = this.idVanBanXuLy;
        data["idPhieuChuyen"] = this.idPhieuChuyen;
        data["tenFile"] = this.tenFile;
        data["idBuoc"] = this.idBuoc;
        data["link"] = this.link;
        data["laNguoiDanNop"] = this.laNguoiDanNop;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["tienTrinhXuLy"] = this.tienTrinhXuLy ? this.tienTrinhXuLy.toJSON() : <any>undefined;
        data["hoSoLoaiGiayTo"] = this.hoSoLoaiGiayTo ? this.hoSoLoaiGiayTo.toJSON() : <any>undefined;
        data["hoSoDangKy"] = this.hoSoDangKy ? this.hoSoDangKy.toJSON() : <any>undefined;
        data["vanBanXuLy"] = this.vanBanXuLy ? this.vanBanXuLy.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IFileDinhKem extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idHoSoLoaiGiayTo?: string | undefined;
    idTienTrinhXuLy?: string | undefined;
    idVanBanXuLy?: string | undefined;
    idPhieuChuyen?: string | undefined;
    tenFile?: string | undefined;
    idBuoc?: string | undefined;
    link?: string | undefined;
    laNguoiDanNop?: LaNguoiDanNop;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buoc?: Buoc | undefined;
    tienTrinhXuLy?: TienTrinhXuLy | undefined;
    hoSoLoaiGiayTo?: HoSoLoaiGiayTo | undefined;
    hoSoDangKy?: HoSoDangKy | undefined;
    vanBanXuLy?: VanBanXuly | undefined;
}

export enum LaNguoiDanNop {
    Khong = 0,
    Co = 1,
}

export class TienTrinhXuLy extends BaseEntityOfString implements ITienTrinhXuLy {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idBuocXuLy?: string | undefined;
    idNghiepVu?: number;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buoc?: Buoc | undefined;
    lyDo?: LyDo | undefined;
    buocXuLy?: BuocXuLy | undefined;
    nghiepVu?: NghiepVu | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: ITienTrinhXuLy) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.lyDo = _data["lyDo"] ? LyDo.fromJS(_data["lyDo"]) : <any>undefined;
            this.buocXuLy = _data["buocXuLy"] ? BuocXuLy.fromJS(_data["buocXuLy"]) : <any>undefined;
            this.nghiepVu = _data["nghiepVu"] ? NghiepVu.fromJS(_data["nghiepVu"]) : <any>undefined;
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TienTrinhXuLy {
        data = typeof data === 'object' ? data : {};
        let result = new TienTrinhXuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["lyDo"] = this.lyDo ? this.lyDo.toJSON() : <any>undefined;
        data["buocXuLy"] = this.buocXuLy ? this.buocXuLy.toJSON() : <any>undefined;
        data["nghiepVu"] = this.nghiepVu ? this.nghiepVu.toJSON() : <any>undefined;
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ITienTrinhXuLy extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idBuocXuLy?: string | undefined;
    idNghiepVu?: number;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buoc?: Buoc | undefined;
    lyDo?: LyDo | undefined;
    buocXuLy?: BuocXuLy | undefined;
    nghiepVu?: NghiepVu | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class LyDo extends BaseEntityOfInteger implements ILyDo {
    maLyDo?: string | undefined;
    tenLyDo?: string | undefined;
    idNghiepVu?: number;
    stt?: number;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;

    constructor(data?: ILyDo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maLyDo = _data["maLyDo"];
            this.tenLyDo = _data["tenLyDo"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.stt = _data["stt"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["tienTrinhXuLys"])) {
                this.tienTrinhXuLys = [] as any;
                for (let item of _data["tienTrinhXuLys"])
                    this.tienTrinhXuLys!.push(TienTrinhXuLy.fromJS(item));
            }
        }
    }

    static fromJS(data: any): LyDo {
        data = typeof data === 'object' ? data : {};
        let result = new LyDo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLyDo"] = this.maLyDo;
        data["tenLyDo"] = this.tenLyDo;
        data["idNghiepVu"] = this.idNghiepVu;
        data["stt"] = this.stt;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.tienTrinhXuLys)) {
            data["tienTrinhXuLys"] = [];
            for (let item of this.tienTrinhXuLys)
                data["tienTrinhXuLys"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ILyDo extends IBaseEntityOfInteger {
    maLyDo?: string | undefined;
    tenLyDo?: string | undefined;
    idNghiepVu?: number;
    stt?: number;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
}

export class BuocXuLy extends BaseEntityOfString implements IBuocXuLy {
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    ngayBatDau?: Date;
    ngayKetThuc?: Date | undefined;
    thoiGianDuKien?: number | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianTamDung?: number | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    userDvcXuLy?: string | undefined;
    path?: string | undefined;
    hienTai?: LaHienTai;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buoc?: Buoc | undefined;
    nghiepVu?: NghiepVu | undefined;
    lyDo?: LyDo | undefined;
    trangThaiHoSo?: TrangThaiHoSo | undefined;
    trangThaiXuLy?: TrangThaiXuLy | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    vanBanXuLys?: VanBanXuly[] | undefined;

    constructor(data?: IBuocXuLy) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCha = _data["idCha"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.ngayKetThuc = _data["ngayKetThuc"] ? new Date(_data["ngayKetThuc"].toString()) : <any>undefined;
            this.thoiGianDuKien = _data["thoiGianDuKien"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.thoiGianTamDung = _data["thoiGianTamDung"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.idChuyen = _data["idChuyen"];
            this.noiDungChuyen = _data["noiDungChuyen"];
            this.idActivitiTask = _data["idActivitiTask"];
            this.userDvcXuLy = _data["userDvcXuLy"];
            this.path = _data["path"];
            this.hienTai = _data["hienTai"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.nghiepVu = _data["nghiepVu"] ? NghiepVu.fromJS(_data["nghiepVu"]) : <any>undefined;
            this.lyDo = _data["lyDo"] ? LyDo.fromJS(_data["lyDo"]) : <any>undefined;
            this.trangThaiHoSo = _data["trangThaiHoSo"] ? TrangThaiHoSo.fromJS(_data["trangThaiHoSo"]) : <any>undefined;
            this.trangThaiXuLy = _data["trangThaiXuLy"] ? TrangThaiXuLy.fromJS(_data["trangThaiXuLy"]) : <any>undefined;
            if (Array.isArray(_data["tienTrinhXuLys"])) {
                this.tienTrinhXuLys = [] as any;
                for (let item of _data["tienTrinhXuLys"])
                    this.tienTrinhXuLys!.push(TienTrinhXuLy.fromJS(item));
            }
            if (Array.isArray(_data["vanBanXuLys"])) {
                this.vanBanXuLys = [] as any;
                for (let item of _data["vanBanXuLys"])
                    this.vanBanXuLys!.push(VanBanXuly.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BuocXuLy {
        data = typeof data === 'object' ? data : {};
        let result = new BuocXuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCha"] = this.idCha;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["ngayKetThuc"] = this.ngayKetThuc ? this.ngayKetThuc.toISOString() : <any>undefined;
        data["thoiGianDuKien"] = this.thoiGianDuKien;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["thoiGianTamDung"] = this.thoiGianTamDung;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["idChuyen"] = this.idChuyen;
        data["noiDungChuyen"] = this.noiDungChuyen;
        data["idActivitiTask"] = this.idActivitiTask;
        data["userDvcXuLy"] = this.userDvcXuLy;
        data["path"] = this.path;
        data["hienTai"] = this.hienTai;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["nghiepVu"] = this.nghiepVu ? this.nghiepVu.toJSON() : <any>undefined;
        data["lyDo"] = this.lyDo ? this.lyDo.toJSON() : <any>undefined;
        data["trangThaiHoSo"] = this.trangThaiHoSo ? this.trangThaiHoSo.toJSON() : <any>undefined;
        data["trangThaiXuLy"] = this.trangThaiXuLy ? this.trangThaiXuLy.toJSON() : <any>undefined;
        if (Array.isArray(this.tienTrinhXuLys)) {
            data["tienTrinhXuLys"] = [];
            for (let item of this.tienTrinhXuLys)
                data["tienTrinhXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.vanBanXuLys)) {
            data["vanBanXuLys"] = [];
            for (let item of this.vanBanXuLys)
                data["vanBanXuLys"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IBuocXuLy extends IBaseEntityOfString {
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    ngayBatDau?: Date;
    ngayKetThuc?: Date | undefined;
    thoiGianDuKien?: number | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianTamDung?: number | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    userDvcXuLy?: string | undefined;
    path?: string | undefined;
    hienTai?: LaHienTai;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buoc?: Buoc | undefined;
    nghiepVu?: NghiepVu | undefined;
    lyDo?: LyDo | undefined;
    trangThaiHoSo?: TrangThaiHoSo | undefined;
    trangThaiXuLy?: TrangThaiXuLy | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    vanBanXuLys?: VanBanXuly[] | undefined;
}

export enum LaHienTai {
    Khong = 0,
    Co = 1,
}

export class NghiepVu extends BaseEntityOfInteger implements INghiepVu {
    maNghiepVu?: string | undefined;
    tenNghiepVu?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    luongXuLys?: LuongXuLy[] | undefined;

    constructor(data?: INghiepVu) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maNghiepVu = _data["maNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["tienTrinhXuLys"])) {
                this.tienTrinhXuLys = [] as any;
                for (let item of _data["tienTrinhXuLys"])
                    this.tienTrinhXuLys!.push(TienTrinhXuLy.fromJS(item));
            }
            if (Array.isArray(_data["luongXuLys"])) {
                this.luongXuLys = [] as any;
                for (let item of _data["luongXuLys"])
                    this.luongXuLys!.push(LuongXuLy.fromJS(item));
            }
        }
    }

    static fromJS(data: any): NghiepVu {
        data = typeof data === 'object' ? data : {};
        let result = new NghiepVu();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maNghiepVu"] = this.maNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.tienTrinhXuLys)) {
            data["tienTrinhXuLys"] = [];
            for (let item of this.tienTrinhXuLys)
                data["tienTrinhXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.luongXuLys)) {
            data["luongXuLys"] = [];
            for (let item of this.luongXuLys)
                data["luongXuLys"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface INghiepVu extends IBaseEntityOfInteger {
    maNghiepVu?: string | undefined;
    tenNghiepVu?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    tienTrinhXuLys?: TienTrinhXuLy[] | undefined;
    luongXuLys?: LuongXuLy[] | undefined;
}

export class LuongXuLy extends BaseEntityOfString implements ILuongXuLy {
    idNghiepVu?: number;
    idTrangThaiXuLyHienTai?: number;
    idTrangThaiXuLyTiepTheo?: number;
    nghiepVu?: NghiepVu | undefined;
    trangThaiXuLyHienTai?: TrangThaiXuLy | undefined;
    trangThaiXuLyTiepTheo?: TrangThaiXuLy | undefined;

    constructor(data?: ILuongXuLy) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idNghiepVu = _data["idNghiepVu"];
            this.idTrangThaiXuLyHienTai = _data["idTrangThaiXuLyHienTai"];
            this.idTrangThaiXuLyTiepTheo = _data["idTrangThaiXuLyTiepTheo"];
            this.nghiepVu = _data["nghiepVu"] ? NghiepVu.fromJS(_data["nghiepVu"]) : <any>undefined;
            this.trangThaiXuLyHienTai = _data["trangThaiXuLyHienTai"] ? TrangThaiXuLy.fromJS(_data["trangThaiXuLyHienTai"]) : <any>undefined;
            this.trangThaiXuLyTiepTheo = _data["trangThaiXuLyTiepTheo"] ? TrangThaiXuLy.fromJS(_data["trangThaiXuLyTiepTheo"]) : <any>undefined;
        }
    }

    static fromJS(data: any): LuongXuLy {
        data = typeof data === 'object' ? data : {};
        let result = new LuongXuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNghiepVu"] = this.idNghiepVu;
        data["idTrangThaiXuLyHienTai"] = this.idTrangThaiXuLyHienTai;
        data["idTrangThaiXuLyTiepTheo"] = this.idTrangThaiXuLyTiepTheo;
        data["nghiepVu"] = this.nghiepVu ? this.nghiepVu.toJSON() : <any>undefined;
        data["trangThaiXuLyHienTai"] = this.trangThaiXuLyHienTai ? this.trangThaiXuLyHienTai.toJSON() : <any>undefined;
        data["trangThaiXuLyTiepTheo"] = this.trangThaiXuLyTiepTheo ? this.trangThaiXuLyTiepTheo.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface ILuongXuLy extends IBaseEntityOfString {
    idNghiepVu?: number;
    idTrangThaiXuLyHienTai?: number;
    idTrangThaiXuLyTiepTheo?: number;
    nghiepVu?: NghiepVu | undefined;
    trangThaiXuLyHienTai?: TrangThaiXuLy | undefined;
    trangThaiXuLyTiepTheo?: TrangThaiXuLy | undefined;
}

export class TrangThaiXuLy extends BaseEntityOfInteger implements ITrangThaiXuLy {
    maTrangThaiXuLy?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    luongXuLyHienTais?: LuongXuLy[] | undefined;
    luongXuLyTiepTheos?: LuongXuLy[] | undefined;

    constructor(data?: ITrangThaiXuLy) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maTrangThaiXuLy = _data["maTrangThaiXuLy"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["luongXuLyHienTais"])) {
                this.luongXuLyHienTais = [] as any;
                for (let item of _data["luongXuLyHienTais"])
                    this.luongXuLyHienTais!.push(LuongXuLy.fromJS(item));
            }
            if (Array.isArray(_data["luongXuLyTiepTheos"])) {
                this.luongXuLyTiepTheos = [] as any;
                for (let item of _data["luongXuLyTiepTheos"])
                    this.luongXuLyTiepTheos!.push(LuongXuLy.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TrangThaiXuLy {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiXuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maTrangThaiXuLy"] = this.maTrangThaiXuLy;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.luongXuLyHienTais)) {
            data["luongXuLyHienTais"] = [];
            for (let item of this.luongXuLyHienTais)
                data["luongXuLyHienTais"].push(item.toJSON());
        }
        if (Array.isArray(this.luongXuLyTiepTheos)) {
            data["luongXuLyTiepTheos"] = [];
            for (let item of this.luongXuLyTiepTheos)
                data["luongXuLyTiepTheos"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ITrangThaiXuLy extends IBaseEntityOfInteger {
    maTrangThaiXuLy?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    luongXuLyHienTais?: LuongXuLy[] | undefined;
    luongXuLyTiepTheos?: LuongXuLy[] | undefined;
}

export class TrangThaiHoSo extends BaseEntityOfInteger implements ITrangThaiHoSo {
    maTrangThaiHoSo?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    buocs?: Buoc[] | undefined;

    constructor(data?: ITrangThaiHoSo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maTrangThaiHoSo = _data["maTrangThaiHoSo"];
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["buocs"])) {
                this.buocs = [] as any;
                for (let item of _data["buocs"])
                    this.buocs!.push(Buoc.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TrangThaiHoSo {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiHoSo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maTrangThaiHoSo"] = this.maTrangThaiHoSo;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        if (Array.isArray(this.buocs)) {
            data["buocs"] = [];
            for (let item of this.buocs)
                data["buocs"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ITrangThaiHoSo extends IBaseEntityOfInteger {
    maTrangThaiHoSo?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
    buocs?: Buoc[] | undefined;
}

export class VanBanXuly extends BaseEntityOfString implements IVanBanXuly {
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    tenVanBan?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buocXuLy?: BuocXuLy | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: IVanBanXuly) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.tenVanBan = _data["tenVanBan"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.buocXuLy = _data["buocXuLy"] ? BuocXuLy.fromJS(_data["buocXuLy"]) : <any>undefined;
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): VanBanXuly {
        data = typeof data === 'object' ? data : {};
        let result = new VanBanXuly();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["tenVanBan"] = this.tenVanBan;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["buocXuLy"] = this.buocXuLy ? this.buocXuLy.toJSON() : <any>undefined;
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IVanBanXuly extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    tenVanBan?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    buocXuLy?: BuocXuLy | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class HoSoDangKy extends BaseEntityOfString implements IHoSoDangKy {
    idHoSo?: string | undefined;
    idDangKyCadas?: string | undefined;
    noiDung?: string | undefined;
    maTinh?: string | undefined;
    soPhieu?: string | undefined;
    maVachGcn?: string | undefined;
    hoSo?: HoSo | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    phieuChuyenThue?: PhieuChuyenThue | undefined;
    idDangKyGoc?: string | undefined;
    hoSoDangKyGoc?: HoSoDangKy | undefined;
    hoSoDangKyGocs?: HoSoDangKy[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: IHoSoDangKy) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idDangKyCadas = _data["idDangKyCadas"];
            this.noiDung = _data["noiDung"];
            this.maTinh = _data["maTinh"];
            this.soPhieu = _data["soPhieu"];
            this.maVachGcn = _data["maVachGcn"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.loaiDangKy = _data["loaiDangKy"];
            this.nguonDangKy = _data["nguonDangKy"];
            this.phieuChuyenThue = _data["phieuChuyenThue"] ? PhieuChuyenThue.fromJS(_data["phieuChuyenThue"]) : <any>undefined;
            this.idDangKyGoc = _data["idDangKyGoc"];
            this.hoSoDangKyGoc = _data["hoSoDangKyGoc"] ? HoSoDangKy.fromJS(_data["hoSoDangKyGoc"]) : <any>undefined;
            if (Array.isArray(_data["hoSoDangKyGocs"])) {
                this.hoSoDangKyGocs = [] as any;
                for (let item of _data["hoSoDangKyGocs"])
                    this.hoSoDangKyGocs!.push(HoSoDangKy.fromJS(item));
            }
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): HoSoDangKy {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoDangKy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idDangKyCadas"] = this.idDangKyCadas;
        data["noiDung"] = this.noiDung;
        data["maTinh"] = this.maTinh;
        data["soPhieu"] = this.soPhieu;
        data["maVachGcn"] = this.maVachGcn;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["loaiDangKy"] = this.loaiDangKy;
        data["nguonDangKy"] = this.nguonDangKy;
        data["phieuChuyenThue"] = this.phieuChuyenThue ? this.phieuChuyenThue.toJSON() : <any>undefined;
        data["idDangKyGoc"] = this.idDangKyGoc;
        data["hoSoDangKyGoc"] = this.hoSoDangKyGoc ? this.hoSoDangKyGoc.toJSON() : <any>undefined;
        if (Array.isArray(this.hoSoDangKyGocs)) {
            data["hoSoDangKyGocs"] = [];
            for (let item of this.hoSoDangKyGocs)
                data["hoSoDangKyGocs"].push(item.toJSON());
        }
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IHoSoDangKy extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idDangKyCadas?: string | undefined;
    noiDung?: string | undefined;
    maTinh?: string | undefined;
    soPhieu?: string | undefined;
    maVachGcn?: string | undefined;
    hoSo?: HoSo | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    phieuChuyenThue?: PhieuChuyenThue | undefined;
    idDangKyGoc?: string | undefined;
    hoSoDangKyGoc?: HoSoDangKy | undefined;
    hoSoDangKyGocs?: HoSoDangKy[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export enum LoaiDangKy {
    DangKyMoi = 0,
    BienDong = 1,
    PhieuLuanChuyenNVTC = 2,
}

export enum NguonDangKy {
    LPM = 0,
    Cadas = 1,
}

export class PhieuChuyenThue extends BaseEntityOfString implements IPhieuChuyenThue {
    idHoSo?: string | undefined;
    idPhieuCadas?: string | undefined;
    idPhieuChuyen?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    loaiPhieu?: string | undefined;
    ngayTaoCadas?: Date;
    phieuChuyen?: HoSoDangKy | undefined;
    idBienDong?: string | undefined;
    idChuSdThuaDat?: string | undefined;
    dsFileHoSoChuyenThue?: string | undefined;
    xmlKySo?: string | undefined;
    ngayKy?: Date | undefined;
    nguoiKy?: string | undefined;
    nguoiTaoPhieu?: string | undefined;
    nguoiCapNhatPhieu?: string | undefined;
    ngayChuyenThue?: Date | undefined;
    maLoiChuyenThue?: number | undefined;
    moTaLoiChuyenThue?: string | undefined;
    ketQuaChuyenThue?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    thongBaoThue?: string | undefined;
    moTaThongBaoThue?: string | undefined;
    maKetQuaThongBaoThue?: number | undefined;
    maLoiThongBaoThue?: number | undefined;
    moTaLoiThongBaoThue?: string | undefined;
    ngayTruyVanThongBaoThue?: Date | undefined;
    thongTinNvtc?: string | undefined;
    moTaThongTinNvtc?: string | undefined;
    maKetQuaThongTinNvtc?: number | undefined;
    maLoiThongTinNvtc?: number | undefined;
    moTaLoiThongTinNvtc?: string | undefined;
    ngayTruyVanThongTinNvtc?: Date | undefined;
    ketQuaTruyVan?: string | undefined;
    moTaTruyVan?: string | undefined;
    maKetQuaTruyVan?: number | undefined;
    maLoiTruyVan?: number | undefined;
    moTaLoiTruyVan?: string | undefined;
    ngayTruyVan?: Date | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    lichSuPhieuChuyenThues?: LichSuPhieuChuyenThue[] | undefined;

    constructor(data?: IPhieuChuyenThue) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idPhieuCadas = _data["idPhieuCadas"];
            this.idPhieuChuyen = _data["idPhieuChuyen"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.loaiPhieu = _data["loaiPhieu"];
            this.ngayTaoCadas = _data["ngayTaoCadas"] ? new Date(_data["ngayTaoCadas"].toString()) : <any>undefined;
            this.phieuChuyen = _data["phieuChuyen"] ? HoSoDangKy.fromJS(_data["phieuChuyen"]) : <any>undefined;
            this.idBienDong = _data["idBienDong"];
            this.idChuSdThuaDat = _data["idChuSdThuaDat"];
            this.dsFileHoSoChuyenThue = _data["dsFileHoSoChuyenThue"];
            this.xmlKySo = _data["xmlKySo"];
            this.ngayKy = _data["ngayKy"] ? new Date(_data["ngayKy"].toString()) : <any>undefined;
            this.nguoiKy = _data["nguoiKy"];
            this.nguoiTaoPhieu = _data["nguoiTaoPhieu"];
            this.nguoiCapNhatPhieu = _data["nguoiCapNhatPhieu"];
            this.ngayChuyenThue = _data["ngayChuyenThue"] ? new Date(_data["ngayChuyenThue"].toString()) : <any>undefined;
            this.maLoiChuyenThue = _data["maLoiChuyenThue"];
            this.moTaLoiChuyenThue = _data["moTaLoiChuyenThue"];
            this.ketQuaChuyenThue = _data["ketQuaChuyenThue"];
            this.tinhTrangPhieuChuyen = _data["tinhTrangPhieuChuyen"];
            this.thongBaoThue = _data["thongBaoThue"];
            this.moTaThongBaoThue = _data["moTaThongBaoThue"];
            this.maKetQuaThongBaoThue = _data["maKetQuaThongBaoThue"];
            this.maLoiThongBaoThue = _data["maLoiThongBaoThue"];
            this.moTaLoiThongBaoThue = _data["moTaLoiThongBaoThue"];
            this.ngayTruyVanThongBaoThue = _data["ngayTruyVanThongBaoThue"] ? new Date(_data["ngayTruyVanThongBaoThue"].toString()) : <any>undefined;
            this.thongTinNvtc = _data["thongTinNvtc"];
            this.moTaThongTinNvtc = _data["moTaThongTinNvtc"];
            this.maKetQuaThongTinNvtc = _data["maKetQuaThongTinNvtc"];
            this.maLoiThongTinNvtc = _data["maLoiThongTinNvtc"];
            this.moTaLoiThongTinNvtc = _data["moTaLoiThongTinNvtc"];
            this.ngayTruyVanThongTinNvtc = _data["ngayTruyVanThongTinNvtc"] ? new Date(_data["ngayTruyVanThongTinNvtc"].toString()) : <any>undefined;
            this.ketQuaTruyVan = _data["ketQuaTruyVan"];
            this.moTaTruyVan = _data["moTaTruyVan"];
            this.maKetQuaTruyVan = _data["maKetQuaTruyVan"];
            this.maLoiTruyVan = _data["maLoiTruyVan"];
            this.moTaLoiTruyVan = _data["moTaLoiTruyVan"];
            this.ngayTruyVan = _data["ngayTruyVan"] ? new Date(_data["ngayTruyVan"].toString()) : <any>undefined;
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            if (Array.isArray(_data["lichSuPhieuChuyenThues"])) {
                this.lichSuPhieuChuyenThues = [] as any;
                for (let item of _data["lichSuPhieuChuyenThues"])
                    this.lichSuPhieuChuyenThues!.push(LichSuPhieuChuyenThue.fromJS(item));
            }
        }
    }

    static fromJS(data: any): PhieuChuyenThue {
        data = typeof data === 'object' ? data : {};
        let result = new PhieuChuyenThue();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idPhieuCadas"] = this.idPhieuCadas;
        data["idPhieuChuyen"] = this.idPhieuChuyen;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["loaiPhieu"] = this.loaiPhieu;
        data["ngayTaoCadas"] = this.ngayTaoCadas ? this.ngayTaoCadas.toISOString() : <any>undefined;
        data["phieuChuyen"] = this.phieuChuyen ? this.phieuChuyen.toJSON() : <any>undefined;
        data["idBienDong"] = this.idBienDong;
        data["idChuSdThuaDat"] = this.idChuSdThuaDat;
        data["dsFileHoSoChuyenThue"] = this.dsFileHoSoChuyenThue;
        data["xmlKySo"] = this.xmlKySo;
        data["ngayKy"] = this.ngayKy ? this.ngayKy.toISOString() : <any>undefined;
        data["nguoiKy"] = this.nguoiKy;
        data["nguoiTaoPhieu"] = this.nguoiTaoPhieu;
        data["nguoiCapNhatPhieu"] = this.nguoiCapNhatPhieu;
        data["ngayChuyenThue"] = this.ngayChuyenThue ? this.ngayChuyenThue.toISOString() : <any>undefined;
        data["maLoiChuyenThue"] = this.maLoiChuyenThue;
        data["moTaLoiChuyenThue"] = this.moTaLoiChuyenThue;
        data["ketQuaChuyenThue"] = this.ketQuaChuyenThue;
        data["tinhTrangPhieuChuyen"] = this.tinhTrangPhieuChuyen;
        data["thongBaoThue"] = this.thongBaoThue;
        data["moTaThongBaoThue"] = this.moTaThongBaoThue;
        data["maKetQuaThongBaoThue"] = this.maKetQuaThongBaoThue;
        data["maLoiThongBaoThue"] = this.maLoiThongBaoThue;
        data["moTaLoiThongBaoThue"] = this.moTaLoiThongBaoThue;
        data["ngayTruyVanThongBaoThue"] = this.ngayTruyVanThongBaoThue ? this.ngayTruyVanThongBaoThue.toISOString() : <any>undefined;
        data["thongTinNvtc"] = this.thongTinNvtc;
        data["moTaThongTinNvtc"] = this.moTaThongTinNvtc;
        data["maKetQuaThongTinNvtc"] = this.maKetQuaThongTinNvtc;
        data["maLoiThongTinNvtc"] = this.maLoiThongTinNvtc;
        data["moTaLoiThongTinNvtc"] = this.moTaLoiThongTinNvtc;
        data["ngayTruyVanThongTinNvtc"] = this.ngayTruyVanThongTinNvtc ? this.ngayTruyVanThongTinNvtc.toISOString() : <any>undefined;
        data["ketQuaTruyVan"] = this.ketQuaTruyVan;
        data["moTaTruyVan"] = this.moTaTruyVan;
        data["maKetQuaTruyVan"] = this.maKetQuaTruyVan;
        data["maLoiTruyVan"] = this.maLoiTruyVan;
        data["moTaLoiTruyVan"] = this.moTaLoiTruyVan;
        data["ngayTruyVan"] = this.ngayTruyVan ? this.ngayTruyVan.toISOString() : <any>undefined;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        if (Array.isArray(this.lichSuPhieuChuyenThues)) {
            data["lichSuPhieuChuyenThues"] = [];
            for (let item of this.lichSuPhieuChuyenThues)
                data["lichSuPhieuChuyenThues"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IPhieuChuyenThue extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idPhieuCadas?: string | undefined;
    idPhieuChuyen?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    loaiPhieu?: string | undefined;
    ngayTaoCadas?: Date;
    phieuChuyen?: HoSoDangKy | undefined;
    idBienDong?: string | undefined;
    idChuSdThuaDat?: string | undefined;
    dsFileHoSoChuyenThue?: string | undefined;
    xmlKySo?: string | undefined;
    ngayKy?: Date | undefined;
    nguoiKy?: string | undefined;
    nguoiTaoPhieu?: string | undefined;
    nguoiCapNhatPhieu?: string | undefined;
    ngayChuyenThue?: Date | undefined;
    maLoiChuyenThue?: number | undefined;
    moTaLoiChuyenThue?: string | undefined;
    ketQuaChuyenThue?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    thongBaoThue?: string | undefined;
    moTaThongBaoThue?: string | undefined;
    maKetQuaThongBaoThue?: number | undefined;
    maLoiThongBaoThue?: number | undefined;
    moTaLoiThongBaoThue?: string | undefined;
    ngayTruyVanThongBaoThue?: Date | undefined;
    thongTinNvtc?: string | undefined;
    moTaThongTinNvtc?: string | undefined;
    maKetQuaThongTinNvtc?: number | undefined;
    maLoiThongTinNvtc?: number | undefined;
    moTaLoiThongTinNvtc?: string | undefined;
    ngayTruyVanThongTinNvtc?: Date | undefined;
    ketQuaTruyVan?: string | undefined;
    moTaTruyVan?: string | undefined;
    maKetQuaTruyVan?: number | undefined;
    maLoiTruyVan?: number | undefined;
    moTaLoiTruyVan?: string | undefined;
    ngayTruyVan?: Date | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    lichSuPhieuChuyenThues?: LichSuPhieuChuyenThue[] | undefined;
}

export enum TinhTrangPhieuChuyen {
    ChuaKy = 0,
    DaKy = 1,
    DaChuyenThueBiLoi = 2,
    DaChuyenThue = 3,
}

export class LichSuPhieuChuyenThue extends BaseEntityOfInteger implements ILichSuPhieuChuyenThue {
    idPhieuChuyenThue?: string | undefined;
    tieuDe?: string | undefined;
    trangThaiPhieu?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThaiLichSuPhieuChuyen;
    maTinh?: string | undefined;
    action?: string | undefined;
    phieuChuyenThue?: PhieuChuyenThue | undefined;

    constructor(data?: ILichSuPhieuChuyenThue) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idPhieuChuyenThue = _data["idPhieuChuyenThue"];
            this.tieuDe = _data["tieuDe"];
            this.trangThaiPhieu = _data["trangThaiPhieu"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.maTinh = _data["maTinh"];
            this.action = _data["action"];
            this.phieuChuyenThue = _data["phieuChuyenThue"] ? PhieuChuyenThue.fromJS(_data["phieuChuyenThue"]) : <any>undefined;
        }
    }

    static fromJS(data: any): LichSuPhieuChuyenThue {
        data = typeof data === 'object' ? data : {};
        let result = new LichSuPhieuChuyenThue();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPhieuChuyenThue"] = this.idPhieuChuyenThue;
        data["tieuDe"] = this.tieuDe;
        data["trangThaiPhieu"] = this.trangThaiPhieu;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["maTinh"] = this.maTinh;
        data["action"] = this.action;
        data["phieuChuyenThue"] = this.phieuChuyenThue ? this.phieuChuyenThue.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface ILichSuPhieuChuyenThue extends IBaseEntityOfInteger {
    idPhieuChuyenThue?: string | undefined;
    tieuDe?: string | undefined;
    trangThaiPhieu?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThaiLichSuPhieuChuyen;
    maTinh?: string | undefined;
    action?: string | undefined;
    phieuChuyenThue?: PhieuChuyenThue | undefined;
}

export enum TrangThaiLichSuPhieuChuyen {
    ThanhCong = 0,
    ThatBai = 1,
}

export class DtKhaiThacLoaiGiayTo extends BaseEntityOfString implements IDtKhaiThacLoaiGiayTo {
    idDoiTuongKhaiThac?: string | undefined;
    idLoaiGiayTo?: number;
    soGiayTo?: string | undefined;
    stt?: number;
    doiTuongKhaiThac?: DoiTuongKhaiThac | undefined;
    loaiGiayTo?: LoaiGiayTo | undefined;

    constructor(data?: IDtKhaiThacLoaiGiayTo) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idDoiTuongKhaiThac = _data["idDoiTuongKhaiThac"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.soGiayTo = _data["soGiayTo"];
            this.stt = _data["stt"];
            this.doiTuongKhaiThac = _data["doiTuongKhaiThac"] ? DoiTuongKhaiThac.fromJS(_data["doiTuongKhaiThac"]) : <any>undefined;
            this.loaiGiayTo = _data["loaiGiayTo"] ? LoaiGiayTo.fromJS(_data["loaiGiayTo"]) : <any>undefined;
        }
    }

    static fromJS(data: any): DtKhaiThacLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new DtKhaiThacLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDoiTuongKhaiThac"] = this.idDoiTuongKhaiThac;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["soGiayTo"] = this.soGiayTo;
        data["stt"] = this.stt;
        data["doiTuongKhaiThac"] = this.doiTuongKhaiThac ? this.doiTuongKhaiThac.toJSON() : <any>undefined;
        data["loaiGiayTo"] = this.loaiGiayTo ? this.loaiGiayTo.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IDtKhaiThacLoaiGiayTo extends IBaseEntityOfString {
    idDoiTuongKhaiThac?: string | undefined;
    idLoaiGiayTo?: number;
    soGiayTo?: string | undefined;
    stt?: number;
    doiTuongKhaiThac?: DoiTuongKhaiThac | undefined;
    loaiGiayTo?: LoaiGiayTo | undefined;
}

export class DoiTuongKhaiThac extends BaseEntityOfString implements IDoiTuongKhaiThac {
    hoTen?: string | undefined;
    soDienThoai?: string | undefined;
    email?: string | undefined;
    diaChi?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    dtKhaiThacLoaiGiayTos?: DtKhaiThacLoaiGiayTo[] | undefined;
    hoSoDoiTuongKhaiThacs?: HoSoDoiTuongKhaiThac[] | undefined;

    constructor(data?: IDoiTuongKhaiThac) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soDienThoai = _data["soDienThoai"];
            this.email = _data["email"];
            this.diaChi = _data["diaChi"];
            this.maTinh = _data["maTinh"];
            this.trangThai = _data["trangThai"];
            if (Array.isArray(_data["dtKhaiThacLoaiGiayTos"])) {
                this.dtKhaiThacLoaiGiayTos = [] as any;
                for (let item of _data["dtKhaiThacLoaiGiayTos"])
                    this.dtKhaiThacLoaiGiayTos!.push(DtKhaiThacLoaiGiayTo.fromJS(item));
            }
            if (Array.isArray(_data["hoSoDoiTuongKhaiThacs"])) {
                this.hoSoDoiTuongKhaiThacs = [] as any;
                for (let item of _data["hoSoDoiTuongKhaiThacs"])
                    this.hoSoDoiTuongKhaiThacs!.push(HoSoDoiTuongKhaiThac.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new DoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soDienThoai"] = this.soDienThoai;
        data["email"] = this.email;
        data["diaChi"] = this.diaChi;
        data["maTinh"] = this.maTinh;
        data["trangThai"] = this.trangThai;
        if (Array.isArray(this.dtKhaiThacLoaiGiayTos)) {
            data["dtKhaiThacLoaiGiayTos"] = [];
            for (let item of this.dtKhaiThacLoaiGiayTos)
                data["dtKhaiThacLoaiGiayTos"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoDoiTuongKhaiThacs)) {
            data["hoSoDoiTuongKhaiThacs"] = [];
            for (let item of this.hoSoDoiTuongKhaiThacs)
                data["hoSoDoiTuongKhaiThacs"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IDoiTuongKhaiThac extends IBaseEntityOfString {
    hoTen?: string | undefined;
    soDienThoai?: string | undefined;
    email?: string | undefined;
    diaChi?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    dtKhaiThacLoaiGiayTos?: DtKhaiThacLoaiGiayTo[] | undefined;
    hoSoDoiTuongKhaiThacs?: HoSoDoiTuongKhaiThac[] | undefined;
}

export class HoSoDoiTuongKhaiThac extends BaseEntityOfString implements IHoSoDoiTuongKhaiThac {
    idHoSo?: string | undefined;
    idDoiTuongKhaiThac?: string | undefined;
    nhanSMS?: NhanThongBao;
    nhanEmail?: NhanThongBao;
    hoSo?: HoSo | undefined;
    doiTuongKhaiThac?: DoiTuongKhaiThac | undefined;

    constructor(data?: IHoSoDoiTuongKhaiThac) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idDoiTuongKhaiThac = _data["idDoiTuongKhaiThac"];
            this.nhanSMS = _data["nhanSMS"];
            this.nhanEmail = _data["nhanEmail"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.doiTuongKhaiThac = _data["doiTuongKhaiThac"] ? DoiTuongKhaiThac.fromJS(_data["doiTuongKhaiThac"]) : <any>undefined;
        }
    }

    static fromJS(data: any): HoSoDoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoDoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idDoiTuongKhaiThac"] = this.idDoiTuongKhaiThac;
        data["nhanSMS"] = this.nhanSMS;
        data["nhanEmail"] = this.nhanEmail;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["doiTuongKhaiThac"] = this.doiTuongKhaiThac ? this.doiTuongKhaiThac.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IHoSoDoiTuongKhaiThac extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idDoiTuongKhaiThac?: string | undefined;
    nhanSMS?: NhanThongBao;
    nhanEmail?: NhanThongBao;
    hoSo?: HoSo | undefined;
    doiTuongKhaiThac?: DoiTuongKhaiThac | undefined;
}

export enum NhanThongBao {
    Khong = 0,
    Co = 1,
}

export class TrangThaiThucHien extends BaseEntityOfInteger implements ITrangThaiThucHien {
    maTrangThaiThucHien?: string | undefined;
    tenTrangThaiThucHien?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;

    constructor(data?: ITrangThaiThucHien) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maTrangThaiThucHien = _data["maTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TrangThaiThucHien {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiThucHien();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maTrangThaiThucHien"] = this.maTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ITrangThaiThucHien extends IBaseEntityOfInteger {
    maTrangThaiThucHien?: string | undefined;
    tenTrangThaiThucHien?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    hoSos?: HoSo[] | undefined;
}

export class Dvhc extends BaseEntityOfString implements IDvhc {
    tenDvhc?: string | undefined;
    idDvhcCha?: string | undefined;
    maTinh?: string | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    duongDan?: string | undefined;
    maDvc?: string | undefined;
    taiKhoanThue?: string | undefined;
    mucDvhc?: number;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    dvhcCha?: Dvhc | undefined;
    dvhcCons?: Dvhc[] | undefined;
    hoSos?: HoSo[] | undefined;
    cauHinhPhanCongs?: CauHinhPhanCong[] | undefined;
    cauHinhPhanCongDvhcs?: CauHinhPhanCongDvhc[] | undefined;
    thuTucDvhcs?: ThuTucDvhc[] | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;

    constructor(data?: IDvhc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.tenDvhc = _data["tenDvhc"];
            this.idDvhcCha = _data["idDvhcCha"];
            this.maTinh = _data["maTinh"];
            this.maHuyen = _data["maHuyen"];
            this.maXa = _data["maXa"];
            this.duongDan = _data["duongDan"];
            this.maDvc = _data["maDvc"];
            this.taiKhoanThue = _data["taiKhoanThue"];
            this.mucDvhc = _data["mucDvhc"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.dvhcCha = _data["dvhcCha"] ? Dvhc.fromJS(_data["dvhcCha"]) : <any>undefined;
            if (Array.isArray(_data["dvhcCons"])) {
                this.dvhcCons = [] as any;
                for (let item of _data["dvhcCons"])
                    this.dvhcCons!.push(Dvhc.fromJS(item));
            }
            if (Array.isArray(_data["hoSos"])) {
                this.hoSos = [] as any;
                for (let item of _data["hoSos"])
                    this.hoSos!.push(HoSo.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhPhanCongs"])) {
                this.cauHinhPhanCongs = [] as any;
                for (let item of _data["cauHinhPhanCongs"])
                    this.cauHinhPhanCongs!.push(CauHinhPhanCong.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhPhanCongDvhcs"])) {
                this.cauHinhPhanCongDvhcs = [] as any;
                for (let item of _data["cauHinhPhanCongDvhcs"])
                    this.cauHinhPhanCongDvhcs!.push(CauHinhPhanCongDvhc.fromJS(item));
            }
            if (Array.isArray(_data["thuTucDvhcs"])) {
                this.thuTucDvhcs = [] as any;
                for (let item of _data["thuTucDvhcs"])
                    this.thuTucDvhcs!.push(ThuTucDvhc.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhMails"])) {
                this.cauHinhMails = [] as any;
                for (let item of _data["cauHinhMails"])
                    this.cauHinhMails!.push(CauHinhMail.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Dvhc {
        data = typeof data === 'object' ? data : {};
        let result = new Dvhc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tenDvhc"] = this.tenDvhc;
        data["idDvhcCha"] = this.idDvhcCha;
        data["maTinh"] = this.maTinh;
        data["maHuyen"] = this.maHuyen;
        data["maXa"] = this.maXa;
        data["duongDan"] = this.duongDan;
        data["maDvc"] = this.maDvc;
        data["taiKhoanThue"] = this.taiKhoanThue;
        data["mucDvhc"] = this.mucDvhc;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["dvhcCha"] = this.dvhcCha ? this.dvhcCha.toJSON() : <any>undefined;
        if (Array.isArray(this.dvhcCons)) {
            data["dvhcCons"] = [];
            for (let item of this.dvhcCons)
                data["dvhcCons"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSos)) {
            data["hoSos"] = [];
            for (let item of this.hoSos)
                data["hoSos"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhPhanCongs)) {
            data["cauHinhPhanCongs"] = [];
            for (let item of this.cauHinhPhanCongs)
                data["cauHinhPhanCongs"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhPhanCongDvhcs)) {
            data["cauHinhPhanCongDvhcs"] = [];
            for (let item of this.cauHinhPhanCongDvhcs)
                data["cauHinhPhanCongDvhcs"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucDvhcs)) {
            data["thuTucDvhcs"] = [];
            for (let item of this.thuTucDvhcs)
                data["thuTucDvhcs"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhMails)) {
            data["cauHinhMails"] = [];
            for (let item of this.cauHinhMails)
                data["cauHinhMails"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IDvhc extends IBaseEntityOfString {
    tenDvhc?: string | undefined;
    idDvhcCha?: string | undefined;
    maTinh?: string | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    duongDan?: string | undefined;
    maDvc?: string | undefined;
    taiKhoanThue?: string | undefined;
    mucDvhc?: number;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    dvhcCha?: Dvhc | undefined;
    dvhcCons?: Dvhc[] | undefined;
    hoSos?: HoSo[] | undefined;
    cauHinhPhanCongs?: CauHinhPhanCong[] | undefined;
    cauHinhPhanCongDvhcs?: CauHinhPhanCongDvhc[] | undefined;
    thuTucDvhcs?: ThuTucDvhc[] | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;
}

export class CauHinhPhanCong extends BaseEntityOfString implements ICauHinhPhanCong {
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    quyTrinh?: QuyTrinh | undefined;
    dvhc?: Dvhc | undefined;
    cauHinhPhanCongCTs?: CauHinhPhanCongCT[] | undefined;
    cauHinhPhanCongDvhcs?: CauHinhPhanCongDvhc[] | undefined;

    constructor(data?: ICauHinhPhanCong) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.maTinh = _data["maTinh"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.quyTrinh = _data["quyTrinh"] ? QuyTrinh.fromJS(_data["quyTrinh"]) : <any>undefined;
            this.dvhc = _data["dvhc"] ? Dvhc.fromJS(_data["dvhc"]) : <any>undefined;
            if (Array.isArray(_data["cauHinhPhanCongCTs"])) {
                this.cauHinhPhanCongCTs = [] as any;
                for (let item of _data["cauHinhPhanCongCTs"])
                    this.cauHinhPhanCongCTs!.push(CauHinhPhanCongCT.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhPhanCongDvhcs"])) {
                this.cauHinhPhanCongDvhcs = [] as any;
                for (let item of _data["cauHinhPhanCongDvhcs"])
                    this.cauHinhPhanCongDvhcs!.push(CauHinhPhanCongDvhc.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CauHinhPhanCong {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhPhanCong();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["maTinh"] = this.maTinh;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["quyTrinh"] = this.quyTrinh ? this.quyTrinh.toJSON() : <any>undefined;
        data["dvhc"] = this.dvhc ? this.dvhc.toJSON() : <any>undefined;
        if (Array.isArray(this.cauHinhPhanCongCTs)) {
            data["cauHinhPhanCongCTs"] = [];
            for (let item of this.cauHinhPhanCongCTs)
                data["cauHinhPhanCongCTs"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhPhanCongDvhcs)) {
            data["cauHinhPhanCongDvhcs"] = [];
            for (let item of this.cauHinhPhanCongDvhcs)
                data["cauHinhPhanCongDvhcs"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinhPhanCong extends IBaseEntityOfString {
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    quyTrinh?: QuyTrinh | undefined;
    dvhc?: Dvhc | undefined;
    cauHinhPhanCongCTs?: CauHinhPhanCongCT[] | undefined;
    cauHinhPhanCongDvhcs?: CauHinhPhanCongDvhc[] | undefined;
}

export class CauHinhPhanCongCT extends BaseEntityOfString implements ICauHinhPhanCongCT {
    idCauHinhPhanCong?: string | undefined;
    idBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    maTinh?: string | undefined;
    buoc?: Buoc | undefined;
    cauHinhPhanCong?: CauHinhPhanCong | undefined;

    constructor(data?: ICauHinhPhanCongCT) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCauHinhPhanCong = _data["idCauHinhPhanCong"];
            this.idBuoc = _data["idBuoc"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            this.maTinh = _data["maTinh"];
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.cauHinhPhanCong = _data["cauHinhPhanCong"] ? CauHinhPhanCong.fromJS(_data["cauHinhPhanCong"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CauHinhPhanCongCT {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhPhanCongCT();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCauHinhPhanCong"] = this.idCauHinhPhanCong;
        data["idBuoc"] = this.idBuoc;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        data["maTinh"] = this.maTinh;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["cauHinhPhanCong"] = this.cauHinhPhanCong ? this.cauHinhPhanCong.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinhPhanCongCT extends IBaseEntityOfString {
    idCauHinhPhanCong?: string | undefined;
    idBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    maTinh?: string | undefined;
    buoc?: Buoc | undefined;
    cauHinhPhanCong?: CauHinhPhanCong | undefined;
}

export class CauHinhPhanCongDvhc extends BaseEntityOfString implements ICauHinhPhanCongDvhc {
    idCauHinhPhanCong?: string | undefined;
    idDvhcApDung?: string | undefined;
    maTinh?: string | undefined;
    dvhc?: Dvhc | undefined;
    cauHinhPhanCong?: CauHinhPhanCong | undefined;

    constructor(data?: ICauHinhPhanCongDvhc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCauHinhPhanCong = _data["idCauHinhPhanCong"];
            this.idDvhcApDung = _data["idDvhcApDung"];
            this.maTinh = _data["maTinh"];
            this.dvhc = _data["dvhc"] ? Dvhc.fromJS(_data["dvhc"]) : <any>undefined;
            this.cauHinhPhanCong = _data["cauHinhPhanCong"] ? CauHinhPhanCong.fromJS(_data["cauHinhPhanCong"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CauHinhPhanCongDvhc {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhPhanCongDvhc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCauHinhPhanCong"] = this.idCauHinhPhanCong;
        data["idDvhcApDung"] = this.idDvhcApDung;
        data["maTinh"] = this.maTinh;
        data["dvhc"] = this.dvhc ? this.dvhc.toJSON() : <any>undefined;
        data["cauHinhPhanCong"] = this.cauHinhPhanCong ? this.cauHinhPhanCong.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinhPhanCongDvhc extends IBaseEntityOfString {
    idCauHinhPhanCong?: string | undefined;
    idDvhcApDung?: string | undefined;
    maTinh?: string | undefined;
    dvhc?: Dvhc | undefined;
    cauHinhPhanCong?: CauHinhPhanCong | undefined;
}

export class ThuTucDvhc extends BaseEntityOfString implements IThuTucDvhc {
    idThuTuc?: string | undefined;
    idDvhc?: string | undefined;
    maTinh?: string | undefined;
    dvhc?: Dvhc | undefined;
    thuTuc?: ThuTuc | undefined;

    constructor(data?: IThuTucDvhc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idThuTuc = _data["idThuTuc"];
            this.idDvhc = _data["idDvhc"];
            this.maTinh = _data["maTinh"];
            this.dvhc = _data["dvhc"] ? Dvhc.fromJS(_data["dvhc"]) : <any>undefined;
            this.thuTuc = _data["thuTuc"] ? ThuTuc.fromJS(_data["thuTuc"]) : <any>undefined;
        }
    }

    static fromJS(data: any): ThuTucDvhc {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTucDvhc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idThuTuc"] = this.idThuTuc;
        data["idDvhc"] = this.idDvhc;
        data["maTinh"] = this.maTinh;
        data["dvhc"] = this.dvhc ? this.dvhc.toJSON() : <any>undefined;
        data["thuTuc"] = this.thuTuc ? this.thuTuc.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IThuTucDvhc extends IBaseEntityOfString {
    idThuTuc?: string | undefined;
    idDvhc?: string | undefined;
    maTinh?: string | undefined;
    dvhc?: Dvhc | undefined;
    thuTuc?: ThuTuc | undefined;
}

export class CauHinhMail extends BaseEntityOfString implements ICauHinhMail {
    idMailMau?: string | undefined;
    idBuoc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idDvhc?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    mailMau?: MailMau | undefined;
    buoc?: Buoc | undefined;
    quyTrinh?: QuyTrinh | undefined;
    dvhc?: Dvhc | undefined;

    constructor(data?: ICauHinhMail) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idMailMau = _data["idMailMau"];
            this.idBuoc = _data["idBuoc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idDvhc = _data["idDvhc"];
            this.maTinh = _data["maTinh"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.mailMau = _data["mailMau"] ? MailMau.fromJS(_data["mailMau"]) : <any>undefined;
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.quyTrinh = _data["quyTrinh"] ? QuyTrinh.fromJS(_data["quyTrinh"]) : <any>undefined;
            this.dvhc = _data["dvhc"] ? Dvhc.fromJS(_data["dvhc"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CauHinhMail {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhMail();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idMailMau"] = this.idMailMau;
        data["idBuoc"] = this.idBuoc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idDvhc"] = this.idDvhc;
        data["maTinh"] = this.maTinh;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["mailMau"] = this.mailMau ? this.mailMau.toJSON() : <any>undefined;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["quyTrinh"] = this.quyTrinh ? this.quyTrinh.toJSON() : <any>undefined;
        data["dvhc"] = this.dvhc ? this.dvhc.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinhMail extends IBaseEntityOfString {
    idMailMau?: string | undefined;
    idBuoc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idDvhc?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    mailMau?: MailMau | undefined;
    buoc?: Buoc | undefined;
    quyTrinh?: QuyTrinh | undefined;
    dvhc?: Dvhc | undefined;
}

export class MailMau extends BaseEntityOfString implements IMailMau {
    maMailMau?: string | undefined;
    tieuDe?: string | undefined;
    noiDung?: string | undefined;
    idMailSetting?: number;
    maTinh?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    mailSetting?: MailSetting | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;

    constructor(data?: IMailMau) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maMailMau = _data["maMailMau"];
            this.tieuDe = _data["tieuDe"];
            this.noiDung = _data["noiDung"];
            this.idMailSetting = _data["idMailSetting"];
            this.maTinh = _data["maTinh"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.mailSetting = _data["mailSetting"] ? MailSetting.fromJS(_data["mailSetting"]) : <any>undefined;
            if (Array.isArray(_data["cauHinhMails"])) {
                this.cauHinhMails = [] as any;
                for (let item of _data["cauHinhMails"])
                    this.cauHinhMails!.push(CauHinhMail.fromJS(item));
            }
        }
    }

    static fromJS(data: any): MailMau {
        data = typeof data === 'object' ? data : {};
        let result = new MailMau();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maMailMau"] = this.maMailMau;
        data["tieuDe"] = this.tieuDe;
        data["noiDung"] = this.noiDung;
        data["idMailSetting"] = this.idMailSetting;
        data["maTinh"] = this.maTinh;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["mailSetting"] = this.mailSetting ? this.mailSetting.toJSON() : <any>undefined;
        if (Array.isArray(this.cauHinhMails)) {
            data["cauHinhMails"] = [];
            for (let item of this.cauHinhMails)
                data["cauHinhMails"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IMailMau extends IBaseEntityOfString {
    maMailMau?: string | undefined;
    tieuDe?: string | undefined;
    noiDung?: string | undefined;
    idMailSetting?: number;
    maTinh?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    mailSetting?: MailSetting | undefined;
    cauHinhMails?: CauHinhMail[] | undefined;
}

export class MailSetting extends BaseEntityOfInteger implements IMailSetting {
    mail?: string | undefined;
    tenHienThi?: string | undefined;
    password?: string | undefined;
    host?: string | undefined;
    port?: number;
    baomat?: BaoMat;
    tenBaomat?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    mailMaus?: MailMau[] | undefined;

    constructor(data?: IMailSetting) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.mail = _data["mail"];
            this.tenHienThi = _data["tenHienThi"];
            this.password = _data["password"];
            this.host = _data["host"];
            this.port = _data["port"];
            this.baomat = _data["baomat"];
            this.tenBaomat = _data["tenBaomat"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            if (Array.isArray(_data["mailMaus"])) {
                this.mailMaus = [] as any;
                for (let item of _data["mailMaus"])
                    this.mailMaus!.push(MailMau.fromJS(item));
            }
        }
    }

    static fromJS(data: any): MailSetting {
        data = typeof data === 'object' ? data : {};
        let result = new MailSetting();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["mail"] = this.mail;
        data["tenHienThi"] = this.tenHienThi;
        data["password"] = this.password;
        data["host"] = this.host;
        data["port"] = this.port;
        data["baomat"] = this.baomat;
        data["tenBaomat"] = this.tenBaomat;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        if (Array.isArray(this.mailMaus)) {
            data["mailMaus"] = [];
            for (let item of this.mailMaus)
                data["mailMaus"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IMailSetting extends IBaseEntityOfInteger {
    mail?: string | undefined;
    tenHienThi?: string | undefined;
    password?: string | undefined;
    host?: string | undefined;
    port?: number;
    baomat?: BaoMat;
    tenBaomat?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    mailMaus?: MailMau[] | undefined;
}

export enum BaoMat {
    None = 0,
    Auto = 1,
    SslOnConnect = 2,
    StartTls = 3,
    StartTlsWhenAvailable = 4,
}

export class PhanCong extends BaseEntityOfString implements IPhanCong {
    idHoSo?: string | undefined;
    idQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    quyTrinh?: QuyTrinh | undefined;
    buoc?: Buoc | undefined;

    constructor(data?: IPhanCong) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idBuoc = _data["idBuoc"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.quyTrinh = _data["quyTrinh"] ? QuyTrinh.fromJS(_data["quyTrinh"]) : <any>undefined;
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
        }
    }

    static fromJS(data: any): PhanCong {
        data = typeof data === 'object' ? data : {};
        let result = new PhanCong();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idBuoc"] = this.idBuoc;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["quyTrinh"] = this.quyTrinh ? this.quyTrinh.toJSON() : <any>undefined;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IPhanCong extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    idQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    quyTrinh?: QuyTrinh | undefined;
    buoc?: Buoc | undefined;
}

export class HoSoQuet extends BaseEntityOfString implements IHoSoQuet {
    idHoSo?: string | undefined;
    maHoSoQuet?: string | undefined;
    tenHoSoQuet?: string | undefined;
    idLinhVucCadas?: string | undefined;
    tenLinhVucCadas?: string | undefined;
    noiDung?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    hinhThuc?: LuuHoSoQuetCadas;

    constructor(data?: IHoSoQuet) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.maHoSoQuet = _data["maHoSoQuet"];
            this.tenHoSoQuet = _data["tenHoSoQuet"];
            this.idLinhVucCadas = _data["idLinhVucCadas"];
            this.tenLinhVucCadas = _data["tenLinhVucCadas"];
            this.noiDung = _data["noiDung"];
            this.maTinh = _data["maTinh"];
            this.hoSo = _data["hoSo"] ? HoSo.fromJS(_data["hoSo"]) : <any>undefined;
            this.hinhThuc = _data["hinhThuc"];
        }
    }

    static fromJS(data: any): HoSoQuet {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoQuet();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["maHoSoQuet"] = this.maHoSoQuet;
        data["tenHoSoQuet"] = this.tenHoSoQuet;
        data["idLinhVucCadas"] = this.idLinhVucCadas;
        data["tenLinhVucCadas"] = this.tenLinhVucCadas;
        data["noiDung"] = this.noiDung;
        data["maTinh"] = this.maTinh;
        data["hoSo"] = this.hoSo ? this.hoSo.toJSON() : <any>undefined;
        data["hinhThuc"] = this.hinhThuc;
        super.toJSON(data);
        return data; 
    }
}

export interface IHoSoQuet extends IBaseEntityOfString {
    idHoSo?: string | undefined;
    maHoSoQuet?: string | undefined;
    tenHoSoQuet?: string | undefined;
    idLinhVucCadas?: string | undefined;
    tenLinhVucCadas?: string | undefined;
    noiDung?: string | undefined;
    maTinh?: string | undefined;
    hoSo?: HoSo | undefined;
    hinhThuc?: LuuHoSoQuetCadas;
}

export enum LuuHoSoQuetCadas {
    Insert = 0,
    Update = 1,
}

export enum SuDung {
    Khong = 0,
    Co = 1,
}

export class KetQuaBuoc extends BaseEntityOfString implements IKetQuaBuoc {
    idBuoc?: string | undefined;
    buoc?: Buoc | undefined;
    tenBien?: string | undefined;
    kieuGiaTri?: KieuGiaTriBuoc;
    tapGiaTri?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    moTa?: string | undefined;

    constructor(data?: IKetQuaBuoc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idBuoc = _data["idBuoc"];
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.tenBien = _data["tenBien"];
            this.kieuGiaTri = _data["kieuGiaTri"];
            this.tapGiaTri = _data["tapGiaTri"];
            this.trangThai = _data["trangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.moTa = _data["moTa"];
        }
    }

    static fromJS(data: any): KetQuaBuoc {
        data = typeof data === 'object' ? data : {};
        let result = new KetQuaBuoc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuoc"] = this.idBuoc;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["tenBien"] = this.tenBien;
        data["kieuGiaTri"] = this.kieuGiaTri;
        data["tapGiaTri"] = this.tapGiaTri;
        data["trangThai"] = this.trangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        data["moTa"] = this.moTa;
        super.toJSON(data);
        return data; 
    }
}

export interface IKetQuaBuoc extends IBaseEntityOfString {
    idBuoc?: string | undefined;
    buoc?: Buoc | undefined;
    tenBien?: string | undefined;
    kieuGiaTri?: KieuGiaTriBuoc;
    tapGiaTri?: string | undefined;
    trangThai?: TrangThai;
    tenTrangThai?: string | undefined;
    moTa?: string | undefined;
}

export enum KieuGiaTriBuoc {
    KieuSo = 1,
    KieuChuoi = 2,
}

export class CauHinhBuoc extends BaseEntityOfString implements ICauHinhBuoc {
    idCauHinh?: number;
    idBuoc?: string | undefined;
    suDung?: SuDung;
    buoc?: Buoc | undefined;
    cauHinh?: CauHinh | undefined;
    cauHinhBuocCTs?: CauHinhBuocCT[] | undefined;

    constructor(data?: ICauHinhBuoc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCauHinh = _data["idCauHinh"];
            this.idBuoc = _data["idBuoc"];
            this.suDung = _data["suDung"];
            this.buoc = _data["buoc"] ? Buoc.fromJS(_data["buoc"]) : <any>undefined;
            this.cauHinh = _data["cauHinh"] ? CauHinh.fromJS(_data["cauHinh"]) : <any>undefined;
            if (Array.isArray(_data["cauHinhBuocCTs"])) {
                this.cauHinhBuocCTs = [] as any;
                for (let item of _data["cauHinhBuocCTs"])
                    this.cauHinhBuocCTs!.push(CauHinhBuocCT.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CauHinhBuoc {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhBuoc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCauHinh"] = this.idCauHinh;
        data["idBuoc"] = this.idBuoc;
        data["suDung"] = this.suDung;
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        data["cauHinh"] = this.cauHinh ? this.cauHinh.toJSON() : <any>undefined;
        if (Array.isArray(this.cauHinhBuocCTs)) {
            data["cauHinhBuocCTs"] = [];
            for (let item of this.cauHinhBuocCTs)
                data["cauHinhBuocCTs"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinhBuoc extends IBaseEntityOfString {
    idCauHinh?: number;
    idBuoc?: string | undefined;
    suDung?: SuDung;
    buoc?: Buoc | undefined;
    cauHinh?: CauHinh | undefined;
    cauHinhBuocCTs?: CauHinhBuocCT[] | undefined;
}

export class CauHinh extends BaseEntityOfInteger implements ICauHinh {
    maCauHinh?: string | undefined;
    tenCauHinh?: string | undefined;
    tenCauHinhNgan?: string | undefined;
    kieu?: KieuCauHinhBuoc;
    idTrangThaiHoSos?: string | undefined;
    moTa?: string | undefined;
    cauHinhBuocs?: CauHinhBuoc[] | undefined;

    constructor(data?: ICauHinh) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maCauHinh = _data["maCauHinh"];
            this.tenCauHinh = _data["tenCauHinh"];
            this.tenCauHinhNgan = _data["tenCauHinhNgan"];
            this.kieu = _data["kieu"];
            this.idTrangThaiHoSos = _data["idTrangThaiHoSos"];
            this.moTa = _data["moTa"];
            if (Array.isArray(_data["cauHinhBuocs"])) {
                this.cauHinhBuocs = [] as any;
                for (let item of _data["cauHinhBuocs"])
                    this.cauHinhBuocs!.push(CauHinhBuoc.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CauHinh {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maCauHinh"] = this.maCauHinh;
        data["tenCauHinh"] = this.tenCauHinh;
        data["tenCauHinhNgan"] = this.tenCauHinhNgan;
        data["kieu"] = this.kieu;
        data["idTrangThaiHoSos"] = this.idTrangThaiHoSos;
        data["moTa"] = this.moTa;
        if (Array.isArray(this.cauHinhBuocs)) {
            data["cauHinhBuocs"] = [];
            for (let item of this.cauHinhBuocs)
                data["cauHinhBuocs"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinh extends IBaseEntityOfInteger {
    maCauHinh?: string | undefined;
    tenCauHinh?: string | undefined;
    tenCauHinhNgan?: string | undefined;
    kieu?: KieuCauHinhBuoc;
    idTrangThaiHoSos?: string | undefined;
    moTa?: string | undefined;
    cauHinhBuocs?: CauHinhBuoc[] | undefined;
}

export enum KieuCauHinhBuoc {
    Button = 1,
    Validation = 2,
    Checkbox = 3,
    Auto = 4,
}

export class CauHinhBuocCT extends BaseEntityOfString implements ICauHinhBuocCT {
    idCauHinhBuoc?: string | undefined;
    maCauHinhCT?: string | undefined;
    giaTriCauHinhCT?: string | undefined;
    tenCauHinhCT?: string | undefined;
    cauHinhBuoc?: CauHinhBuoc | undefined;

    constructor(data?: ICauHinhBuocCT) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCauHinhBuoc = _data["idCauHinhBuoc"];
            this.maCauHinhCT = _data["maCauHinhCT"];
            this.giaTriCauHinhCT = _data["giaTriCauHinhCT"];
            this.tenCauHinhCT = _data["tenCauHinhCT"];
            this.cauHinhBuoc = _data["cauHinhBuoc"] ? CauHinhBuoc.fromJS(_data["cauHinhBuoc"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CauHinhBuocCT {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhBuocCT();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCauHinhBuoc"] = this.idCauHinhBuoc;
        data["maCauHinhCT"] = this.maCauHinhCT;
        data["giaTriCauHinhCT"] = this.giaTriCauHinhCT;
        data["tenCauHinhCT"] = this.tenCauHinhCT;
        data["cauHinhBuoc"] = this.cauHinhBuoc ? this.cauHinhBuoc.toJSON() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface ICauHinhBuocCT extends IBaseEntityOfString {
    idCauHinhBuoc?: string | undefined;
    maCauHinhCT?: string | undefined;
    giaTriCauHinhCT?: string | undefined;
    tenCauHinhCT?: string | undefined;
    cauHinhBuoc?: CauHinhBuoc | undefined;
}

export class ApiResultOfIListOfCauHinhBuocViewModel implements IApiResultOfIListOfCauHinhBuocViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhBuocViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfCauHinhBuocViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(CauHinhBuocViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfCauHinhBuocViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfCauHinhBuocViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfCauHinhBuocViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhBuocViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CauHinhBuocViewModel implements ICauHinhBuocViewModel {
    id?: string | undefined;
    idCauHinh?: number;
    tenCauHinh?: string | undefined;
    tenCauHinhNgan?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    suDung?: SuDung | undefined;
    ngayCapNhat?: Date | undefined;
    cauHinhBuocCTs?: CauHinhBuocCT[] | undefined;

    constructor(data?: ICauHinhBuocViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCauHinh = _data["idCauHinh"];
            this.tenCauHinh = _data["tenCauHinh"];
            this.tenCauHinhNgan = _data["tenCauHinhNgan"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.suDung = _data["suDung"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            if (Array.isArray(_data["cauHinhBuocCTs"])) {
                this.cauHinhBuocCTs = [] as any;
                for (let item of _data["cauHinhBuocCTs"])
                    this.cauHinhBuocCTs!.push(CauHinhBuocCT.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CauHinhBuocViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhBuocViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCauHinh"] = this.idCauHinh;
        data["tenCauHinh"] = this.tenCauHinh;
        data["tenCauHinhNgan"] = this.tenCauHinhNgan;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["suDung"] = this.suDung;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        if (Array.isArray(this.cauHinhBuocCTs)) {
            data["cauHinhBuocCTs"] = [];
            for (let item of this.cauHinhBuocCTs)
                data["cauHinhBuocCTs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICauHinhBuocViewModel {
    id?: string | undefined;
    idCauHinh?: number;
    tenCauHinh?: string | undefined;
    tenCauHinhNgan?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    suDung?: SuDung | undefined;
    ngayCapNhat?: Date | undefined;
    cauHinhBuocCTs?: CauHinhBuocCT[] | undefined;
}

export class ApiResultOfPagedListOfBuoc implements IApiResultOfPagedListOfBuoc {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfBuoc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfBuoc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfBuoc.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfBuoc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfBuoc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfBuoc {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfBuoc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfBuoc implements IPagedListOfBuoc {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: Buoc[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfBuoc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(Buoc.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfBuoc {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfBuoc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfBuoc {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: Buoc[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class PagingRequest implements IPagingRequest {
    fullTextSearch?: string | undefined;
    pageSize?: number;
    pageNumber?: number;
    totalCount?: number;
    rowModify?: number;

    constructor(data?: IPagingRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.fullTextSearch = _data["fullTextSearch"];
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.totalCount = _data["totalCount"];
            this.rowModify = _data["rowModify"];
        }
    }

    static fromJS(data: any): PagingRequest {
        data = typeof data === 'object' ? data : {};
        let result = new PagingRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["fullTextSearch"] = this.fullTextSearch;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["totalCount"] = this.totalCount;
        data["rowModify"] = this.rowModify;
        return data; 
    }
}

export interface IPagingRequest {
    fullTextSearch?: string | undefined;
    pageSize?: number;
    pageNumber?: number;
    totalCount?: number;
    rowModify?: number;
}

export class BuocRequest extends PagingRequest implements IBuocRequest {
    idQuyTrinh?: string | undefined;
    isGetBuocTrongQuyTrinh?: boolean;

    constructor(data?: IBuocRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.isGetBuocTrongQuyTrinh = _data["isGetBuocTrongQuyTrinh"];
        }
    }

    static fromJS(data: any): BuocRequest {
        data = typeof data === 'object' ? data : {};
        let result = new BuocRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["isGetBuocTrongQuyTrinh"] = this.isGetBuocTrongQuyTrinh;
        super.toJSON(data);
        return data; 
    }
}

export interface IBuocRequest extends IPagingRequest {
    idQuyTrinh?: string | undefined;
    isGetBuocTrongQuyTrinh?: boolean;
}

export class ApiResultOfIListOfGatewayTaskModel implements IApiResultOfIListOfGatewayTaskModel {
    isError?: boolean;
    message?: string | undefined;
    data?: GatewayTaskModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGatewayTaskModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GatewayTaskModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGatewayTaskModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGatewayTaskModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGatewayTaskModel {
    isError?: boolean;
    message?: string | undefined;
    data?: GatewayTaskModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GatewayTaskModel implements IGatewayTaskModel {
    type?: GatewayTaskType;
    task?: TaskModel | undefined;
    gateway?: GatewayModel | undefined;

    constructor(data?: IGatewayTaskModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.type = _data["type"];
            this.task = _data["task"] ? TaskModel.fromJS(_data["task"]) : <any>undefined;
            this.gateway = _data["gateway"] ? GatewayModel.fromJS(_data["gateway"]) : <any>undefined;
        }
    }

    static fromJS(data: any): GatewayTaskModel {
        data = typeof data === 'object' ? data : {};
        let result = new GatewayTaskModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["type"] = this.type;
        data["task"] = this.task ? this.task.toJSON() : <any>undefined;
        data["gateway"] = this.gateway ? this.gateway.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IGatewayTaskModel {
    type?: GatewayTaskType;
    task?: TaskModel | undefined;
    gateway?: GatewayModel | undefined;
}

export enum GatewayTaskType {
    Task = 1,
    Gateway = 2,
}

export class TaskModel implements ITaskModel {
    id?: string | undefined;
    name?: string | undefined;
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    taskType?: TaskType;
    idFlowTargetRef?: string | undefined;
    dsNguoiXuLy?: NguoiXuLyTaskModel[] | undefined;

    constructor(data?: ITaskModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
            this.taskType = _data["taskType"];
            this.idFlowTargetRef = _data["idFlowTargetRef"];
            if (Array.isArray(_data["dsNguoiXuLy"])) {
                this.dsNguoiXuLy = [] as any;
                for (let item of _data["dsNguoiXuLy"])
                    this.dsNguoiXuLy!.push(NguoiXuLyTaskModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TaskModel {
        data = typeof data === 'object' ? data : {};
        let result = new TaskModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        data["taskType"] = this.taskType;
        data["idFlowTargetRef"] = this.idFlowTargetRef;
        if (Array.isArray(this.dsNguoiXuLy)) {
            data["dsNguoiXuLy"] = [];
            for (let item of this.dsNguoiXuLy)
                data["dsNguoiXuLy"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ITaskModel {
    id?: string | undefined;
    name?: string | undefined;
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    taskType?: TaskType;
    idFlowTargetRef?: string | undefined;
    dsNguoiXuLy?: NguoiXuLyTaskModel[] | undefined;
}

export enum TaskType {
    Task = 1,
    EndPoint = 2,
}

export class NguoiXuLyTaskModel implements INguoiXuLyTaskModel {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;

    constructor(data?: INguoiXuLyTaskModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
        }
    }

    static fromJS(data: any): NguoiXuLyTaskModel {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiXuLyTaskModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        return data; 
    }
}

export interface INguoiXuLyTaskModel {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
}

export class GatewayModel implements IGatewayModel {
    id?: string | undefined;
    gatewayType?: GatewayType;
    sequenceFlow?: FlowModel[] | undefined;

    constructor(data?: IGatewayModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.gatewayType = _data["gatewayType"];
            if (Array.isArray(_data["sequenceFlow"])) {
                this.sequenceFlow = [] as any;
                for (let item of _data["sequenceFlow"])
                    this.sequenceFlow!.push(FlowModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GatewayModel {
        data = typeof data === 'object' ? data : {};
        let result = new GatewayModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["gatewayType"] = this.gatewayType;
        if (Array.isArray(this.sequenceFlow)) {
            data["sequenceFlow"] = [];
            for (let item of this.sequenceFlow)
                data["sequenceFlow"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGatewayModel {
    id?: string | undefined;
    gatewayType?: GatewayType;
    sequenceFlow?: FlowModel[] | undefined;
}

export enum GatewayType {
    ExclusiveGateway = 0,
    ParallelGateway = 1,
    InclusiveGateway = 2,
}

export class FlowModel implements IFlowModel {
    id?: string | undefined;
    name?: string | undefined;
    conditionExpression?: string | undefined;
    gateway?: GatewayModel | undefined;
    task?: TaskModel | undefined;

    constructor(data?: IFlowModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.conditionExpression = _data["conditionExpression"];
            this.gateway = _data["gateway"] ? GatewayModel.fromJS(_data["gateway"]) : <any>undefined;
            this.task = _data["task"] ? TaskModel.fromJS(_data["task"]) : <any>undefined;
        }
    }

    static fromJS(data: any): FlowModel {
        data = typeof data === 'object' ? data : {};
        let result = new FlowModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["conditionExpression"] = this.conditionExpression;
        data["gateway"] = this.gateway ? this.gateway.toJSON() : <any>undefined;
        data["task"] = this.task ? this.task.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IFlowModel {
    id?: string | undefined;
    name?: string | undefined;
    conditionExpression?: string | undefined;
    gateway?: GatewayModel | undefined;
    task?: TaskModel | undefined;
}

export class BuocViewModel implements IBuocViewModel {
    id?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    maForm?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
    idTrangThaiHoSo?: number | undefined;
    idQuyTrinh?: string | undefined;
    idBuocNguon?: string | undefined;
    idBuocDich?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTime?: number | undefined;
    ketQuaBuocs?: KetQuaBuocViewModel[] | undefined;
    cauHinhBuocs?: CauHinhBuocViewModel[] | undefined;

    constructor(data?: IBuocViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.maForm = _data["maForm"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idBuocNguon = _data["idBuocNguon"];
            this.idBuocDich = _data["idBuocDich"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.thoiGianThucHienTime = _data["thoiGianThucHienTime"];
            if (Array.isArray(_data["ketQuaBuocs"])) {
                this.ketQuaBuocs = [] as any;
                for (let item of _data["ketQuaBuocs"])
                    this.ketQuaBuocs!.push(KetQuaBuocViewModel.fromJS(item));
            }
            if (Array.isArray(_data["cauHinhBuocs"])) {
                this.cauHinhBuocs = [] as any;
                for (let item of _data["cauHinhBuocs"])
                    this.cauHinhBuocs!.push(CauHinhBuocViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BuocViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BuocViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["maForm"] = this.maForm;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idBuocNguon"] = this.idBuocNguon;
        data["idBuocDich"] = this.idBuocDich;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["thoiGianThucHienTime"] = this.thoiGianThucHienTime;
        if (Array.isArray(this.ketQuaBuocs)) {
            data["ketQuaBuocs"] = [];
            for (let item of this.ketQuaBuocs)
                data["ketQuaBuocs"].push(item.toJSON());
        }
        if (Array.isArray(this.cauHinhBuocs)) {
            data["cauHinhBuocs"] = [];
            for (let item of this.cauHinhBuocs)
                data["cauHinhBuocs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBuocViewModel {
    id?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    maForm?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
    idTrangThaiHoSo?: number | undefined;
    idQuyTrinh?: string | undefined;
    idBuocNguon?: string | undefined;
    idBuocDich?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTime?: number | undefined;
    ketQuaBuocs?: KetQuaBuocViewModel[] | undefined;
    cauHinhBuocs?: CauHinhBuocViewModel[] | undefined;
}

export class KetQuaBuocViewModel implements IKetQuaBuocViewModel {
    id?: string | undefined;
    idBuoc?: string | undefined;
    tenBien?: string | undefined;
    kieuGiaTri?: KieuGiaTriBuoc;
    tapGiaTri?: string | undefined;
    trangThai?: TrangThai;
    moTa?: string | undefined;

    constructor(data?: IKetQuaBuocViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idBuoc = _data["idBuoc"];
            this.tenBien = _data["tenBien"];
            this.kieuGiaTri = _data["kieuGiaTri"];
            this.tapGiaTri = _data["tapGiaTri"];
            this.trangThai = _data["trangThai"];
            this.moTa = _data["moTa"];
        }
    }

    static fromJS(data: any): KetQuaBuocViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new KetQuaBuocViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idBuoc"] = this.idBuoc;
        data["tenBien"] = this.tenBien;
        data["kieuGiaTri"] = this.kieuGiaTri;
        data["tapGiaTri"] = this.tapGiaTri;
        data["trangThai"] = this.trangThai;
        data["moTa"] = this.moTa;
        return data; 
    }
}

export interface IKetQuaBuocViewModel {
    id?: string | undefined;
    idBuoc?: string | undefined;
    tenBien?: string | undefined;
    kieuGiaTri?: KieuGiaTriBuoc;
    tapGiaTri?: string | undefined;
    trangThai?: TrangThai;
    moTa?: string | undefined;
}

export class ApiResultOfIListOfBuocQuyTrinhViewModel implements IApiResultOfIListOfBuocQuyTrinhViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BuocQuyTrinhViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBuocQuyTrinhViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BuocQuyTrinhViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBuocQuyTrinhViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBuocQuyTrinhViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBuocQuyTrinhViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BuocQuyTrinhViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BuocQuyTrinhViewModel implements IBuocQuyTrinhViewModel {
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    maQuyTrinh?: string | undefined;
    maThuTuc?: string | undefined;
    maLinhVuc?: string | undefined;

    constructor(data?: IBuocQuyTrinhViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.maThuTuc = _data["maThuTuc"];
            this.maLinhVuc = _data["maLinhVuc"];
        }
    }

    static fromJS(data: any): BuocQuyTrinhViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BuocQuyTrinhViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["maThuTuc"] = this.maThuTuc;
        data["maLinhVuc"] = this.maLinhVuc;
        return data; 
    }
}

export interface IBuocQuyTrinhViewModel {
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    maQuyTrinh?: string | undefined;
    maThuTuc?: string | undefined;
    maLinhVuc?: string | undefined;
}

export class ApiResultOfListOfFileBuocXuLyVm implements IApiResultOfListOfFileBuocXuLyVm {
    isError?: boolean;
    message?: string | undefined;
    data?: FileBuocXuLyVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfListOfFileBuocXuLyVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(FileBuocXuLyVm.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfListOfFileBuocXuLyVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfListOfFileBuocXuLyVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfListOfFileBuocXuLyVm {
    isError?: boolean;
    message?: string | undefined;
    data?: FileBuocXuLyVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class FileBuocXuLyVm implements IFileBuocXuLyVm {
    idVanBan?: string | undefined;
    tenVanBan?: string | undefined;
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm[] | undefined;

    constructor(data?: IFileBuocXuLyVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVanBan = _data["idVanBan"];
            this.tenVanBan = _data["tenVanBan"];
            this.idHoSo = _data["idHoSo"];
            this.idBuocXuLy = _data["idBuocXuLy"];
            if (Array.isArray(_data["fileDinhKemVms"])) {
                this.fileDinhKemVms = [] as any;
                for (let item of _data["fileDinhKemVms"])
                    this.fileDinhKemVms!.push(FileDinhKemVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): FileBuocXuLyVm {
        data = typeof data === 'object' ? data : {};
        let result = new FileBuocXuLyVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVanBan"] = this.idVanBan;
        data["tenVanBan"] = this.tenVanBan;
        data["idHoSo"] = this.idHoSo;
        data["idBuocXuLy"] = this.idBuocXuLy;
        if (Array.isArray(this.fileDinhKemVms)) {
            data["fileDinhKemVms"] = [];
            for (let item of this.fileDinhKemVms)
                data["fileDinhKemVms"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IFileBuocXuLyVm {
    idVanBan?: string | undefined;
    tenVanBan?: string | undefined;
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm[] | undefined;
}

export class FileDinhKemVm implements IFileDinhKemVm {
    id?: string | undefined;
    idLoaiGiayTo?: number;
    tenFile?: string | undefined;
    link?: string | undefined;
    tenFileQuyUoc?: string | undefined;

    constructor(data?: IFileDinhKemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.tenFile = _data["tenFile"];
            this.link = _data["link"];
            this.tenFileQuyUoc = _data["tenFileQuyUoc"];
        }
    }

    static fromJS(data: any): FileDinhKemVm {
        data = typeof data === 'object' ? data : {};
        let result = new FileDinhKemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["tenFile"] = this.tenFile;
        data["link"] = this.link;
        data["tenFileQuyUoc"] = this.tenFileQuyUoc;
        return data; 
    }
}

export interface IFileDinhKemVm {
    id?: string | undefined;
    idLoaiGiayTo?: number;
    tenFile?: string | undefined;
    link?: string | undefined;
    tenFileQuyUoc?: string | undefined;
}

export class ThemYKienXuLyCommand implements IThemYKienXuLyCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    isAllowThemYKienHoSoHoanThanh?: boolean;
    yKienXuLy?: string | undefined;
    vanBanFiles?: VanBanBuocXuLy[] | undefined;
    dsIdVanBanCanXoa?: string[] | undefined;

    constructor(data?: IThemYKienXuLyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.isAllowThemYKienHoSoHoanThanh = _data["isAllowThemYKienHoSoHoanThanh"];
            this.yKienXuLy = _data["yKienXuLy"];
            if (Array.isArray(_data["vanBanFiles"])) {
                this.vanBanFiles = [] as any;
                for (let item of _data["vanBanFiles"])
                    this.vanBanFiles!.push(VanBanBuocXuLy.fromJS(item));
            }
            if (Array.isArray(_data["dsIdVanBanCanXoa"])) {
                this.dsIdVanBanCanXoa = [] as any;
                for (let item of _data["dsIdVanBanCanXoa"])
                    this.dsIdVanBanCanXoa!.push(item);
            }
        }
    }

    static fromJS(data: any): ThemYKienXuLyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ThemYKienXuLyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["isAllowThemYKienHoSoHoanThanh"] = this.isAllowThemYKienHoSoHoanThanh;
        data["yKienXuLy"] = this.yKienXuLy;
        if (Array.isArray(this.vanBanFiles)) {
            data["vanBanFiles"] = [];
            for (let item of this.vanBanFiles)
                data["vanBanFiles"].push(item.toJSON());
        }
        if (Array.isArray(this.dsIdVanBanCanXoa)) {
            data["dsIdVanBanCanXoa"] = [];
            for (let item of this.dsIdVanBanCanXoa)
                data["dsIdVanBanCanXoa"].push(item);
        }
        return data; 
    }
}

export interface IThemYKienXuLyCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    isAllowThemYKienHoSoHoanThanh?: boolean;
    yKienXuLy?: string | undefined;
    vanBanFiles?: VanBanBuocXuLy[] | undefined;
    dsIdVanBanCanXoa?: string[] | undefined;
}

export class VanBanBuocXuLy implements IVanBanBuocXuLy {
    idVanBan?: string | undefined;
    tenVanBan?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm[] | undefined;

    constructor(data?: IVanBanBuocXuLy) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idVanBan = _data["idVanBan"];
            this.tenVanBan = _data["tenVanBan"];
            if (Array.isArray(_data["fileDinhKemVms"])) {
                this.fileDinhKemVms = [] as any;
                for (let item of _data["fileDinhKemVms"])
                    this.fileDinhKemVms!.push(FileDinhKemVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): VanBanBuocXuLy {
        data = typeof data === 'object' ? data : {};
        let result = new VanBanBuocXuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idVanBan"] = this.idVanBan;
        data["tenVanBan"] = this.tenVanBan;
        if (Array.isArray(this.fileDinhKemVms)) {
            data["fileDinhKemVms"] = [];
            for (let item of this.fileDinhKemVms)
                data["fileDinhKemVms"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IVanBanBuocXuLy {
    idVanBan?: string | undefined;
    tenVanBan?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm[] | undefined;
}

export class XoaYKienXuLyCommand implements IXoaYKienXuLyCommand {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;

    constructor(data?: IXoaYKienXuLyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
        }
    }

    static fromJS(data: any): XoaYKienXuLyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new XoaYKienXuLyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        return data; 
    }
}

export interface IXoaYKienXuLyCommand {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
}

export class ApiResultOfIListOfGetYKienXuLyByIdHoSoDto implements IApiResultOfIListOfGetYKienXuLyByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetYKienXuLyByIdHoSoDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetYKienXuLyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetYKienXuLyByIdHoSoDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetYKienXuLyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetYKienXuLyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetYKienXuLyByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetYKienXuLyByIdHoSoDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetYKienXuLyByIdHoSoDto implements IGetYKienXuLyByIdHoSoDto {
    id?: string | undefined;
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    ngayBatDau?: Date;
    ngayKetThuc?: Date | undefined;
    thoiGianThucHien?: number | undefined;
    idNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    hienTai?: LaHienTai;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    yKienXuLy?: TienTrinhXuLyByIdHoSoDto[] | undefined;

    constructor(data?: IGetYKienXuLyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCha = _data["idCha"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.ngayKetThuc = _data["ngayKetThuc"] ? new Date(_data["ngayKetThuc"].toString()) : <any>undefined;
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.idChuyen = _data["idChuyen"];
            this.noiDungChuyen = _data["noiDungChuyen"];
            this.idActivitiTask = _data["idActivitiTask"];
            this.hienTai = _data["hienTai"];
            this.maTinh = _data["maTinh"];
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            if (Array.isArray(_data["yKienXuLy"])) {
                this.yKienXuLy = [] as any;
                for (let item of _data["yKienXuLy"])
                    this.yKienXuLy!.push(TienTrinhXuLyByIdHoSoDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetYKienXuLyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetYKienXuLyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCha"] = this.idCha;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["ngayKetThuc"] = this.ngayKetThuc ? this.ngayKetThuc.toISOString() : <any>undefined;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["idChuyen"] = this.idChuyen;
        data["noiDungChuyen"] = this.noiDungChuyen;
        data["idActivitiTask"] = this.idActivitiTask;
        data["hienTai"] = this.hienTai;
        data["maTinh"] = this.maTinh;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        if (Array.isArray(this.yKienXuLy)) {
            data["yKienXuLy"] = [];
            for (let item of this.yKienXuLy)
                data["yKienXuLy"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetYKienXuLyByIdHoSoDto {
    id?: string | undefined;
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    ngayBatDau?: Date;
    ngayKetThuc?: Date | undefined;
    thoiGianThucHien?: number | undefined;
    idNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    hienTai?: LaHienTai;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    yKienXuLy?: TienTrinhXuLyByIdHoSoDto[] | undefined;
}

export class TienTrinhXuLyByIdHoSoDto implements ITienTrinhXuLyByIdHoSoDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: ITienTrinhXuLyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.tenBuoc = _data["tenBuoc"];
            this.maTinh = _data["maTinh"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TienTrinhXuLyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new TienTrinhXuLyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idNghiepVu"] = this.idNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["tenBuoc"] = this.tenBuoc;
        data["maTinh"] = this.maTinh;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ITienTrinhXuLyByIdHoSoDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class GetYKienXuLyByIdHoSoQuery implements IGetYKienXuLyByIdHoSoQuery {
    idHoSo?: string | undefined;

    constructor(data?: IGetYKienXuLyByIdHoSoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
        }
    }

    static fromJS(data: any): GetYKienXuLyByIdHoSoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetYKienXuLyByIdHoSoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        return data; 
    }
}

export interface IGetYKienXuLyByIdHoSoQuery {
    idHoSo?: string | undefined;
}

export class ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto implements IApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetBuocXuLyByIdHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfGetBuocXuLyByIdHoSoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfGetBuocXuLyByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetBuocXuLyByIdHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfGetBuocXuLyByIdHoSoDto implements IPagedListOfGetBuocXuLyByIdHoSoDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetBuocXuLyByIdHoSoDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfGetBuocXuLyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(GetBuocXuLyByIdHoSoDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfGetBuocXuLyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfGetBuocXuLyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfGetBuocXuLyByIdHoSoDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetBuocXuLyByIdHoSoDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class BuocXuLyThoiGianDto implements IBuocXuLyThoiGianDto {
    id?: string | undefined;
    ngayBatDau?: Date;
    hienTai?: LaHienTai;
    ngayKetThuc?: Date | undefined;
    thoiGianThucHienCauHinh?: number | undefined;
    thoiGianThucHienTimeCauHinh?: number | undefined;
    thoiGianDuKienXuLy?: number;
    thoiGianXuLyDenHienTai?: number;
    thoiGianXuLyBuocDenHienTai?: string | undefined;
    thoiGianQuaHan?: string | undefined;
    thoiGianDuKienHoanThanh?: Date | undefined;
    thoiGianXuLyBuoc?: string | undefined;
    thoiGianTamDung?: number | undefined;

    constructor(data?: IBuocXuLyThoiGianDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.hienTai = _data["hienTai"];
            this.ngayKetThuc = _data["ngayKetThuc"] ? new Date(_data["ngayKetThuc"].toString()) : <any>undefined;
            this.thoiGianThucHienCauHinh = _data["thoiGianThucHienCauHinh"];
            this.thoiGianThucHienTimeCauHinh = _data["thoiGianThucHienTimeCauHinh"];
            this.thoiGianDuKienXuLy = _data["thoiGianDuKienXuLy"];
            this.thoiGianXuLyDenHienTai = _data["thoiGianXuLyDenHienTai"];
            this.thoiGianXuLyBuocDenHienTai = _data["thoiGianXuLyBuocDenHienTai"];
            this.thoiGianQuaHan = _data["thoiGianQuaHan"];
            this.thoiGianDuKienHoanThanh = _data["thoiGianDuKienHoanThanh"] ? new Date(_data["thoiGianDuKienHoanThanh"].toString()) : <any>undefined;
            this.thoiGianXuLyBuoc = _data["thoiGianXuLyBuoc"];
            this.thoiGianTamDung = _data["thoiGianTamDung"];
        }
    }

    static fromJS(data: any): BuocXuLyThoiGianDto {
        data = typeof data === 'object' ? data : {};
        let result = new BuocXuLyThoiGianDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["hienTai"] = this.hienTai;
        data["ngayKetThuc"] = this.ngayKetThuc ? this.ngayKetThuc.toISOString() : <any>undefined;
        data["thoiGianThucHienCauHinh"] = this.thoiGianThucHienCauHinh;
        data["thoiGianThucHienTimeCauHinh"] = this.thoiGianThucHienTimeCauHinh;
        data["thoiGianDuKienXuLy"] = this.thoiGianDuKienXuLy;
        data["thoiGianXuLyDenHienTai"] = this.thoiGianXuLyDenHienTai;
        data["thoiGianXuLyBuocDenHienTai"] = this.thoiGianXuLyBuocDenHienTai;
        data["thoiGianQuaHan"] = this.thoiGianQuaHan;
        data["thoiGianDuKienHoanThanh"] = this.thoiGianDuKienHoanThanh ? this.thoiGianDuKienHoanThanh.toISOString() : <any>undefined;
        data["thoiGianXuLyBuoc"] = this.thoiGianXuLyBuoc;
        data["thoiGianTamDung"] = this.thoiGianTamDung;
        return data; 
    }
}

export interface IBuocXuLyThoiGianDto {
    id?: string | undefined;
    ngayBatDau?: Date;
    hienTai?: LaHienTai;
    ngayKetThuc?: Date | undefined;
    thoiGianThucHienCauHinh?: number | undefined;
    thoiGianThucHienTimeCauHinh?: number | undefined;
    thoiGianDuKienXuLy?: number;
    thoiGianXuLyDenHienTai?: number;
    thoiGianXuLyBuocDenHienTai?: string | undefined;
    thoiGianQuaHan?: string | undefined;
    thoiGianDuKienHoanThanh?: Date | undefined;
    thoiGianXuLyBuoc?: string | undefined;
    thoiGianTamDung?: number | undefined;
}

export class GetBuocXuLyByIdHoSoDto extends BuocXuLyThoiGianDto implements IGetBuocXuLyByIdHoSoDto {
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    thoiGianThucHien?: number | undefined;
    thoiGianDuKien?: number | undefined;
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;

    constructor(data?: IGetBuocXuLyByIdHoSoDto) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCha = _data["idCha"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.thoiGianDuKien = _data["thoiGianDuKien"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.idChuyen = _data["idChuyen"];
            this.noiDungChuyen = _data["noiDungChuyen"];
            this.idActivitiTask = _data["idActivitiTask"];
            this.maTinh = _data["maTinh"];
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
        }
    }

    static fromJS(data: any): GetBuocXuLyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetBuocXuLyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCha"] = this.idCha;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["thoiGianDuKien"] = this.thoiGianDuKien;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["idChuyen"] = this.idChuyen;
        data["noiDungChuyen"] = this.noiDungChuyen;
        data["idActivitiTask"] = this.idActivitiTask;
        data["maTinh"] = this.maTinh;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface IGetBuocXuLyByIdHoSoDto extends IBuocXuLyThoiGianDto {
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    thoiGianThucHien?: number | undefined;
    thoiGianDuKien?: number | undefined;
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
}

export class GetBuocXuLyByIdHoSoQuery implements IGetBuocXuLyByIdHoSoQuery {
    idHoSo?: string | undefined;
    fullBuocQuyTrinh?: boolean;
    pageSize?: number;
    pageNumber?: number;
    totalCount?: number;
    rowModify?: number;

    constructor(data?: IGetBuocXuLyByIdHoSoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.fullBuocQuyTrinh = _data["fullBuocQuyTrinh"];
            this.pageSize = _data["pageSize"];
            this.pageNumber = _data["pageNumber"];
            this.totalCount = _data["totalCount"];
            this.rowModify = _data["rowModify"];
        }
    }

    static fromJS(data: any): GetBuocXuLyByIdHoSoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetBuocXuLyByIdHoSoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["fullBuocQuyTrinh"] = this.fullBuocQuyTrinh;
        data["pageSize"] = this.pageSize;
        data["pageNumber"] = this.pageNumber;
        data["totalCount"] = this.totalCount;
        data["rowModify"] = this.rowModify;
        return data; 
    }
}

export interface IGetBuocXuLyByIdHoSoQuery {
    idHoSo?: string | undefined;
    fullBuocQuyTrinh?: boolean;
    pageSize?: number;
    pageNumber?: number;
    totalCount?: number;
    rowModify?: number;
}

export class ApiResultOfGetBuocXuLyGanNhatDto implements IApiResultOfGetBuocXuLyGanNhatDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetBuocXuLyGanNhatDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfGetBuocXuLyGanNhatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? GetBuocXuLyGanNhatDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfGetBuocXuLyGanNhatDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfGetBuocXuLyGanNhatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfGetBuocXuLyGanNhatDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetBuocXuLyGanNhatDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetBuocXuLyGanNhatDto implements IGetBuocXuLyGanNhatDto {
    idBuocXuLy?: string | undefined;
    idBuoc?: string | undefined;

    constructor(data?: IGetBuocXuLyGanNhatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.idBuoc = _data["idBuoc"];
        }
    }

    static fromJS(data: any): GetBuocXuLyGanNhatDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetBuocXuLyGanNhatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["idBuoc"] = this.idBuoc;
        return data; 
    }
}

export interface IGetBuocXuLyGanNhatDto {
    idBuocXuLy?: string | undefined;
    idBuoc?: string | undefined;
}

export class GiaTriCauHinhCommand implements IGiaTriCauHinhCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    giaTriCauHinhs?: GiaTriCauHinhBuocViewModel[] | undefined;

    constructor(data?: IGiaTriCauHinhCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            if (Array.isArray(_data["giaTriCauHinhs"])) {
                this.giaTriCauHinhs = [] as any;
                for (let item of _data["giaTriCauHinhs"])
                    this.giaTriCauHinhs!.push(GiaTriCauHinhBuocViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GiaTriCauHinhCommand {
        data = typeof data === 'object' ? data : {};
        let result = new GiaTriCauHinhCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        if (Array.isArray(this.giaTriCauHinhs)) {
            data["giaTriCauHinhs"] = [];
            for (let item of this.giaTriCauHinhs)
                data["giaTriCauHinhs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGiaTriCauHinhCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    giaTriCauHinhs?: GiaTriCauHinhBuocViewModel[] | undefined;
}

export class GiaTriCauHinhBuocViewModel implements IGiaTriCauHinhBuocViewModel {
    id?: string | undefined;
    value?: any | undefined;

    constructor(data?: IGiaTriCauHinhBuocViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.value = _data["value"];
        }
    }

    static fromJS(data: any): GiaTriCauHinhBuocViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new GiaTriCauHinhBuocViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["value"] = this.value;
        return data; 
    }
}

export interface IGiaTriCauHinhBuocViewModel {
    id?: string | undefined;
    value?: any | undefined;
}

export class ApiResultOfGetBuocXuLyByIdDto implements IApiResultOfGetBuocXuLyByIdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetBuocXuLyByIdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfGetBuocXuLyByIdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? GetBuocXuLyByIdDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfGetBuocXuLyByIdDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfGetBuocXuLyByIdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfGetBuocXuLyByIdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetBuocXuLyByIdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetBuocXuLyByIdDto extends BuocXuLyThoiGianDto implements IGetBuocXuLyByIdDto {
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    thoiGianThucHien?: number | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;

    constructor(data?: IGetBuocXuLyByIdDto) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idCha = _data["idCha"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.idChuyen = _data["idChuyen"];
            this.noiDungChuyen = _data["noiDungChuyen"];
            this.idActivitiTask = _data["idActivitiTask"];
            this.maTinh = _data["maTinh"];
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
        }
    }

    static fromJS(data: any): GetBuocXuLyByIdDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetBuocXuLyByIdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCha"] = this.idCha;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["idChuyen"] = this.idChuyen;
        data["noiDungChuyen"] = this.noiDungChuyen;
        data["idActivitiTask"] = this.idActivitiTask;
        data["maTinh"] = this.maTinh;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface IGetBuocXuLyByIdDto extends IBuocXuLyThoiGianDto {
    idCha?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idTrangThaiHoSo?: number;
    idTrangThaiXuLy?: number;
    thoiGianThucHien?: number | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idActivitiTask?: string | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
}

export class GetBuocXuLyByIdQuery implements IGetBuocXuLyByIdQuery {
    id?: string | undefined;
    idHoSo?: string | undefined;

    constructor(data?: IGetBuocXuLyByIdQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
        }
    }

    static fromJS(data: any): GetBuocXuLyByIdQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetBuocXuLyByIdQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        return data; 
    }
}

export interface IGetBuocXuLyByIdQuery {
    id?: string | undefined;
    idHoSo?: string | undefined;
}

export class ApiResultOfPagedListOfSearchBuocXuLyDto implements IApiResultOfPagedListOfSearchBuocXuLyDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchBuocXuLyDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchBuocXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchBuocXuLyDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchBuocXuLyDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchBuocXuLyDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchBuocXuLyDto implements IPagedListOfSearchBuocXuLyDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchBuocXuLyDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchBuocXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchBuocXuLyDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchBuocXuLyDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchBuocXuLyDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchBuocXuLyDto extends BuocXuLyThoiGianDto implements ISearchBuocXuLyDto {
    idHoSo?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idDvhc?: string | undefined;
    idActivitiProcessInstances?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenDvhc?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    idTrangThaiXuLy?: number;
    tenTrangThaiXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    idTrangThaiThucHienHoSo?: number;
    tenTrangThaiThucHienHoSo?: string | undefined;
    tenQuanHuyen?: string | undefined;
    noiDungXuLy?: string | undefined;

    constructor(data?: ISearchBuocXuLyDto) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.nguoiNop = _data["nguoiNop"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idDvhc = _data["idDvhc"];
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenDvhc = _data["tenDvhc"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.tenBuoc = _data["tenBuoc"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.idTrangThaiThucHienHoSo = _data["idTrangThaiThucHienHoSo"];
            this.tenTrangThaiThucHienHoSo = _data["tenTrangThaiThucHienHoSo"];
            this.tenQuanHuyen = _data["tenQuanHuyen"];
            this.noiDungXuLy = _data["noiDungXuLy"];
        }
    }

    static fromJS(data: any): SearchBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["nguoiNop"] = this.nguoiNop;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idDvhc"] = this.idDvhc;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenDvhc"] = this.tenDvhc;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["tenBuoc"] = this.tenBuoc;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["idTrangThaiThucHienHoSo"] = this.idTrangThaiThucHienHoSo;
        data["tenTrangThaiThucHienHoSo"] = this.tenTrangThaiThucHienHoSo;
        data["tenQuanHuyen"] = this.tenQuanHuyen;
        data["noiDungXuLy"] = this.noiDungXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchBuocXuLyDto extends IBuocXuLyThoiGianDto {
    idHoSo?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idDvhc?: string | undefined;
    idActivitiProcessInstances?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenDvhc?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    idTrangThaiXuLy?: number;
    tenTrangThaiXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    idTrangThaiThucHienHoSo?: number;
    tenTrangThaiThucHienHoSo?: string | undefined;
    tenQuanHuyen?: string | undefined;
    noiDungXuLy?: string | undefined;
}

export class SearchBuocXuLyQuery extends PagingRequest implements ISearchBuocXuLyQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiThucHienHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    searchType?: BuocXuLySearchType;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean | undefined;
    dsIdCanBoXuLy?: string[] | undefined;

    constructor(data?: ISearchBuocXuLyQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiThucHienHoSo = _data["idTrangThaiThucHienHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.searchType = _data["searchType"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
            if (Array.isArray(_data["dsIdCanBoXuLy"])) {
                this.dsIdCanBoXuLy = [] as any;
                for (let item of _data["dsIdCanBoXuLy"])
                    this.dsIdCanBoXuLy!.push(item);
            }
        }
    }

    static fromJS(data: any): SearchBuocXuLyQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchBuocXuLyQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiThucHienHoSo"] = this.idTrangThaiThucHienHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["searchType"] = this.searchType;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        if (Array.isArray(this.dsIdCanBoXuLy)) {
            data["dsIdCanBoXuLy"] = [];
            for (let item of this.dsIdCanBoXuLy)
                data["dsIdCanBoXuLy"].push(item);
        }
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchBuocXuLyQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiThucHienHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    searchType?: BuocXuLySearchType;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean | undefined;
    dsIdCanBoXuLy?: string[] | undefined;
}

export enum BuocXuLySearchType {
    None = 0,
    DaGiaiQuyet = 2,
    DaGiaiQuyetDungHan = 3,
    DangThuLy = 4,
    ThuLyDungHan = 5,
    QuaHan = 6,
}

export class ApiResultOfIListOfBuocXuLyHienTaiViewModel implements IApiResultOfIListOfBuocXuLyHienTaiViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BuocXuLyHienTaiViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBuocXuLyHienTaiViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BuocXuLyHienTaiViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBuocXuLyHienTaiViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBuocXuLyHienTaiViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBuocXuLyHienTaiViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BuocXuLyHienTaiViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BuocXuLyHienTaiViewModel implements IBuocXuLyHienTaiViewModel {
    idBuocXuLy?: string | undefined;
    idBuoc?: string | undefined;
    idHoSo?: string | undefined;
    idQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenBuoc?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;

    constructor(data?: IBuocXuLyHienTaiViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.idBuoc = _data["idBuoc"];
            this.idHoSo = _data["idHoSo"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenBuoc = _data["tenBuoc"];
            this.idDvhc = _data["idDvhc"];
            this.tenDvhc = _data["tenDvhc"];
        }
    }

    static fromJS(data: any): BuocXuLyHienTaiViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BuocXuLyHienTaiViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["idBuoc"] = this.idBuoc;
        data["idHoSo"] = this.idHoSo;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenBuoc"] = this.tenBuoc;
        data["idDvhc"] = this.idDvhc;
        data["tenDvhc"] = this.tenDvhc;
        return data; 
    }
}

export interface IBuocXuLyHienTaiViewModel {
    idBuocXuLy?: string | undefined;
    idBuoc?: string | undefined;
    idHoSo?: string | undefined;
    idQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenBuoc?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
}

export class ApiResultOfPagedListOfBuocXuLyHangLoatViewModel implements IApiResultOfPagedListOfBuocXuLyHangLoatViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfBuocXuLyHangLoatViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfBuocXuLyHangLoatViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfBuocXuLyHangLoatViewModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfBuocXuLyHangLoatViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfBuocXuLyHangLoatViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfBuocXuLyHangLoatViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfBuocXuLyHangLoatViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfBuocXuLyHangLoatViewModel implements IPagedListOfBuocXuLyHangLoatViewModel {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: BuocXuLyHangLoatViewModel[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfBuocXuLyHangLoatViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(BuocXuLyHangLoatViewModel.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfBuocXuLyHangLoatViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfBuocXuLyHangLoatViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfBuocXuLyHangLoatViewModel {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: BuocXuLyHangLoatViewModel[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class BuocXuLyHangLoatViewModel implements IBuocXuLyHangLoatViewModel {
    idBuocXuLy?: string | undefined;
    idHoSo?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    ngayCapNhat?: Date | undefined;
    tenDvhc?: string | undefined;
    ngayBatDau?: Date;

    constructor(data?: IBuocXuLyHangLoatViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.idHoSo = _data["idHoSo"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.nguoiNop = _data["nguoiNop"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.tenDvhc = _data["tenDvhc"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): BuocXuLyHangLoatViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BuocXuLyHangLoatViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["idHoSo"] = this.idHoSo;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["nguoiNop"] = this.nguoiNop;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["tenDvhc"] = this.tenDvhc;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        return data; 
    }
}

export interface IBuocXuLyHangLoatViewModel {
    idBuocXuLy?: string | undefined;
    idHoSo?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    ngayCapNhat?: Date | undefined;
    tenDvhc?: string | undefined;
    ngayBatDau?: Date;
}

export class SearchDsCongViecCanXuLyHangLoatQuery extends PagingRequest implements ISearchDsCongViecCanXuLyHangLoatQuery {
    idBuoc?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;

    constructor(data?: ISearchDsCongViecCanXuLyHangLoatQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idBuoc = _data["idBuoc"];
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
        }
    }

    static fromJS(data: any): SearchDsCongViecCanXuLyHangLoatQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchDsCongViecCanXuLyHangLoatQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuoc"] = this.idBuoc;
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchDsCongViecCanXuLyHangLoatQuery extends IPagingRequest {
    idBuoc?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
}

export class ChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery extends PagingRequest implements IChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery {
    idQuanHuyen?: string | undefined;
    idPhongBan?: string | undefined;
    idNguoiXuLy?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    hoSoChiTietType?: HoSoChiTietBaoCaoType;

    constructor(data?: IChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhongBan = _data["idPhongBan"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.hoSoChiTietType = _data["hoSoChiTietType"];
        }
    }

    static fromJS(data: any): ChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery {
        data = typeof data === 'object' ? data : {};
        let result = new ChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhongBan"] = this.idPhongBan;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["hoSoChiTietType"] = this.hoSoChiTietType;
        super.toJSON(data);
        return data; 
    }
}

export interface IChiTietBaoCaoGiaiQuyetCongViecTheoChuyenVienQuery extends IPagingRequest {
    idQuanHuyen?: string | undefined;
    idPhongBan?: string | undefined;
    idNguoiXuLy?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    hoSoChiTietType?: HoSoChiTietBaoCaoType;
}

export enum HoSoChiTietBaoCaoType {
    TonDauKy = 0,
    NhanTrongKy = 1,
    TongHoSo = 2,
    HoanThanhDungHan = 3,
    HoanThanhTreHan = 4,
    TongHoanThanh = 5,
    DangXuLyTrongHan = 6,
    DangXuLyQuaHan = 7,
    DangXuLyTong = 8,
    HoSoHuy = 9,
}

export class ApiResultOfListOfGetLoaiTaiLieuDto implements IApiResultOfListOfGetLoaiTaiLieuDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetLoaiTaiLieuDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfListOfGetLoaiTaiLieuDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetLoaiTaiLieuDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfListOfGetLoaiTaiLieuDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfListOfGetLoaiTaiLieuDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfListOfGetLoaiTaiLieuDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetLoaiTaiLieuDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetLoaiTaiLieuDto implements IGetLoaiTaiLieuDto {
    idlinhvuc?: string | undefined;
    tenlinhvuc?: string | undefined;
    kyhieu?: string | undefined;
    mota?: string | undefined;
    isdelete?: number | undefined;
    iddvhc?: string | undefined;
    loaiTaiLieu?: LoaiTaiLieu[] | undefined;

    constructor(data?: IGetLoaiTaiLieuDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idlinhvuc = _data["idlinhvuc"];
            this.tenlinhvuc = _data["tenlinhvuc"];
            this.kyhieu = _data["kyhieu"];
            this.mota = _data["mota"];
            this.isdelete = _data["isdelete"];
            this.iddvhc = _data["iddvhc"];
            if (Array.isArray(_data["loaiTaiLieu"])) {
                this.loaiTaiLieu = [] as any;
                for (let item of _data["loaiTaiLieu"])
                    this.loaiTaiLieu!.push(LoaiTaiLieu.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetLoaiTaiLieuDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetLoaiTaiLieuDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idlinhvuc"] = this.idlinhvuc;
        data["tenlinhvuc"] = this.tenlinhvuc;
        data["kyhieu"] = this.kyhieu;
        data["mota"] = this.mota;
        data["isdelete"] = this.isdelete;
        data["iddvhc"] = this.iddvhc;
        if (Array.isArray(this.loaiTaiLieu)) {
            data["loaiTaiLieu"] = [];
            for (let item of this.loaiTaiLieu)
                data["loaiTaiLieu"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetLoaiTaiLieuDto {
    idlinhvuc?: string | undefined;
    tenlinhvuc?: string | undefined;
    kyhieu?: string | undefined;
    mota?: string | undefined;
    isdelete?: number | undefined;
    iddvhc?: string | undefined;
    loaiTaiLieu?: LoaiTaiLieu[] | undefined;
}

export class LoaiTaiLieu implements ILoaiTaiLieu {
    idloaitailieu?: string | undefined;
    tenloaitailieu?: string | undefined;
    kyhieu?: string | undefined;
    idlinhvuc?: string | undefined;
    mota?: string | undefined;

    constructor(data?: ILoaiTaiLieu) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idloaitailieu = _data["idloaitailieu"];
            this.tenloaitailieu = _data["tenloaitailieu"];
            this.kyhieu = _data["kyhieu"];
            this.idlinhvuc = _data["idlinhvuc"];
            this.mota = _data["mota"];
        }
    }

    static fromJS(data: any): LoaiTaiLieu {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiTaiLieu();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idloaitailieu"] = this.idloaitailieu;
        data["tenloaitailieu"] = this.tenloaitailieu;
        data["kyhieu"] = this.kyhieu;
        data["idlinhvuc"] = this.idlinhvuc;
        data["mota"] = this.mota;
        return data; 
    }
}

export interface ILoaiTaiLieu {
    idloaitailieu?: string | undefined;
    tenloaitailieu?: string | undefined;
    kyhieu?: string | undefined;
    idlinhvuc?: string | undefined;
    mota?: string | undefined;
}

export class CreateHoSoQuetCommand implements ICreateHoSoQuetCommand {
    idChuSDThuaDat?: string | undefined;
    idThuadat?: string | undefined;
    idChusudung?: string | undefined;
    idHoso?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    idLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    idDvhc?: string | undefined;
    idToBanDo?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    fileHoSoQuets?: FileHoSoQuetCommand[] | undefined;

    constructor(data?: ICreateHoSoQuetCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idChuSDThuaDat = _data["idChuSDThuaDat"];
            this.idThuadat = _data["idThuadat"];
            this.idChusudung = _data["idChusudung"];
            this.idHoso = _data["idHoso"];
            this.soTo = _data["soTo"];
            this.soThuTuThua = _data["soThuTuThua"];
            this.soPhatHanh = _data["soPhatHanh"];
            this.soVaoSo = _data["soVaoSo"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.idDvhc = _data["idDvhc"];
            this.idToBanDo = _data["idToBanDo"];
            this.idHuyen = _data["idHuyen"];
            this.idTinh = _data["idTinh"];
            if (Array.isArray(_data["fileHoSoQuets"])) {
                this.fileHoSoQuets = [] as any;
                for (let item of _data["fileHoSoQuets"])
                    this.fileHoSoQuets!.push(FileHoSoQuetCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateHoSoQuetCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateHoSoQuetCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idChuSDThuaDat"] = this.idChuSDThuaDat;
        data["idThuadat"] = this.idThuadat;
        data["idChusudung"] = this.idChusudung;
        data["idHoso"] = this.idHoso;
        data["soTo"] = this.soTo;
        data["soThuTuThua"] = this.soThuTuThua;
        data["soPhatHanh"] = this.soPhatHanh;
        data["soVaoSo"] = this.soVaoSo;
        data["idLinhVuc"] = this.idLinhVuc;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["idDvhc"] = this.idDvhc;
        data["idToBanDo"] = this.idToBanDo;
        data["idHuyen"] = this.idHuyen;
        data["idTinh"] = this.idTinh;
        if (Array.isArray(this.fileHoSoQuets)) {
            data["fileHoSoQuets"] = [];
            for (let item of this.fileHoSoQuets)
                data["fileHoSoQuets"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateHoSoQuetCommand {
    idChuSDThuaDat?: string | undefined;
    idThuadat?: string | undefined;
    idChusudung?: string | undefined;
    idHoso?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    idLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    idDvhc?: string | undefined;
    idToBanDo?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    fileHoSoQuets?: FileHoSoQuetCommand[] | undefined;
}

export class FileHoSoQuetCommand implements IFileHoSoQuetCommand {
    id?: string | undefined;
    tenFile?: string | undefined;
    link?: string | undefined;
    idLoaitailieu?: string | undefined;
    loaitailieu?: string | undefined;

    constructor(data?: IFileHoSoQuetCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.tenFile = _data["tenFile"];
            this.link = _data["link"];
            this.idLoaitailieu = _data["idLoaitailieu"];
            this.loaitailieu = _data["loaitailieu"];
        }
    }

    static fromJS(data: any): FileHoSoQuetCommand {
        data = typeof data === 'object' ? data : {};
        let result = new FileHoSoQuetCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["tenFile"] = this.tenFile;
        data["link"] = this.link;
        data["idLoaitailieu"] = this.idLoaitailieu;
        data["loaitailieu"] = this.loaitailieu;
        return data; 
    }
}

export interface IFileHoSoQuetCommand {
    id?: string | undefined;
    tenFile?: string | undefined;
    link?: string | undefined;
    idLoaitailieu?: string | undefined;
    loaitailieu?: string | undefined;
}

export class ApiResultOfCauHinhPhanCongVm implements IApiResultOfCauHinhPhanCongVm {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhPhanCongVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfCauHinhPhanCongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? CauHinhPhanCongVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfCauHinhPhanCongVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfCauHinhPhanCongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfCauHinhPhanCongVm {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhPhanCongVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CauHinhPhanCongVm implements ICauHinhPhanCongVm {
    id?: string | undefined;

    constructor(data?: ICauHinhPhanCongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): CauHinhPhanCongVm {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhPhanCongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        return data; 
    }
}

export interface ICauHinhPhanCongVm {
    id?: string | undefined;
}

export class CreateCauHinhPhanCongCommand implements ICreateCauHinhPhanCongCommand {
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    cauHinhPhanCongCTs?: CreateCauHinhPhanCongCtCommand[] | undefined;

    constructor(data?: ICreateCauHinhPhanCongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            if (Array.isArray(_data["cauHinhPhanCongCTs"])) {
                this.cauHinhPhanCongCTs = [] as any;
                for (let item of _data["cauHinhPhanCongCTs"])
                    this.cauHinhPhanCongCTs!.push(CreateCauHinhPhanCongCtCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateCauHinhPhanCongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateCauHinhPhanCongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        if (Array.isArray(this.cauHinhPhanCongCTs)) {
            data["cauHinhPhanCongCTs"] = [];
            for (let item of this.cauHinhPhanCongCTs)
                data["cauHinhPhanCongCTs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateCauHinhPhanCongCommand {
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    cauHinhPhanCongCTs?: CreateCauHinhPhanCongCtCommand[] | undefined;
}

export class CreateCauHinhPhanCongCtCommand implements ICreateCauHinhPhanCongCtCommand {
    idBuoc?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
    buoc?: PhanCongCtBuocDto | undefined;

    constructor(data?: ICreateCauHinhPhanCongCtCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBuoc = _data["idBuoc"];
            if (Array.isArray(_data["dsIdNguoiXuLy"])) {
                this.dsIdNguoiXuLy = [] as any;
                for (let item of _data["dsIdNguoiXuLy"])
                    this.dsIdNguoiXuLy!.push(item);
            }
            this.buoc = _data["buoc"] ? PhanCongCtBuocDto.fromJS(_data["buoc"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CreateCauHinhPhanCongCtCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateCauHinhPhanCongCtCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuoc"] = this.idBuoc;
        if (Array.isArray(this.dsIdNguoiXuLy)) {
            data["dsIdNguoiXuLy"] = [];
            for (let item of this.dsIdNguoiXuLy)
                data["dsIdNguoiXuLy"].push(item);
        }
        data["buoc"] = this.buoc ? this.buoc.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICreateCauHinhPhanCongCtCommand {
    idBuoc?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
    buoc?: PhanCongCtBuocDto | undefined;
}

export class PhanCongCtBuocDto implements IPhanCongCtBuocDto {
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTime?: number | undefined;

    constructor(data?: IPhanCongCtBuocDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.thoiGianThucHienTime = _data["thoiGianThucHienTime"];
        }
    }

    static fromJS(data: any): PhanCongCtBuocDto {
        data = typeof data === 'object' ? data : {};
        let result = new PhanCongCtBuocDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["thoiGianThucHienTime"] = this.thoiGianThucHienTime;
        return data; 
    }
}

export interface IPhanCongCtBuocDto {
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTime?: number | undefined;
}

export class ApiResultOfCauHinhPhanCongBuocVm implements IApiResultOfCauHinhPhanCongBuocVm {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhPhanCongBuocVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfCauHinhPhanCongBuocVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? CauHinhPhanCongBuocVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfCauHinhPhanCongBuocVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfCauHinhPhanCongBuocVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfCauHinhPhanCongBuocVm {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhPhanCongBuocVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CauHinhPhanCongBuocVm implements ICauHinhPhanCongBuocVm {
    id?: string | undefined;
    idCauHinhPhanCongCT?: string | undefined;

    constructor(data?: ICauHinhPhanCongBuocVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCauHinhPhanCongCT = _data["idCauHinhPhanCongCT"];
        }
    }

    static fromJS(data: any): CauHinhPhanCongBuocVm {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhPhanCongBuocVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCauHinhPhanCongCT"] = this.idCauHinhPhanCongCT;
        return data; 
    }
}

export interface ICauHinhPhanCongBuocVm {
    id?: string | undefined;
    idCauHinhPhanCongCT?: string | undefined;
}

export class CreateCauHinhPhanCongBuocCommand implements ICreateCauHinhPhanCongBuocCommand {
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
    ngayBatDau?: Date;

    constructor(data?: ICreateCauHinhPhanCongBuocCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idBuoc = _data["idBuoc"];
            if (Array.isArray(_data["dsIdNguoiXuLy"])) {
                this.dsIdNguoiXuLy = [] as any;
                for (let item of _data["dsIdNguoiXuLy"])
                    this.dsIdNguoiXuLy!.push(item);
            }
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): CreateCauHinhPhanCongBuocCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateCauHinhPhanCongBuocCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idBuoc"] = this.idBuoc;
        if (Array.isArray(this.dsIdNguoiXuLy)) {
            data["dsIdNguoiXuLy"] = [];
            for (let item of this.dsIdNguoiXuLy)
                data["dsIdNguoiXuLy"].push(item);
        }
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        return data; 
    }
}

export interface ICreateCauHinhPhanCongBuocCommand {
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
    ngayBatDau?: Date;
}

export class EditCauHinhPhanCongCommand implements IEditCauHinhPhanCongCommand {
    id?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    maTinh?: string | undefined;
    cauHinhPhanCongCTs?: CreateCauHinhPhanCongCtCommand[] | undefined;

    constructor(data?: IEditCauHinhPhanCongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.maTinh = _data["maTinh"];
            if (Array.isArray(_data["cauHinhPhanCongCTs"])) {
                this.cauHinhPhanCongCTs = [] as any;
                for (let item of _data["cauHinhPhanCongCTs"])
                    this.cauHinhPhanCongCTs!.push(CreateCauHinhPhanCongCtCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): EditCauHinhPhanCongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new EditCauHinhPhanCongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["maTinh"] = this.maTinh;
        if (Array.isArray(this.cauHinhPhanCongCTs)) {
            data["cauHinhPhanCongCTs"] = [];
            for (let item of this.cauHinhPhanCongCTs)
                data["cauHinhPhanCongCTs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IEditCauHinhPhanCongCommand {
    id?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    maTinh?: string | undefined;
    cauHinhPhanCongCTs?: CreateCauHinhPhanCongCtCommand[] | undefined;
}

export class ApiResultOfPagedListOfSearchCauHinhPhanCongDto implements IApiResultOfPagedListOfSearchCauHinhPhanCongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchCauHinhPhanCongDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchCauHinhPhanCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchCauHinhPhanCongDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchCauHinhPhanCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchCauHinhPhanCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchCauHinhPhanCongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchCauHinhPhanCongDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchCauHinhPhanCongDto implements IPagedListOfSearchCauHinhPhanCongDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchCauHinhPhanCongDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchCauHinhPhanCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchCauHinhPhanCongDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchCauHinhPhanCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchCauHinhPhanCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchCauHinhPhanCongDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchCauHinhPhanCongDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchCauHinhPhanCongDto implements ISearchCauHinhPhanCongDto {
    id?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    maTinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenDvhc?: string | undefined;
    trangThai?: number;
    buocQuyTrinh?: number;
    cauHinhPhanCongCTs?: CauHinhPhanCongCtDto[] | undefined;

    constructor(data?: ISearchCauHinhPhanCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.maTinh = _data["maTinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenDvhc = _data["tenDvhc"];
            this.trangThai = _data["trangThai"];
            this.buocQuyTrinh = _data["buocQuyTrinh"];
            if (Array.isArray(_data["cauHinhPhanCongCTs"])) {
                this.cauHinhPhanCongCTs = [] as any;
                for (let item of _data["cauHinhPhanCongCTs"])
                    this.cauHinhPhanCongCTs!.push(CauHinhPhanCongCtDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): SearchCauHinhPhanCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchCauHinhPhanCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["maTinh"] = this.maTinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenDvhc"] = this.tenDvhc;
        data["trangThai"] = this.trangThai;
        data["buocQuyTrinh"] = this.buocQuyTrinh;
        if (Array.isArray(this.cauHinhPhanCongCTs)) {
            data["cauHinhPhanCongCTs"] = [];
            for (let item of this.cauHinhPhanCongCTs)
                data["cauHinhPhanCongCTs"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ISearchCauHinhPhanCongDto {
    id?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    ngayBatDau?: Date;
    maTinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenDvhc?: string | undefined;
    trangThai?: number;
    buocQuyTrinh?: number;
    cauHinhPhanCongCTs?: CauHinhPhanCongCtDto[] | undefined;
}

export class CauHinhPhanCongCtDto implements ICauHinhPhanCongCtDto {
    id?: string | undefined;
    idCauHinhPhanCong?: string | undefined;
    idBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    dsIdNguoiXuLyArray?: string[] | undefined;
    maTinh?: string | undefined;
    tenBuoc?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    dsNguoiXuLy?: DsNguoiXuLyDto[] | undefined;

    constructor(data?: ICauHinhPhanCongCtDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCauHinhPhanCong = _data["idCauHinhPhanCong"];
            this.idBuoc = _data["idBuoc"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            if (Array.isArray(_data["dsIdNguoiXuLyArray"])) {
                this.dsIdNguoiXuLyArray = [] as any;
                for (let item of _data["dsIdNguoiXuLyArray"])
                    this.dsIdNguoiXuLyArray!.push(item);
            }
            this.maTinh = _data["maTinh"];
            this.tenBuoc = _data["tenBuoc"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
            if (Array.isArray(_data["dsNguoiXuLy"])) {
                this.dsNguoiXuLy = [] as any;
                for (let item of _data["dsNguoiXuLy"])
                    this.dsNguoiXuLy!.push(DsNguoiXuLyDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CauHinhPhanCongCtDto {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhPhanCongCtDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCauHinhPhanCong"] = this.idCauHinhPhanCong;
        data["idBuoc"] = this.idBuoc;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        if (Array.isArray(this.dsIdNguoiXuLyArray)) {
            data["dsIdNguoiXuLyArray"] = [];
            for (let item of this.dsIdNguoiXuLyArray)
                data["dsIdNguoiXuLyArray"].push(item);
        }
        data["maTinh"] = this.maTinh;
        data["tenBuoc"] = this.tenBuoc;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        if (Array.isArray(this.dsNguoiXuLy)) {
            data["dsNguoiXuLy"] = [];
            for (let item of this.dsNguoiXuLy)
                data["dsNguoiXuLy"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICauHinhPhanCongCtDto {
    id?: string | undefined;
    idCauHinhPhanCong?: string | undefined;
    idBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    dsIdNguoiXuLyArray?: string[] | undefined;
    maTinh?: string | undefined;
    tenBuoc?: string | undefined;
    tenNguoiXuLy?: string | undefined;
    dsNguoiXuLy?: DsNguoiXuLyDto[] | undefined;
}

export class DsNguoiXuLyDto implements IDsNguoiXuLyDto {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;

    constructor(data?: IDsNguoiXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
        }
    }

    static fromJS(data: any): DsNguoiXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new DsNguoiXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        return data; 
    }
}

export interface IDsNguoiXuLyDto {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
}

export class SearchCauHinhPhanCongListQuery extends PagingRequest implements ISearchCauHinhPhanCongListQuery {
    id?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    trangThai?: number | undefined;
    loaiLocDvhc?: LoaiLocDvhc;

    constructor(data?: ISearchCauHinhPhanCongListQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
            this.idDvhc = _data["idDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.trangThai = _data["trangThai"];
            this.loaiLocDvhc = _data["loaiLocDvhc"];
        }
    }

    static fromJS(data: any): SearchCauHinhPhanCongListQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchCauHinhPhanCongListQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idDvhc"] = this.idDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["trangThai"] = this.trangThai;
        data["loaiLocDvhc"] = this.loaiLocDvhc;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchCauHinhPhanCongListQuery extends IPagingRequest {
    id?: string | undefined;
    idDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    trangThai?: number | undefined;
    loaiLocDvhc?: LoaiLocDvhc;
}

export enum LoaiLocDvhc {
    DvhcHienTaiVaConChau = 0,
    DvhcHienTai = 1,
}

export class ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto implements IApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto implements IPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchDanhSachQuyTrinhChuaPhanCongDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchDanhSachQuyTrinhChuaPhanCongDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchDanhSachQuyTrinhChuaPhanCongDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchDanhSachQuyTrinhChuaPhanCongDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchDanhSachQuyTrinhChuaPhanCongDto implements ISearchDanhSachQuyTrinhChuaPhanCongDto {
    id?: string | undefined;
    maQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idLinhVuc?: string | undefined;
    maLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    maThuTuc?: string | undefined;
    tenThuTuc?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;

    constructor(data?: ISearchDanhSachQuyTrinhChuaPhanCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.maLinhVuc = _data["maLinhVuc"];
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.maThuTuc = _data["maThuTuc"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.idDvhc = _data["idDvhc"];
            this.tenDvhc = _data["tenDvhc"];
        }
    }

    static fromJS(data: any): SearchDanhSachQuyTrinhChuaPhanCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchDanhSachQuyTrinhChuaPhanCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["idLinhVuc"] = this.idLinhVuc;
        data["maLinhVuc"] = this.maLinhVuc;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["maThuTuc"] = this.maThuTuc;
        data["tenThuTuc"] = this.tenThuTuc;
        data["idDvhc"] = this.idDvhc;
        data["tenDvhc"] = this.tenDvhc;
        return data; 
    }
}

export interface ISearchDanhSachQuyTrinhChuaPhanCongDto {
    id?: string | undefined;
    maQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idLinhVuc?: string | undefined;
    maLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    maThuTuc?: string | undefined;
    tenThuTuc?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
}

export class SearchDanhSachQuyTrinhChuaPhanCongQuery extends PagingRequest implements ISearchDanhSachQuyTrinhChuaPhanCongQuery {
    idDvhc?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    loaiLocDvhc?: LoaiLocDvhc;

    constructor(data?: ISearchDanhSachQuyTrinhChuaPhanCongQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.loaiLocDvhc = _data["loaiLocDvhc"];
        }
    }

    static fromJS(data: any): SearchDanhSachQuyTrinhChuaPhanCongQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchDanhSachQuyTrinhChuaPhanCongQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["loaiLocDvhc"] = this.loaiLocDvhc;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchDanhSachQuyTrinhChuaPhanCongQuery extends IPagingRequest {
    idDvhc?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    loaiLocDvhc?: LoaiLocDvhc;
}

export class LpmDataDto implements ILpmDataDto {
    objName?: string | undefined;
    objKey?: number;
    quantity?: number;
    fieldsInfo?: string | undefined;
    fieldsDisplay?: string | undefined;
    serviceName?: string | undefined;
    tag?: string | undefined;
    bgColor?: string | undefined;
    defaultSymbol?: string | undefined;
    symbol?: string | undefined;
    layerName?: string | undefined;
    slug?: string | undefined;
    moduleName?: string | undefined;

    constructor(data?: ILpmDataDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.objName = _data["objName"];
            this.objKey = _data["objKey"];
            this.quantity = _data["quantity"];
            this.fieldsInfo = _data["fieldsInfo"];
            this.fieldsDisplay = _data["fieldsDisplay"];
            this.serviceName = _data["serviceName"];
            this.tag = _data["tag"];
            this.bgColor = _data["bgColor"];
            this.defaultSymbol = _data["defaultSymbol"];
            this.symbol = _data["symbol"];
            this.layerName = _data["layerName"];
            this.slug = _data["slug"];
            this.moduleName = _data["moduleName"];
        }
    }

    static fromJS(data: any): LpmDataDto {
        data = typeof data === 'object' ? data : {};
        let result = new LpmDataDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["objName"] = this.objName;
        data["objKey"] = this.objKey;
        data["quantity"] = this.quantity;
        data["fieldsInfo"] = this.fieldsInfo;
        data["fieldsDisplay"] = this.fieldsDisplay;
        data["serviceName"] = this.serviceName;
        data["tag"] = this.tag;
        data["bgColor"] = this.bgColor;
        data["defaultSymbol"] = this.defaultSymbol;
        data["symbol"] = this.symbol;
        data["layerName"] = this.layerName;
        data["slug"] = this.slug;
        data["moduleName"] = this.moduleName;
        return data; 
    }
}

export interface ILpmDataDto {
    objName?: string | undefined;
    objKey?: number;
    quantity?: number;
    fieldsInfo?: string | undefined;
    fieldsDisplay?: string | undefined;
    serviceName?: string | undefined;
    tag?: string | undefined;
    bgColor?: string | undefined;
    defaultSymbol?: string | undefined;
    symbol?: string | undefined;
    layerName?: string | undefined;
    slug?: string | undefined;
    moduleName?: string | undefined;
}

export class ChiTietLpmDataDto implements IChiTietLpmDataDto {
    paging?: Paging | undefined;
    items?: ChiTietDataDto[] | undefined;

    constructor(data?: IChiTietLpmDataDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.paging = _data["paging"] ? Paging.fromJS(_data["paging"]) : <any>undefined;
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(ChiTietDataDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ChiTietLpmDataDto {
        data = typeof data === 'object' ? data : {};
        let result = new ChiTietLpmDataDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["paging"] = this.paging ? this.paging.toJSON() : <any>undefined;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IChiTietLpmDataDto {
    paging?: Paging | undefined;
    items?: ChiTietDataDto[] | undefined;
}

export class Paging implements IPaging {
    totalItems?: number;
    pageNumber?: number;
    pageSize?: number;
    totalPages?: number;

    constructor(data?: IPaging) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.totalItems = _data["totalItems"];
            this.pageNumber = _data["pageNumber"];
            this.pageSize = _data["pageSize"];
            this.totalPages = _data["totalPages"];
        }
    }

    static fromJS(data: any): Paging {
        data = typeof data === 'object' ? data : {};
        let result = new Paging();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["totalItems"] = this.totalItems;
        data["pageNumber"] = this.pageNumber;
        data["pageSize"] = this.pageSize;
        data["totalPages"] = this.totalPages;
        return data; 
    }
}

export interface IPaging {
    totalItems?: number;
    pageNumber?: number;
    pageSize?: number;
    totalPages?: number;
}

export abstract class ChiTietDataDto implements IChiTietDataDto {
    id?: number;
    ten?: string | undefined;
    sohieu?: string | undefined;
    objKey?: number;
    geox?: number;
    geoy?: number;
    toadox?: number;
    toadoy?: number;
    caodoz?: number;
    srid?: number;
    vitri?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    maxa?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    tenxa?: string | undefined;

    constructor(data?: IChiTietDataDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ten = _data["ten"];
            this.sohieu = _data["sohieu"];
            this.objKey = _data["objKey"];
            this.geox = _data["geox"];
            this.geoy = _data["geoy"];
            this.toadox = _data["toadox"];
            this.toadoy = _data["toadoy"];
            this.caodoz = _data["caodoz"];
            this.srid = _data["srid"];
            this.vitri = _data["vitri"];
            this.matinh = _data["matinh"];
            this.mahuyen = _data["mahuyen"];
            this.maxa = _data["maxa"];
            this.tentinh = _data["tentinh"];
            this.tenhuyen = _data["tenhuyen"];
            this.tenxa = _data["tenxa"];
        }
    }

    static fromJS(data: any): ChiTietDataDto {
        data = typeof data === 'object' ? data : {};
        throw new Error("The abstract class 'ChiTietDataDto' cannot be instantiated.");
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ten"] = this.ten;
        data["sohieu"] = this.sohieu;
        data["objKey"] = this.objKey;
        data["geox"] = this.geox;
        data["geoy"] = this.geoy;
        data["toadox"] = this.toadox;
        data["toadoy"] = this.toadoy;
        data["caodoz"] = this.caodoz;
        data["srid"] = this.srid;
        data["vitri"] = this.vitri;
        data["matinh"] = this.matinh;
        data["mahuyen"] = this.mahuyen;
        data["maxa"] = this.maxa;
        data["tentinh"] = this.tentinh;
        data["tenhuyen"] = this.tenhuyen;
        data["tenxa"] = this.tenxa;
        return data; 
    }
}

export interface IChiTietDataDto {
    id?: number;
    ten?: string | undefined;
    sohieu?: string | undefined;
    objKey?: number;
    geox?: number;
    geoy?: number;
    toadox?: number;
    toadoy?: number;
    caodoz?: number;
    srid?: number;
    vitri?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    maxa?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    tenxa?: string | undefined;
}

export class ApiResultOfIListOfDanhMucDatDai implements IApiResultOfIListOfDanhMucDatDai {
    isError?: boolean;
    message?: string | undefined;
    data?: DanhMucDatDai[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDanhMucDatDai) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DanhMucDatDai.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDanhMucDatDai {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDanhMucDatDai();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDanhMucDatDai {
    isError?: boolean;
    message?: string | undefined;
    data?: DanhMucDatDai[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DanhMucDatDai extends BaseEntityOfInteger implements IDanhMucDatDai {
    maDanhMuc?: string | undefined;
    tenDanhMuc?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    loaiDanhMuc?: LoaiDanhMucDatDai;
    loaiHoSoLienThongThue?: LoaiHoSoLienThongThue | undefined;
    stt?: number;
    tenTrangThai?: string | undefined;
    isDefault?: number;
    tenLoaiDanhMuc?: string | undefined;

    constructor(data?: IDanhMucDatDai) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maDanhMuc = _data["maDanhMuc"];
            this.tenDanhMuc = _data["tenDanhMuc"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.loaiDanhMuc = _data["loaiDanhMuc"];
            this.loaiHoSoLienThongThue = _data["loaiHoSoLienThongThue"];
            this.stt = _data["stt"];
            this.tenTrangThai = _data["tenTrangThai"];
            this.isDefault = _data["isDefault"];
            this.tenLoaiDanhMuc = _data["tenLoaiDanhMuc"];
        }
    }

    static fromJS(data: any): DanhMucDatDai {
        data = typeof data === 'object' ? data : {};
        let result = new DanhMucDatDai();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maDanhMuc"] = this.maDanhMuc;
        data["tenDanhMuc"] = this.tenDanhMuc;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["loaiDanhMuc"] = this.loaiDanhMuc;
        data["loaiHoSoLienThongThue"] = this.loaiHoSoLienThongThue;
        data["stt"] = this.stt;
        data["tenTrangThai"] = this.tenTrangThai;
        data["isDefault"] = this.isDefault;
        data["tenLoaiDanhMuc"] = this.tenLoaiDanhMuc;
        super.toJSON(data);
        return data; 
    }
}

export interface IDanhMucDatDai extends IBaseEntityOfInteger {
    maDanhMuc?: string | undefined;
    tenDanhMuc?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThai;
    loaiDanhMuc?: LoaiDanhMucDatDai;
    loaiHoSoLienThongThue?: LoaiHoSoLienThongThue | undefined;
    stt?: number;
    tenTrangThai?: string | undefined;
    isDefault?: number;
    tenLoaiDanhMuc?: string | undefined;
}

export enum LoaiDanhMucDatDai {
    LoaiDeNghi = 0,
    LoaiHoSo = 1,
    LoaiGiayTo = 2,
    LoaiDat = 3,
    MucDichSuDung = 4,
    NguonGocDat = 5,
    NguonGocNha = 6,
    LoaiChuyenNhuong = 7,
    LoaiBds = 8,
    HinhThucSdd = 9,
    HinhThucThueDat = 10,
    Dtmg = 11,
    ThongTinSoHuu = 12,
    LoaiDoiTuong = 13,
}

export enum LoaiHoSoLienThongThue {
    CapGcnQuyenSuDungDat = 0,
    GiaoDat = 1,
    ThueDat = 2,
    ChuyenNhuong = 3,
    ThuaKeChoTang = 4,
    ChuyenMucDichSuDungDat = 5,
    BoSungTaiSan = 6,
}

export class ApiResultOfDanhMucDatDaiDto implements IApiResultOfDanhMucDatDaiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: DanhMucDatDaiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfDanhMucDatDaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? DanhMucDatDaiDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfDanhMucDatDaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfDanhMucDatDaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfDanhMucDatDaiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: DanhMucDatDaiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DanhMucDatDaiDto implements IDanhMucDatDaiDto {
    maDanhMuc?: string | undefined;
    tenDanhMuc?: string | undefined;

    constructor(data?: IDanhMucDatDaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maDanhMuc = _data["maDanhMuc"];
            this.tenDanhMuc = _data["tenDanhMuc"];
        }
    }

    static fromJS(data: any): DanhMucDatDaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new DanhMucDatDaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maDanhMuc"] = this.maDanhMuc;
        data["tenDanhMuc"] = this.tenDanhMuc;
        return data; 
    }
}

export interface IDanhMucDatDaiDto {
    maDanhMuc?: string | undefined;
    tenDanhMuc?: string | undefined;
}

export class ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto implements IApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDataThongKeSoLuongHoSoNhanTraDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetDataThongKeSoLuongHoSoNhanTraDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetDataThongKeSoLuongHoSoNhanTraDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDataThongKeSoLuongHoSoNhanTraDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetDataThongKeSoLuongHoSoNhanTraDto implements IGetDataThongKeSoLuongHoSoNhanTraDto {
    name?: string | undefined;
    countHoSoNhan?: number;
    countHoSoTra?: number;

    constructor(data?: IGetDataThongKeSoLuongHoSoNhanTraDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.name = _data["name"];
            this.countHoSoNhan = _data["countHoSoNhan"];
            this.countHoSoTra = _data["countHoSoTra"];
        }
    }

    static fromJS(data: any): GetDataThongKeSoLuongHoSoNhanTraDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetDataThongKeSoLuongHoSoNhanTraDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["name"] = this.name;
        data["countHoSoNhan"] = this.countHoSoNhan;
        data["countHoSoTra"] = this.countHoSoTra;
        return data; 
    }
}

export interface IGetDataThongKeSoLuongHoSoNhanTraDto {
    name?: string | undefined;
    countHoSoNhan?: number;
    countHoSoTra?: number;
}

export class GetDataThongKeSoLuongHoSoNhanTraQuery implements IGetDataThongKeSoLuongHoSoNhanTraQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    loaiDieuKien?: string | undefined;

    constructor(data?: IGetDataThongKeSoLuongHoSoNhanTraQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.loaiDieuKien = _data["loaiDieuKien"];
        }
    }

    static fromJS(data: any): GetDataThongKeSoLuongHoSoNhanTraQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetDataThongKeSoLuongHoSoNhanTraQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["loaiDieuKien"] = this.loaiDieuKien;
        return data; 
    }
}

export interface IGetDataThongKeSoLuongHoSoNhanTraQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    loaiDieuKien?: string | undefined;
}

export class ApiResultOfPagedListOfGetSanLuongTheoCanBoDto implements IApiResultOfPagedListOfGetSanLuongTheoCanBoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetSanLuongTheoCanBoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfGetSanLuongTheoCanBoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfGetSanLuongTheoCanBoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfGetSanLuongTheoCanBoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfGetSanLuongTheoCanBoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfGetSanLuongTheoCanBoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetSanLuongTheoCanBoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfGetSanLuongTheoCanBoDto implements IPagedListOfGetSanLuongTheoCanBoDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetSanLuongTheoCanBoDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfGetSanLuongTheoCanBoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(GetSanLuongTheoCanBoDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfGetSanLuongTheoCanBoDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfGetSanLuongTheoCanBoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfGetSanLuongTheoCanBoDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetSanLuongTheoCanBoDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class GetSanLuongTheoCanBoDto implements IGetSanLuongTheoCanBoDto {
    idCanBoThuLy?: string | undefined;
    tenCanBoThuLy?: string | undefined;
    chucDanhCanBo?: string | undefined;
    donVi?: string | undefined;
    countTongSo?: number;
    countDaGiaiQuyetHoSo?: number;
    countDaGiaiQuyetHoSoDungHan?: number;
    countDangThuLyHoSo?: number;
    countThuLyHoSoDungHan?: number;
    countThuLyHoSoQuaHan?: number;

    constructor(data?: IGetSanLuongTheoCanBoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanBoThuLy = _data["idCanBoThuLy"];
            this.tenCanBoThuLy = _data["tenCanBoThuLy"];
            this.chucDanhCanBo = _data["chucDanhCanBo"];
            this.donVi = _data["donVi"];
            this.countTongSo = _data["countTongSo"];
            this.countDaGiaiQuyetHoSo = _data["countDaGiaiQuyetHoSo"];
            this.countDaGiaiQuyetHoSoDungHan = _data["countDaGiaiQuyetHoSoDungHan"];
            this.countDangThuLyHoSo = _data["countDangThuLyHoSo"];
            this.countThuLyHoSoDungHan = _data["countThuLyHoSoDungHan"];
            this.countThuLyHoSoQuaHan = _data["countThuLyHoSoQuaHan"];
        }
    }

    static fromJS(data: any): GetSanLuongTheoCanBoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetSanLuongTheoCanBoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanBoThuLy"] = this.idCanBoThuLy;
        data["tenCanBoThuLy"] = this.tenCanBoThuLy;
        data["chucDanhCanBo"] = this.chucDanhCanBo;
        data["donVi"] = this.donVi;
        data["countTongSo"] = this.countTongSo;
        data["countDaGiaiQuyetHoSo"] = this.countDaGiaiQuyetHoSo;
        data["countDaGiaiQuyetHoSoDungHan"] = this.countDaGiaiQuyetHoSoDungHan;
        data["countDangThuLyHoSo"] = this.countDangThuLyHoSo;
        data["countThuLyHoSoDungHan"] = this.countThuLyHoSoDungHan;
        data["countThuLyHoSoQuaHan"] = this.countThuLyHoSoQuaHan;
        return data; 
    }
}

export interface IGetSanLuongTheoCanBoDto {
    idCanBoThuLy?: string | undefined;
    tenCanBoThuLy?: string | undefined;
    chucDanhCanBo?: string | undefined;
    donVi?: string | undefined;
    countTongSo?: number;
    countDaGiaiQuyetHoSo?: number;
    countDaGiaiQuyetHoSoDungHan?: number;
    countDangThuLyHoSo?: number;
    countThuLyHoSoDungHan?: number;
    countThuLyHoSoQuaHan?: number;
}

export class GetSanLuongTheoCanBoQuery extends PagingRequest implements IGetSanLuongTheoCanBoQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;

    constructor(data?: IGetSanLuongTheoCanBoQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
        }
    }

    static fromJS(data: any): GetSanLuongTheoCanBoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetSanLuongTheoCanBoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        super.toJSON(data);
        return data; 
    }
}

export interface IGetSanLuongTheoCanBoQuery extends IPagingRequest {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;
}

export class ApiResultOfPagedListOfGetHoSoTheoCanBoDto implements IApiResultOfPagedListOfGetHoSoTheoCanBoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetHoSoTheoCanBoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfGetHoSoTheoCanBoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfGetHoSoTheoCanBoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfGetHoSoTheoCanBoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfGetHoSoTheoCanBoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfGetHoSoTheoCanBoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetHoSoTheoCanBoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfGetHoSoTheoCanBoDto implements IPagedListOfGetHoSoTheoCanBoDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetHoSoTheoCanBoDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfGetHoSoTheoCanBoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(GetHoSoTheoCanBoDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfGetHoSoTheoCanBoDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfGetHoSoTheoCanBoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfGetHoSoTheoCanBoDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetHoSoTheoCanBoDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class GetHoSoTheoCanBoDto implements IGetHoSoTheoCanBoDto {
    idCanBoThuLy?: string | undefined;
    tenCanBoThuLy?: string | undefined;
    chucDanhCanBo?: string | undefined;
    donVi?: string | undefined;
    countTongSo?: number;
    countDaGiaiQuyetHoSo?: number;
    countDangThuLyHoSo?: number;
    countThuLyHoSoQuaHan?: number;

    constructor(data?: IGetHoSoTheoCanBoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCanBoThuLy = _data["idCanBoThuLy"];
            this.tenCanBoThuLy = _data["tenCanBoThuLy"];
            this.chucDanhCanBo = _data["chucDanhCanBo"];
            this.donVi = _data["donVi"];
            this.countTongSo = _data["countTongSo"];
            this.countDaGiaiQuyetHoSo = _data["countDaGiaiQuyetHoSo"];
            this.countDangThuLyHoSo = _data["countDangThuLyHoSo"];
            this.countThuLyHoSoQuaHan = _data["countThuLyHoSoQuaHan"];
        }
    }

    static fromJS(data: any): GetHoSoTheoCanBoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoTheoCanBoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCanBoThuLy"] = this.idCanBoThuLy;
        data["tenCanBoThuLy"] = this.tenCanBoThuLy;
        data["chucDanhCanBo"] = this.chucDanhCanBo;
        data["donVi"] = this.donVi;
        data["countTongSo"] = this.countTongSo;
        data["countDaGiaiQuyetHoSo"] = this.countDaGiaiQuyetHoSo;
        data["countDangThuLyHoSo"] = this.countDangThuLyHoSo;
        data["countThuLyHoSoQuaHan"] = this.countThuLyHoSoQuaHan;
        return data; 
    }
}

export interface IGetHoSoTheoCanBoDto {
    idCanBoThuLy?: string | undefined;
    tenCanBoThuLy?: string | undefined;
    chucDanhCanBo?: string | undefined;
    donVi?: string | undefined;
    countTongSo?: number;
    countDaGiaiQuyetHoSo?: number;
    countDangThuLyHoSo?: number;
    countThuLyHoSoQuaHan?: number;
}

export class GetHoSoTheoCanBoQuery extends PagingRequest implements IGetHoSoTheoCanBoQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;

    constructor(data?: IGetHoSoTheoCanBoQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
        }
    }

    static fromJS(data: any): GetHoSoTheoCanBoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoTheoCanBoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        super.toJSON(data);
        return data; 
    }
}

export interface IGetHoSoTheoCanBoQuery extends IPagingRequest {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;
}

export class ApiResultOfGetDataThongKeTinhHinhHoSoDto implements IApiResultOfGetDataThongKeTinhHinhHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDataThongKeTinhHinhHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfGetDataThongKeTinhHinhHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? GetDataThongKeTinhHinhHoSoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfGetDataThongKeTinhHinhHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfGetDataThongKeTinhHinhHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfGetDataThongKeTinhHinhHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDataThongKeTinhHinhHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetDataThongKeTinhHinhHoSoDto implements IGetDataThongKeTinhHinhHoSoDto {
    tongSoHoSo?: number;
    tongSoHoSoDangXuLy?: number;
    tyLeDungHan?: number;
    soLuongQuaHan?: number;

    constructor(data?: IGetDataThongKeTinhHinhHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tongSoHoSo = _data["tongSoHoSo"];
            this.tongSoHoSoDangXuLy = _data["tongSoHoSoDangXuLy"];
            this.tyLeDungHan = _data["tyLeDungHan"];
            this.soLuongQuaHan = _data["soLuongQuaHan"];
        }
    }

    static fromJS(data: any): GetDataThongKeTinhHinhHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetDataThongKeTinhHinhHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tongSoHoSo"] = this.tongSoHoSo;
        data["tongSoHoSoDangXuLy"] = this.tongSoHoSoDangXuLy;
        data["tyLeDungHan"] = this.tyLeDungHan;
        data["soLuongQuaHan"] = this.soLuongQuaHan;
        return data; 
    }
}

export interface IGetDataThongKeTinhHinhHoSoDto {
    tongSoHoSo?: number;
    tongSoHoSoDangXuLy?: number;
    tyLeDungHan?: number;
    soLuongQuaHan?: number;
}

export class GetDataThongKeTinhHinhHoSoQuery implements IGetDataThongKeTinhHinhHoSoQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;

    constructor(data?: IGetDataThongKeTinhHinhHoSoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
        }
    }

    static fromJS(data: any): GetDataThongKeTinhHinhHoSoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetDataThongKeTinhHinhHoSoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        return data; 
    }
}

export interface IGetDataThongKeTinhHinhHoSoQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;
}

export class ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto implements IApiResultOfPagedListOfGetDataThongKeTheoThuTucDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetDataThongKeTheoThuTucDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfGetDataThongKeTheoThuTucDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfGetDataThongKeTheoThuTucDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfGetDataThongKeTheoThuTucDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfGetDataThongKeTheoThuTucDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfGetDataThongKeTheoThuTucDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfGetDataThongKeTheoThuTucDto implements IPagedListOfGetDataThongKeTheoThuTucDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetDataThongKeTheoThuTucDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfGetDataThongKeTheoThuTucDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(GetDataThongKeTheoThuTucDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfGetDataThongKeTheoThuTucDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfGetDataThongKeTheoThuTucDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfGetDataThongKeTheoThuTucDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: GetDataThongKeTheoThuTucDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class GetDataThongKeTheoThuTucDto implements IGetDataThongKeTheoThuTucDto {
    soHoSoNhan?: number;
    soHoSoTra?: number;
    tenThuTuc?: string | undefined;
    tenVietTat?: string | undefined;
    idLinhVuc?: string | undefined;

    constructor(data?: IGetDataThongKeTheoThuTucDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soHoSoNhan = _data["soHoSoNhan"];
            this.soHoSoTra = _data["soHoSoTra"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenVietTat = _data["tenVietTat"];
            this.idLinhVuc = _data["idLinhVuc"];
        }
    }

    static fromJS(data: any): GetDataThongKeTheoThuTucDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetDataThongKeTheoThuTucDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soHoSoNhan"] = this.soHoSoNhan;
        data["soHoSoTra"] = this.soHoSoTra;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenVietTat"] = this.tenVietTat;
        data["idLinhVuc"] = this.idLinhVuc;
        return data; 
    }
}

export interface IGetDataThongKeTheoThuTucDto {
    soHoSoNhan?: number;
    soHoSoTra?: number;
    tenThuTuc?: string | undefined;
    tenVietTat?: string | undefined;
    idLinhVuc?: string | undefined;
}

export class GetDataThongKeTheoThuTucQuery extends PagingRequest implements IGetDataThongKeTheoThuTucQuery {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idLinhVuc?: string | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;

    constructor(data?: IGetDataThongKeTheoThuTucQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
        }
    }

    static fromJS(data: any): GetDataThongKeTheoThuTucQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetDataThongKeTheoThuTucQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        super.toJSON(data);
        return data; 
    }
}

export interface IGetDataThongKeTheoThuTucQuery extends IPagingRequest {
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    idLinhVuc?: string | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    isTonKyTruoc?: boolean;
}

export class ApiResultOfIListOfDoiTuongKhaiThac implements IApiResultOfIListOfDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: DoiTuongKhaiThac[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDoiTuongKhaiThac) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DoiTuongKhaiThac.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: DoiTuongKhaiThac[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfDoiTuongKhaiThac implements IApiResultOfDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: DoiTuongKhaiThac | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfDoiTuongKhaiThac) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? DoiTuongKhaiThac.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfDoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfDoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: DoiTuongKhaiThac | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DoiTuongKhaiThacViewModel implements IDoiTuongKhaiThacViewModel {
    id?: string | undefined;
    hoTen?: string | undefined;
    soDienThoai?: string | undefined;
    email?: string | undefined;
    diaChi?: string | undefined;
    trangThai?: number;
    dtKhaiThacLoaiGiayTos?: DoiTuongKhaiThacLoaiGiayToViewModel[] | undefined;

    constructor(data?: IDoiTuongKhaiThacViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.hoTen = _data["hoTen"];
            this.soDienThoai = _data["soDienThoai"];
            this.email = _data["email"];
            this.diaChi = _data["diaChi"];
            this.trangThai = _data["trangThai"];
            if (Array.isArray(_data["dtKhaiThacLoaiGiayTos"])) {
                this.dtKhaiThacLoaiGiayTos = [] as any;
                for (let item of _data["dtKhaiThacLoaiGiayTos"])
                    this.dtKhaiThacLoaiGiayTos!.push(DoiTuongKhaiThacLoaiGiayToViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DoiTuongKhaiThacViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DoiTuongKhaiThacViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["hoTen"] = this.hoTen;
        data["soDienThoai"] = this.soDienThoai;
        data["email"] = this.email;
        data["diaChi"] = this.diaChi;
        data["trangThai"] = this.trangThai;
        if (Array.isArray(this.dtKhaiThacLoaiGiayTos)) {
            data["dtKhaiThacLoaiGiayTos"] = [];
            for (let item of this.dtKhaiThacLoaiGiayTos)
                data["dtKhaiThacLoaiGiayTos"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDoiTuongKhaiThacViewModel {
    id?: string | undefined;
    hoTen?: string | undefined;
    soDienThoai?: string | undefined;
    email?: string | undefined;
    diaChi?: string | undefined;
    trangThai?: number;
    dtKhaiThacLoaiGiayTos?: DoiTuongKhaiThacLoaiGiayToViewModel[] | undefined;
}

export class DoiTuongKhaiThacLoaiGiayToViewModel implements IDoiTuongKhaiThacLoaiGiayToViewModel {
    id?: string | undefined;
    idDoiTuongKhaiThac?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    idLoaiGiayTo?: number;
    soGiayTo?: string | undefined;
    stt?: number;

    constructor(data?: IDoiTuongKhaiThacLoaiGiayToViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idDoiTuongKhaiThac = _data["idDoiTuongKhaiThac"];
            this.tenLoaiGiayTo = _data["tenLoaiGiayTo"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.soGiayTo = _data["soGiayTo"];
            this.stt = _data["stt"];
        }
    }

    static fromJS(data: any): DoiTuongKhaiThacLoaiGiayToViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DoiTuongKhaiThacLoaiGiayToViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idDoiTuongKhaiThac"] = this.idDoiTuongKhaiThac;
        data["tenLoaiGiayTo"] = this.tenLoaiGiayTo;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["soGiayTo"] = this.soGiayTo;
        data["stt"] = this.stt;
        return data; 
    }
}

export interface IDoiTuongKhaiThacLoaiGiayToViewModel {
    id?: string | undefined;
    idDoiTuongKhaiThac?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    idLoaiGiayTo?: number;
    soGiayTo?: string | undefined;
    stt?: number;
}

export class ApiResultOfPagedListOfDoiTuongKhaiThac implements IApiResultOfPagedListOfDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfDoiTuongKhaiThac | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfDoiTuongKhaiThac) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfDoiTuongKhaiThac.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfDoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfDoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfDoiTuongKhaiThac | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfDoiTuongKhaiThac implements IPagedListOfDoiTuongKhaiThac {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: DoiTuongKhaiThac[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfDoiTuongKhaiThac) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(DoiTuongKhaiThac.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfDoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfDoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfDoiTuongKhaiThac {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: DoiTuongKhaiThac[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class DoiTuongKhaiThacRequest extends PagingRequest implements IDoiTuongKhaiThacRequest {
    isDisableFillterActive?: boolean;

    constructor(data?: IDoiTuongKhaiThacRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.isDisableFillterActive = _data["isDisableFillterActive"];
        }
    }

    static fromJS(data: any): DoiTuongKhaiThacRequest {
        data = typeof data === 'object' ? data : {};
        let result = new DoiTuongKhaiThacRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isDisableFillterActive"] = this.isDisableFillterActive;
        super.toJSON(data);
        return data; 
    }
}

export interface IDoiTuongKhaiThacRequest extends IPagingRequest {
    isDisableFillterActive?: boolean;
}

export class ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel implements IApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DoiTuongKhaiThacLoaiGiayToViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DoiTuongKhaiThacLoaiGiayToViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDoiTuongKhaiThacLoaiGiayToViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DoiTuongKhaiThacLoaiGiayToViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfHoSoDoiTuongKhaiThac implements IApiResultOfIListOfHoSoDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoDoiTuongKhaiThac[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfHoSoDoiTuongKhaiThac) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(HoSoDoiTuongKhaiThac.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfHoSoDoiTuongKhaiThac {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfHoSoDoiTuongKhaiThac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfHoSoDoiTuongKhaiThac {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoDoiTuongKhaiThac[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfListOfDvcDuLieuMapViewModel implements IApiResultOfListOfDvcDuLieuMapViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcDuLieuMapViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfListOfDvcDuLieuMapViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DvcDuLieuMapViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfListOfDvcDuLieuMapViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfListOfDvcDuLieuMapViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfListOfDvcDuLieuMapViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcDuLieuMapViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DvcDuLieuMapViewModel implements IDvcDuLieuMapViewModel {
    maDuLieu?: string | undefined;
    tenDuLieu?: string | undefined;
    duLieuMapLpmEnum?: DuLieuMapLpmEnum;

    constructor(data?: IDvcDuLieuMapViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maDuLieu = _data["maDuLieu"];
            this.tenDuLieu = _data["tenDuLieu"];
            this.duLieuMapLpmEnum = _data["duLieuMapLpmEnum"];
        }
    }

    static fromJS(data: any): DvcDuLieuMapViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DvcDuLieuMapViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maDuLieu"] = this.maDuLieu;
        data["tenDuLieu"] = this.tenDuLieu;
        data["duLieuMapLpmEnum"] = this.duLieuMapLpmEnum;
        return data; 
    }
}

export interface IDvcDuLieuMapViewModel {
    maDuLieu?: string | undefined;
    tenDuLieu?: string | undefined;
    duLieuMapLpmEnum?: DuLieuMapLpmEnum;
}

export enum DuLieuMapLpmEnum {
    LinhVuc = 1,
    ThuTuc = 2,
    NhanVienXuLy = 3,
    LuongQuyTrinh = 4,
    BuocQuyTrinh = 5,
    QuyTrinh = 10,
}

export class ApiResultOfIListOfDVCLinhVucViewModel implements IApiResultOfIListOfDVCLinhVucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCLinhVucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCLinhVucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCLinhVucViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCLinhVucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCLinhVucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCLinhVucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCLinhVucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCLinhVucViewModel implements IDVCLinhVucViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idLinhVucDVC?: string | undefined;
    idLpm?: string | undefined;

    constructor(data?: IDVCLinhVucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ma = _data["ma"];
            this.ten = _data["ten"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            this.idLinhVucDVC = _data["idLinhVucDVC"];
            this.idLpm = _data["idLpm"];
        }
    }

    static fromJS(data: any): DVCLinhVucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCLinhVucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ma"] = this.ma;
        data["ten"] = this.ten;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        data["idLinhVucDVC"] = this.idLinhVucDVC;
        data["idLpm"] = this.idLpm;
        return data; 
    }
}

export interface IDVCLinhVucViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idLinhVucDVC?: string | undefined;
    idLpm?: string | undefined;
}

export class ApiResultOfIListOfDVCThuTucViewModel implements IApiResultOfIListOfDVCThuTucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCThuTucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCThuTucViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCThuTucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCThuTucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCThuTucViewModel implements IDVCThuTucViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idThuTucDVC?: string | undefined;
    idLinhVucDVC?: string | undefined;
    idQuyTrinhLpm?: string | undefined;

    constructor(data?: IDVCThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ma = _data["ma"];
            this.ten = _data["ten"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            this.idThuTucDVC = _data["idThuTucDVC"];
            this.idLinhVucDVC = _data["idLinhVucDVC"];
            this.idQuyTrinhLpm = _data["idQuyTrinhLpm"];
        }
    }

    static fromJS(data: any): DVCThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ma"] = this.ma;
        data["ten"] = this.ten;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        data["idThuTucDVC"] = this.idThuTucDVC;
        data["idLinhVucDVC"] = this.idLinhVucDVC;
        data["idQuyTrinhLpm"] = this.idQuyTrinhLpm;
        return data; 
    }
}

export interface IDVCThuTucViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idThuTucDVC?: string | undefined;
    idLinhVucDVC?: string | undefined;
    idQuyTrinhLpm?: string | undefined;
}

export class ApiResultOfIListOfDVCQuyTrinhViewModel implements IApiResultOfIListOfDVCQuyTrinhViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCQuyTrinhViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCQuyTrinhViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCQuyTrinhViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCQuyTrinhViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCQuyTrinhViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCQuyTrinhViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCQuyTrinhViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCQuyTrinhViewModel implements IDVCQuyTrinhViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idQuyTrinhDVC?: string | undefined;
    idThuTucDVC?: string | undefined;
    idLinhVucDVC?: string | undefined;

    constructor(data?: IDVCQuyTrinhViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ma = _data["ma"];
            this.ten = _data["ten"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            this.idQuyTrinhDVC = _data["idQuyTrinhDVC"];
            this.idThuTucDVC = _data["idThuTucDVC"];
            this.idLinhVucDVC = _data["idLinhVucDVC"];
        }
    }

    static fromJS(data: any): DVCQuyTrinhViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCQuyTrinhViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ma"] = this.ma;
        data["ten"] = this.ten;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        data["idQuyTrinhDVC"] = this.idQuyTrinhDVC;
        data["idThuTucDVC"] = this.idThuTucDVC;
        data["idLinhVucDVC"] = this.idLinhVucDVC;
        return data; 
    }
}

export interface IDVCQuyTrinhViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idQuyTrinhDVC?: string | undefined;
    idThuTucDVC?: string | undefined;
    idLinhVucDVC?: string | undefined;
}

export class ApiResultOfDVCMapThuTucViewModel implements IApiResultOfDVCMapThuTucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCMapThuTucViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfDVCMapThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? DVCMapThuTucViewModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfDVCMapThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfDVCMapThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfDVCMapThuTucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCMapThuTucViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCMapThuTucViewModel implements IDVCMapThuTucViewModel {
    thuTucDvc?: DVCThuTucViewModel[] | undefined;
    thuTucLpm?: ThuTucViewModel[] | undefined;

    constructor(data?: IDVCMapThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["thuTucDvc"])) {
                this.thuTucDvc = [] as any;
                for (let item of _data["thuTucDvc"])
                    this.thuTucDvc!.push(DVCThuTucViewModel.fromJS(item));
            }
            if (Array.isArray(_data["thuTucLpm"])) {
                this.thuTucLpm = [] as any;
                for (let item of _data["thuTucLpm"])
                    this.thuTucLpm!.push(ThuTucViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DVCMapThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCMapThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.thuTucDvc)) {
            data["thuTucDvc"] = [];
            for (let item of this.thuTucDvc)
                data["thuTucDvc"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucLpm)) {
            data["thuTucLpm"] = [];
            for (let item of this.thuTucLpm)
                data["thuTucLpm"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDVCMapThuTucViewModel {
    thuTucDvc?: DVCThuTucViewModel[] | undefined;
    thuTucLpm?: ThuTucViewModel[] | undefined;
}

export class ThuTucViewModel implements IThuTucViewModel {
    id?: string | undefined;
    maThuTuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenVietTat?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
    mucDoThuTuc?: number;
    idLinhVuc?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thuTucLoaiGiayTos?: ThuTucLoaiGiayToViewModel[] | undefined;
    thuTucDvhcs?: ThuTucDvhcViewModel[] | undefined;
    loaiBienDong?: string | undefined;

    constructor(data?: IThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maThuTuc = _data["maThuTuc"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenVietTat = _data["tenVietTat"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.mucDoThuTuc = _data["mucDoThuTuc"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            if (Array.isArray(_data["thuTucLoaiGiayTos"])) {
                this.thuTucLoaiGiayTos = [] as any;
                for (let item of _data["thuTucLoaiGiayTos"])
                    this.thuTucLoaiGiayTos!.push(ThuTucLoaiGiayToViewModel.fromJS(item));
            }
            if (Array.isArray(_data["thuTucDvhcs"])) {
                this.thuTucDvhcs = [] as any;
                for (let item of _data["thuTucDvhcs"])
                    this.thuTucDvhcs!.push(ThuTucDvhcViewModel.fromJS(item));
            }
            this.loaiBienDong = _data["loaiBienDong"];
        }
    }

    static fromJS(data: any): ThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maThuTuc"] = this.maThuTuc;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenVietTat"] = this.tenVietTat;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["mucDoThuTuc"] = this.mucDoThuTuc;
        data["idLinhVuc"] = this.idLinhVuc;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        if (Array.isArray(this.thuTucLoaiGiayTos)) {
            data["thuTucLoaiGiayTos"] = [];
            for (let item of this.thuTucLoaiGiayTos)
                data["thuTucLoaiGiayTos"].push(item.toJSON());
        }
        if (Array.isArray(this.thuTucDvhcs)) {
            data["thuTucDvhcs"] = [];
            for (let item of this.thuTucDvhcs)
                data["thuTucDvhcs"].push(item.toJSON());
        }
        data["loaiBienDong"] = this.loaiBienDong;
        return data; 
    }
}

export interface IThuTucViewModel {
    id?: string | undefined;
    maThuTuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenVietTat?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
    mucDoThuTuc?: number;
    idLinhVuc?: string | undefined;
    thoiGianThucHien?: number | undefined;
    thuTucLoaiGiayTos?: ThuTucLoaiGiayToViewModel[] | undefined;
    thuTucDvhcs?: ThuTucDvhcViewModel[] | undefined;
    loaiBienDong?: string | undefined;
}

export class ThuTucLoaiGiayToViewModel implements IThuTucLoaiGiayToViewModel {
    id?: string | undefined;
    idThuTuc?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinh?: number;
    soBanSao?: number;
    tenLoaiGiayTo?: string | undefined;
    stt?: number;

    constructor(data?: IThuTucLoaiGiayToViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idThuTuc = _data["idThuTuc"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.soBanChinh = _data["soBanChinh"];
            this.soBanSao = _data["soBanSao"];
            this.tenLoaiGiayTo = _data["tenLoaiGiayTo"];
            this.stt = _data["stt"];
        }
    }

    static fromJS(data: any): ThuTucLoaiGiayToViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTucLoaiGiayToViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idThuTuc"] = this.idThuTuc;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["soBanChinh"] = this.soBanChinh;
        data["soBanSao"] = this.soBanSao;
        data["tenLoaiGiayTo"] = this.tenLoaiGiayTo;
        data["stt"] = this.stt;
        return data; 
    }
}

export interface IThuTucLoaiGiayToViewModel {
    id?: string | undefined;
    idThuTuc?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinh?: number;
    soBanSao?: number;
    tenLoaiGiayTo?: string | undefined;
    stt?: number;
}

export class ThuTucDvhcViewModel implements IThuTucDvhcViewModel {
    id?: string | undefined;
    idThuTuc?: string | undefined;
    idDvhc?: string | undefined;
    maTinh?: string | undefined;

    constructor(data?: IThuTucDvhcViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idThuTuc = _data["idThuTuc"];
            this.idDvhc = _data["idDvhc"];
            this.maTinh = _data["maTinh"];
        }
    }

    static fromJS(data: any): ThuTucDvhcViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTucDvhcViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idThuTuc"] = this.idThuTuc;
        data["idDvhc"] = this.idDvhc;
        data["maTinh"] = this.maTinh;
        return data; 
    }
}

export interface IThuTucDvhcViewModel {
    id?: string | undefined;
    idThuTuc?: string | undefined;
    idDvhc?: string | undefined;
    maTinh?: string | undefined;
}

export class ApiResultOfIListOfDVCPhongBanViewModel implements IApiResultOfIListOfDVCPhongBanViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCPhongBanViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCPhongBanViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCPhongBanViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCPhongBanViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCPhongBanViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCPhongBanViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCPhongBanViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCPhongBanViewModel implements IDVCPhongBanViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idDonViDVC?: string | undefined;
    idPhongBanDVC?: string | undefined;

    constructor(data?: IDVCPhongBanViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ma = _data["ma"];
            this.ten = _data["ten"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            this.idDonViDVC = _data["idDonViDVC"];
            this.idPhongBanDVC = _data["idPhongBanDVC"];
        }
    }

    static fromJS(data: any): DVCPhongBanViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCPhongBanViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ma"] = this.ma;
        data["ten"] = this.ten;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        data["idDonViDVC"] = this.idDonViDVC;
        data["idPhongBanDVC"] = this.idPhongBanDVC;
        return data; 
    }
}

export interface IDVCPhongBanViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    idDonViDVC?: string | undefined;
    idPhongBanDVC?: string | undefined;
}

export class ApiResultOfIListOfDVCNguoiNhanViewModel implements IApiResultOfIListOfDVCNguoiNhanViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCNguoiNhanViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCNguoiNhanViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCNguoiNhanViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCNguoiNhanViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCNguoiNhanViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCNguoiNhanViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCNguoiNhanViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCNguoiNhanViewModel implements IDVCNguoiNhanViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    idUserDVC?: string | undefined;
    idPhongBanDVC?: string | undefined;
    maHuyen?: string | undefined;
    maTinh?: string | undefined;
    maChucNang?: string | undefined;
    tenChucNang?: string | undefined;
    isMacDinh?: boolean;

    constructor(data?: IDVCNguoiNhanViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ma = _data["ma"];
            this.ten = _data["ten"];
            this.idUserDVC = _data["idUserDVC"];
            this.idPhongBanDVC = _data["idPhongBanDVC"];
            this.maHuyen = _data["maHuyen"];
            this.maTinh = _data["maTinh"];
            this.maChucNang = _data["maChucNang"];
            this.tenChucNang = _data["tenChucNang"];
            this.isMacDinh = _data["isMacDinh"];
        }
    }

    static fromJS(data: any): DVCNguoiNhanViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCNguoiNhanViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ma"] = this.ma;
        data["ten"] = this.ten;
        data["idUserDVC"] = this.idUserDVC;
        data["idPhongBanDVC"] = this.idPhongBanDVC;
        data["maHuyen"] = this.maHuyen;
        data["maTinh"] = this.maTinh;
        data["maChucNang"] = this.maChucNang;
        data["tenChucNang"] = this.tenChucNang;
        data["isMacDinh"] = this.isMacDinh;
        return data; 
    }
}

export interface IDVCNguoiNhanViewModel {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    idUserDVC?: string | undefined;
    idPhongBanDVC?: string | undefined;
    maHuyen?: string | undefined;
    maTinh?: string | undefined;
    maChucNang?: string | undefined;
    tenChucNang?: string | undefined;
    isMacDinh?: boolean;
}

export class ApiResultOfGetDvcMapBuocQuyTrinhDto implements IApiResultOfGetDvcMapBuocQuyTrinhDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDvcMapBuocQuyTrinhDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfGetDvcMapBuocQuyTrinhDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? GetDvcMapBuocQuyTrinhDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfGetDvcMapBuocQuyTrinhDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfGetDvcMapBuocQuyTrinhDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfGetDvcMapBuocQuyTrinhDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDvcMapBuocQuyTrinhDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetDvcMapBuocQuyTrinhDto implements IGetDvcMapBuocQuyTrinhDto {
    idLinhVucDvc?: string | undefined;
    idThuTucDvc?: string | undefined;
    idThuTucLpm?: string | undefined;
    idQuyTrinhLpm?: string | undefined;
    buocQuyTrinhLpm?: Buoc[] | undefined;
    buocXuLyDvc?: BuocXuLyDvc[] | undefined;
    dataMap?: MapDanhMucDvc | undefined;

    constructor(data?: IGetDvcMapBuocQuyTrinhDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLinhVucDvc = _data["idLinhVucDvc"];
            this.idThuTucDvc = _data["idThuTucDvc"];
            this.idThuTucLpm = _data["idThuTucLpm"];
            this.idQuyTrinhLpm = _data["idQuyTrinhLpm"];
            if (Array.isArray(_data["buocQuyTrinhLpm"])) {
                this.buocQuyTrinhLpm = [] as any;
                for (let item of _data["buocQuyTrinhLpm"])
                    this.buocQuyTrinhLpm!.push(Buoc.fromJS(item));
            }
            if (Array.isArray(_data["buocXuLyDvc"])) {
                this.buocXuLyDvc = [] as any;
                for (let item of _data["buocXuLyDvc"])
                    this.buocXuLyDvc!.push(BuocXuLyDvc.fromJS(item));
            }
            this.dataMap = _data["dataMap"] ? MapDanhMucDvc.fromJS(_data["dataMap"]) : <any>undefined;
        }
    }

    static fromJS(data: any): GetDvcMapBuocQuyTrinhDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetDvcMapBuocQuyTrinhDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVucDvc"] = this.idLinhVucDvc;
        data["idThuTucDvc"] = this.idThuTucDvc;
        data["idThuTucLpm"] = this.idThuTucLpm;
        data["idQuyTrinhLpm"] = this.idQuyTrinhLpm;
        if (Array.isArray(this.buocQuyTrinhLpm)) {
            data["buocQuyTrinhLpm"] = [];
            for (let item of this.buocQuyTrinhLpm)
                data["buocQuyTrinhLpm"].push(item.toJSON());
        }
        if (Array.isArray(this.buocXuLyDvc)) {
            data["buocXuLyDvc"] = [];
            for (let item of this.buocXuLyDvc)
                data["buocXuLyDvc"].push(item.toJSON());
        }
        data["dataMap"] = this.dataMap ? this.dataMap.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IGetDvcMapBuocQuyTrinhDto {
    idLinhVucDvc?: string | undefined;
    idThuTucDvc?: string | undefined;
    idThuTucLpm?: string | undefined;
    idQuyTrinhLpm?: string | undefined;
    buocQuyTrinhLpm?: Buoc[] | undefined;
    buocXuLyDvc?: BuocXuLyDvc[] | undefined;
    dataMap?: MapDanhMucDvc | undefined;
}

export class BuocXuLyDvc implements IBuocXuLyDvc {
    duongDiID?: number | undefined;
    tenDuongDi?: string | undefined;
    chucNangHT?: string | undefined;
    tenChucNangHT?: string | undefined;
    tenChucNangKT?: string | undefined;
    chucNangKT?: string | undefined;
    soNgayGiaiQuyet?: string | undefined;
    canhBao?: boolean | undefined;
    danhMucTinhTrangID?: number | undefined;
    loaiXuLy?: number | undefined;
    thutucid?: string | undefined;

    constructor(data?: IBuocXuLyDvc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.duongDiID = _data["duongDiID"];
            this.tenDuongDi = _data["tenDuongDi"];
            this.chucNangHT = _data["chucNangHT"];
            this.tenChucNangHT = _data["tenChucNangHT"];
            this.tenChucNangKT = _data["tenChucNangKT"];
            this.chucNangKT = _data["chucNangKT"];
            this.soNgayGiaiQuyet = _data["soNgayGiaiQuyet"];
            this.canhBao = _data["canhBao"];
            this.danhMucTinhTrangID = _data["danhMucTinhTrangID"];
            this.loaiXuLy = _data["loaiXuLy"];
            this.thutucid = _data["thutucid"];
        }
    }

    static fromJS(data: any): BuocXuLyDvc {
        data = typeof data === 'object' ? data : {};
        let result = new BuocXuLyDvc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["duongDiID"] = this.duongDiID;
        data["tenDuongDi"] = this.tenDuongDi;
        data["chucNangHT"] = this.chucNangHT;
        data["tenChucNangHT"] = this.tenChucNangHT;
        data["tenChucNangKT"] = this.tenChucNangKT;
        data["chucNangKT"] = this.chucNangKT;
        data["soNgayGiaiQuyet"] = this.soNgayGiaiQuyet;
        data["canhBao"] = this.canhBao;
        data["danhMucTinhTrangID"] = this.danhMucTinhTrangID;
        data["loaiXuLy"] = this.loaiXuLy;
        data["thutucid"] = this.thutucid;
        return data; 
    }
}

export interface IBuocXuLyDvc {
    duongDiID?: number | undefined;
    tenDuongDi?: string | undefined;
    chucNangHT?: string | undefined;
    tenChucNangHT?: string | undefined;
    tenChucNangKT?: string | undefined;
    chucNangKT?: string | undefined;
    soNgayGiaiQuyet?: string | undefined;
    canhBao?: boolean | undefined;
    danhMucTinhTrangID?: number | undefined;
    loaiXuLy?: number | undefined;
    thutucid?: string | undefined;
}

export class MapDanhMucDvc extends BaseEntityOfInteger implements IMapDanhMucDvc {
    loaiDanhMuc?: string | undefined;
    mapGiaTri?: string | undefined;
    apiDvc?: string | undefined;
    thamChieuLpm?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;

    constructor(data?: IMapDanhMucDvc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.loaiDanhMuc = _data["loaiDanhMuc"];
            this.mapGiaTri = _data["mapGiaTri"];
            this.apiDvc = _data["apiDvc"];
            this.thamChieuLpm = _data["thamChieuLpm"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
        }
    }

    static fromJS(data: any): MapDanhMucDvc {
        data = typeof data === 'object' ? data : {};
        let result = new MapDanhMucDvc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["loaiDanhMuc"] = this.loaiDanhMuc;
        data["mapGiaTri"] = this.mapGiaTri;
        data["apiDvc"] = this.apiDvc;
        data["thamChieuLpm"] = this.thamChieuLpm;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        super.toJSON(data);
        return data; 
    }
}

export interface IMapDanhMucDvc extends IBaseEntityOfInteger {
    loaiDanhMuc?: string | undefined;
    mapGiaTri?: string | undefined;
    apiDvc?: string | undefined;
    thamChieuLpm?: string | undefined;
    moTa?: string | undefined;
    maTinh?: string | undefined;
}

export class GetDvcMapBuocQuyTrinhQuery implements IGetDvcMapBuocQuyTrinhQuery {
    idLinhVucDvc?: string | undefined;
    idThuTucDvc?: string | undefined;
    idThuTucLpm?: string | undefined;
    idQuyTrinhLpm?: string | undefined;

    constructor(data?: IGetDvcMapBuocQuyTrinhQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLinhVucDvc = _data["idLinhVucDvc"];
            this.idThuTucDvc = _data["idThuTucDvc"];
            this.idThuTucLpm = _data["idThuTucLpm"];
            this.idQuyTrinhLpm = _data["idQuyTrinhLpm"];
        }
    }

    static fromJS(data: any): GetDvcMapBuocQuyTrinhQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetDvcMapBuocQuyTrinhQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVucDvc"] = this.idLinhVucDvc;
        data["idThuTucDvc"] = this.idThuTucDvc;
        data["idThuTucLpm"] = this.idThuTucLpm;
        data["idQuyTrinhLpm"] = this.idQuyTrinhLpm;
        return data; 
    }
}

export interface IGetDvcMapBuocQuyTrinhQuery {
    idLinhVucDvc?: string | undefined;
    idThuTucDvc?: string | undefined;
    idThuTucLpm?: string | undefined;
    idQuyTrinhLpm?: string | undefined;
}

export class ApiResultOfIListOfDvcDonViDto implements IApiResultOfIListOfDvcDonViDto {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcDonViDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDvcDonViDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DvcDonViDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDvcDonViDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDvcDonViDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDvcDonViDto {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcDonViDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DvcDonViDto implements IDvcDonViDto {
    id?: string | undefined;
    name?: string | undefined;
    code?: string | undefined;
    parent?: string | undefined;
    children?: DvcDonViDto[] | undefined;

    constructor(data?: IDvcDonViDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.name = _data["name"];
            this.code = _data["code"];
            this.parent = _data["parent"];
            if (Array.isArray(_data["children"])) {
                this.children = [] as any;
                for (let item of _data["children"])
                    this.children!.push(DvcDonViDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DvcDonViDto {
        data = typeof data === 'object' ? data : {};
        let result = new DvcDonViDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["name"] = this.name;
        data["code"] = this.code;
        data["parent"] = this.parent;
        if (Array.isArray(this.children)) {
            data["children"] = [];
            for (let item of this.children)
                data["children"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDvcDonViDto {
    id?: string | undefined;
    name?: string | undefined;
    code?: string | undefined;
    parent?: string | undefined;
    children?: DvcDonViDto[] | undefined;
}

export class ApiResultOfIListOfDVCDataDanhMuc implements IApiResultOfIListOfDVCDataDanhMuc {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCDataDanhMuc[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCDataDanhMuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCDataDanhMuc.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCDataDanhMuc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCDataDanhMuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCDataDanhMuc {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCDataDanhMuc[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCDataDanhMuc implements IDVCDataDanhMuc {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;

    constructor(data?: IDVCDataDanhMuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ma = _data["ma"];
            this.ten = _data["ten"];
            this.moTa = _data["moTa"];
        }
    }

    static fromJS(data: any): DVCDataDanhMuc {
        data = typeof data === 'object' ? data : {};
        let result = new DVCDataDanhMuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ma"] = this.ma;
        data["ten"] = this.ten;
        data["moTa"] = this.moTa;
        return data; 
    }
}

export interface IDVCDataDanhMuc {
    id?: string | undefined;
    ma?: string | undefined;
    ten?: string | undefined;
    moTa?: string | undefined;
}

export class ApiResultOfIListOfDvcThongTinBuocChiTietDto implements IApiResultOfIListOfDvcThongTinBuocChiTietDto {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcThongTinBuocChiTietDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDvcThongTinBuocChiTietDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DvcThongTinBuocChiTietDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDvcThongTinBuocChiTietDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDvcThongTinBuocChiTietDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDvcThongTinBuocChiTietDto {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcThongTinBuocChiTietDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DvcThongTinBuocChiTietDto extends DVCDataDanhMuc implements IDvcThongTinBuocChiTietDto {
    maDonViXuLy?: string | undefined;

    constructor(data?: IDvcThongTinBuocChiTietDto) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.maDonViXuLy = _data["maDonViXuLy"];
        }
    }

    static fromJS(data: any): DvcThongTinBuocChiTietDto {
        data = typeof data === 'object' ? data : {};
        let result = new DvcThongTinBuocChiTietDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maDonViXuLy"] = this.maDonViXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface IDvcThongTinBuocChiTietDto extends IDVCDataDanhMuc {
    maDonViXuLy?: string | undefined;
}

export class ApiResultOfScopeDvhcListVm implements IApiResultOfScopeDvhcListVm {
    isError?: boolean;
    message?: string | undefined;
    data?: ScopeDvhcListVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfScopeDvhcListVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? ScopeDvhcListVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfScopeDvhcListVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfScopeDvhcListVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfScopeDvhcListVm {
    isError?: boolean;
    message?: string | undefined;
    data?: ScopeDvhcListVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ScopeDvhcListVm implements IScopeDvhcListVm {
    scopeDvhcList?: ScopeDvhcVm[] | undefined;

    constructor(data?: IScopeDvhcListVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["scopeDvhcList"])) {
                this.scopeDvhcList = [] as any;
                for (let item of _data["scopeDvhcList"])
                    this.scopeDvhcList!.push(ScopeDvhcVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ScopeDvhcListVm {
        data = typeof data === 'object' ? data : {};
        let result = new ScopeDvhcListVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.scopeDvhcList)) {
            data["scopeDvhcList"] = [];
            for (let item of this.scopeDvhcList)
                data["scopeDvhcList"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IScopeDvhcListVm {
    scopeDvhcList?: ScopeDvhcVm[] | undefined;
}

export class ScopeDvhcVm implements IScopeDvhcVm {
    scopeId?: string | undefined;
    scopeName?: string | undefined;
    scopeCode?: string | undefined;
    scopeLevel?: number;
    parentScopeId?: string | undefined;
    childScopes?: ScopeDvhcVm[] | undefined;

    constructor(data?: IScopeDvhcVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.scopeId = _data["scopeId"];
            this.scopeName = _data["scopeName"];
            this.scopeCode = _data["scopeCode"];
            this.scopeLevel = _data["scopeLevel"];
            this.parentScopeId = _data["parentScopeId"];
            if (Array.isArray(_data["childScopes"])) {
                this.childScopes = [] as any;
                for (let item of _data["childScopes"])
                    this.childScopes!.push(ScopeDvhcVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ScopeDvhcVm {
        data = typeof data === 'object' ? data : {};
        let result = new ScopeDvhcVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["scopeId"] = this.scopeId;
        data["scopeName"] = this.scopeName;
        data["scopeCode"] = this.scopeCode;
        data["scopeLevel"] = this.scopeLevel;
        data["parentScopeId"] = this.parentScopeId;
        if (Array.isArray(this.childScopes)) {
            data["childScopes"] = [];
            for (let item of this.childScopes)
                data["childScopes"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IScopeDvhcVm {
    scopeId?: string | undefined;
    scopeName?: string | undefined;
    scopeCode?: string | undefined;
    scopeLevel?: number;
    parentScopeId?: string | undefined;
    childScopes?: ScopeDvhcVm[] | undefined;
}

export class ApiResultOfIListOfCommonObjectViewModel implements IApiResultOfIListOfCommonObjectViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CommonObjectViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfCommonObjectViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(CommonObjectViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfCommonObjectViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfCommonObjectViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfCommonObjectViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CommonObjectViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CommonObjectViewModel implements ICommonObjectViewModel {
    id?: string | undefined;
    code?: string | undefined;
    value?: string | undefined;

    constructor(data?: ICommonObjectViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.code = _data["code"];
            this.value = _data["value"];
        }
    }

    static fromJS(data: any): CommonObjectViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new CommonObjectViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["code"] = this.code;
        data["value"] = this.value;
        return data; 
    }
}

export interface ICommonObjectViewModel {
    id?: string | undefined;
    code?: string | undefined;
    value?: string | undefined;
}

export class ApiResultOfIListOfKhuVucViewModel implements IApiResultOfIListOfKhuVucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: KhuVucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfKhuVucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(KhuVucViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfKhuVucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfKhuVucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfKhuVucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: KhuVucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class KhuVucViewModel implements IKhuVucViewModel {
    id?: string | undefined;
    makhuvuc?: string | undefined;
    tenkhuvuc?: string | undefined;
    idtinh?: string | undefined;

    constructor(data?: IKhuVucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.makhuvuc = _data["makhuvuc"];
            this.tenkhuvuc = _data["tenkhuvuc"];
            this.idtinh = _data["idtinh"];
        }
    }

    static fromJS(data: any): KhuVucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new KhuVucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["makhuvuc"] = this.makhuvuc;
        data["tenkhuvuc"] = this.tenkhuvuc;
        data["idtinh"] = this.idtinh;
        return data; 
    }
}

export interface IKhuVucViewModel {
    id?: string | undefined;
    makhuvuc?: string | undefined;
    tenkhuvuc?: string | undefined;
    idtinh?: string | undefined;
}

export class ApiResultOfIListOfDuongViewModel implements IApiResultOfIListOfDuongViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DuongViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDuongViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DuongViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDuongViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDuongViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDuongViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DuongViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DuongViewModel implements IDuongViewModel {
    id?: string | undefined;
    maduong?: string | undefined;
    tenduong?: string | undefined;
    idtinh?: string | undefined;

    constructor(data?: IDuongViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maduong = _data["maduong"];
            this.tenduong = _data["tenduong"];
            this.idtinh = _data["idtinh"];
        }
    }

    static fromJS(data: any): DuongViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DuongViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maduong"] = this.maduong;
        data["tenduong"] = this.tenduong;
        data["idtinh"] = this.idtinh;
        return data; 
    }
}

export interface IDuongViewModel {
    id?: string | undefined;
    maduong?: string | undefined;
    tenduong?: string | undefined;
    idtinh?: string | undefined;
}

export class ApiResultOfIListOfDoanDuongViewModel implements IApiResultOfIListOfDoanDuongViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DoanDuongViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDoanDuongViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DoanDuongViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDoanDuongViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDoanDuongViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDoanDuongViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DoanDuongViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DoanDuongViewModel implements IDoanDuongViewModel {
    id?: string | undefined;
    madoanduong?: string | undefined;
    tendoanduong?: string | undefined;
    idtinh?: string | undefined;

    constructor(data?: IDoanDuongViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.madoanduong = _data["madoanduong"];
            this.tendoanduong = _data["tendoanduong"];
            this.idtinh = _data["idtinh"];
        }
    }

    static fromJS(data: any): DoanDuongViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DoanDuongViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["madoanduong"] = this.madoanduong;
        data["tendoanduong"] = this.tendoanduong;
        data["idtinh"] = this.idtinh;
        return data; 
    }
}

export interface IDoanDuongViewModel {
    id?: string | undefined;
    madoanduong?: string | undefined;
    tendoanduong?: string | undefined;
    idtinh?: string | undefined;
}

export class ApiResultOfIListOfViTriViewModel implements IApiResultOfIListOfViTriViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: ViTriViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfViTriViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(ViTriViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfViTriViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfViTriViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfViTriViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: ViTriViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ViTriViewModel implements IViTriViewModel {
    id?: string | undefined;
    mavitri?: string | undefined;
    tenvitri?: string | undefined;
    idtinh?: string | undefined;

    constructor(data?: IViTriViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.mavitri = _data["mavitri"];
            this.tenvitri = _data["tenvitri"];
            this.idtinh = _data["idtinh"];
        }
    }

    static fromJS(data: any): ViTriViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ViTriViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["mavitri"] = this.mavitri;
        data["tenvitri"] = this.tenvitri;
        data["idtinh"] = this.idtinh;
        return data; 
    }
}

export interface IViTriViewModel {
    id?: string | undefined;
    mavitri?: string | undefined;
    tenvitri?: string | undefined;
    idtinh?: string | undefined;
}

export class ApiResultOfIListOfCapNhaViewModel implements IApiResultOfIListOfCapNhaViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CapNhaViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfCapNhaViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(CapNhaViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfCapNhaViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfCapNhaViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfCapNhaViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CapNhaViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CapNhaViewModel implements ICapNhaViewModel {
    id?: string | undefined;
    macapnha?: string | undefined;
    tencapnha?: string | undefined;
    idtinh?: string | undefined;

    constructor(data?: ICapNhaViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.macapnha = _data["macapnha"];
            this.tencapnha = _data["tencapnha"];
            this.idtinh = _data["idtinh"];
        }
    }

    static fromJS(data: any): CapNhaViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhaViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["macapnha"] = this.macapnha;
        data["tencapnha"] = this.tencapnha;
        data["idtinh"] = this.idtinh;
        return data; 
    }
}

export interface ICapNhaViewModel {
    id?: string | undefined;
    macapnha?: string | undefined;
    tencapnha?: string | undefined;
    idtinh?: string | undefined;
}

export class ApiResultOfIListOfLoaiNhaViewModel implements IApiResultOfIListOfLoaiNhaViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiNhaViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLoaiNhaViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LoaiNhaViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLoaiNhaViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLoaiNhaViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLoaiNhaViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiNhaViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LoaiNhaViewModel implements ILoaiNhaViewModel {
    id?: string | undefined;
    maloainha?: string | undefined;
    tenloainha?: string | undefined;
    idtinh?: string | undefined;

    constructor(data?: ILoaiNhaViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maloainha = _data["maloainha"];
            this.tenloainha = _data["tenloainha"];
            this.idtinh = _data["idtinh"];
        }
    }

    static fromJS(data: any): LoaiNhaViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiNhaViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maloainha"] = this.maloainha;
        data["tenloainha"] = this.tenloainha;
        data["idtinh"] = this.idtinh;
        return data; 
    }
}

export interface ILoaiNhaViewModel {
    id?: string | undefined;
    maloainha?: string | undefined;
    tenloainha?: string | undefined;
    idtinh?: string | undefined;
}

export class ApiResultOfTiepNhanHoSoTrucTiepVm implements IApiResultOfTiepNhanHoSoTrucTiepVm {
    isError?: boolean;
    message?: string | undefined;
    data?: TiepNhanHoSoTrucTiepVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfTiepNhanHoSoTrucTiepVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? TiepNhanHoSoTrucTiepVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfTiepNhanHoSoTrucTiepVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfTiepNhanHoSoTrucTiepVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfTiepNhanHoSoTrucTiepVm {
    isError?: boolean;
    message?: string | undefined;
    data?: TiepNhanHoSoTrucTiepVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class TiepNhanHoSoTrucTiepVm implements ITiepNhanHoSoTrucTiepVm {
    id?: string | undefined;
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    danhSachKeyLuuFile?: FileDinhKemVm[] | undefined;
    fileBuocXuLys?: FileBuocXuLyVm[] | undefined;

    constructor(data?: ITiepNhanHoSoTrucTiepVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.soBienNhan = _data["soBienNhan"];
            this.maHoSo = _data["maHoSo"];
            if (Array.isArray(_data["danhSachKeyLuuFile"])) {
                this.danhSachKeyLuuFile = [] as any;
                for (let item of _data["danhSachKeyLuuFile"])
                    this.danhSachKeyLuuFile!.push(FileDinhKemVm.fromJS(item));
            }
            if (Array.isArray(_data["fileBuocXuLys"])) {
                this.fileBuocXuLys = [] as any;
                for (let item of _data["fileBuocXuLys"])
                    this.fileBuocXuLys!.push(FileBuocXuLyVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TiepNhanHoSoTrucTiepVm {
        data = typeof data === 'object' ? data : {};
        let result = new TiepNhanHoSoTrucTiepVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["soBienNhan"] = this.soBienNhan;
        data["maHoSo"] = this.maHoSo;
        if (Array.isArray(this.danhSachKeyLuuFile)) {
            data["danhSachKeyLuuFile"] = [];
            for (let item of this.danhSachKeyLuuFile)
                data["danhSachKeyLuuFile"].push(item.toJSON());
        }
        if (Array.isArray(this.fileBuocXuLys)) {
            data["fileBuocXuLys"] = [];
            for (let item of this.fileBuocXuLys)
                data["fileBuocXuLys"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ITiepNhanHoSoTrucTiepVm {
    id?: string | undefined;
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    danhSachKeyLuuFile?: FileDinhKemVm[] | undefined;
    fileBuocXuLys?: FileBuocXuLyVm[] | undefined;
}

export class TiepNhanHoSoTrucTiepCommand implements ITiepNhanHoSoTrucTiepCommand {
    idDVHC?: string | undefined;
    idLoaiHoSo?: number;
    maHoSo?: string | undefined;
    isTuSinhMaHoSo?: boolean;
    idQuyTrinh?: string | undefined;
    moTa?: string | undefined;
    giaTriCauHinh?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    dienThoai?: string | undefined;
    diaChi?: string | undefined;
    email?: string | undefined;
    ngayHenTra?: Date;
    ngayNhan?: Date;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    yKienXuLyCommand?: ThemYKienXuLyCommand | undefined;
    hoSoLoaiGiayToVms?: HoSoLoaiGiayToVm[] | undefined;
    hoSoDoiTuongKhaiThacVms?: HoSoDoiTuongKhaiThacVm[] | undefined;

    constructor(data?: ITiepNhanHoSoTrucTiepCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDVHC = _data["idDVHC"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.maHoSo = _data["maHoSo"];
            this.isTuSinhMaHoSo = _data["isTuSinhMaHoSo"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.moTa = _data["moTa"];
            this.giaTriCauHinh = _data["giaTriCauHinh"];
            this.nguoiNop = _data["nguoiNop"];
            this.chuHoSo = _data["chuHoSo"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.dienThoai = _data["dienThoai"];
            this.diaChi = _data["diaChi"];
            this.email = _data["email"];
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.idNguoiThuLy = _data["idNguoiThuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.yKienXuLyCommand = _data["yKienXuLyCommand"] ? ThemYKienXuLyCommand.fromJS(_data["yKienXuLyCommand"]) : <any>undefined;
            if (Array.isArray(_data["hoSoLoaiGiayToVms"])) {
                this.hoSoLoaiGiayToVms = [] as any;
                for (let item of _data["hoSoLoaiGiayToVms"])
                    this.hoSoLoaiGiayToVms!.push(HoSoLoaiGiayToVm.fromJS(item));
            }
            if (Array.isArray(_data["hoSoDoiTuongKhaiThacVms"])) {
                this.hoSoDoiTuongKhaiThacVms = [] as any;
                for (let item of _data["hoSoDoiTuongKhaiThacVms"])
                    this.hoSoDoiTuongKhaiThacVms!.push(HoSoDoiTuongKhaiThacVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): TiepNhanHoSoTrucTiepCommand {
        data = typeof data === 'object' ? data : {};
        let result = new TiepNhanHoSoTrucTiepCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDVHC"] = this.idDVHC;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["maHoSo"] = this.maHoSo;
        data["isTuSinhMaHoSo"] = this.isTuSinhMaHoSo;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["moTa"] = this.moTa;
        data["giaTriCauHinh"] = this.giaTriCauHinh;
        data["nguoiNop"] = this.nguoiNop;
        data["chuHoSo"] = this.chuHoSo;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["dienThoai"] = this.dienThoai;
        data["diaChi"] = this.diaChi;
        data["email"] = this.email;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["idNguoiThuLy"] = this.idNguoiThuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["yKienXuLyCommand"] = this.yKienXuLyCommand ? this.yKienXuLyCommand.toJSON() : <any>undefined;
        if (Array.isArray(this.hoSoLoaiGiayToVms)) {
            data["hoSoLoaiGiayToVms"] = [];
            for (let item of this.hoSoLoaiGiayToVms)
                data["hoSoLoaiGiayToVms"].push(item.toJSON());
        }
        if (Array.isArray(this.hoSoDoiTuongKhaiThacVms)) {
            data["hoSoDoiTuongKhaiThacVms"] = [];
            for (let item of this.hoSoDoiTuongKhaiThacVms)
                data["hoSoDoiTuongKhaiThacVms"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ITiepNhanHoSoTrucTiepCommand {
    idDVHC?: string | undefined;
    idLoaiHoSo?: number;
    maHoSo?: string | undefined;
    isTuSinhMaHoSo?: boolean;
    idQuyTrinh?: string | undefined;
    moTa?: string | undefined;
    giaTriCauHinh?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    dienThoai?: string | undefined;
    diaChi?: string | undefined;
    email?: string | undefined;
    ngayHenTra?: Date;
    ngayNhan?: Date;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    yKienXuLyCommand?: ThemYKienXuLyCommand | undefined;
    hoSoLoaiGiayToVms?: HoSoLoaiGiayToVm[] | undefined;
    hoSoDoiTuongKhaiThacVms?: HoSoDoiTuongKhaiThacVm[] | undefined;
}

export class HoSoLoaiGiayToVm implements IHoSoLoaiGiayToVm {
    hoSoLoaiGiayToId?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinhHienCo?: number;
    soBanSaoHienCo?: number;
    ghiChu?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm[] | undefined;

    constructor(data?: IHoSoLoaiGiayToVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoSoLoaiGiayToId = _data["hoSoLoaiGiayToId"];
            this.idLoaiGiayTo = _data["idLoaiGiayTo"];
            this.soBanChinhHienCo = _data["soBanChinhHienCo"];
            this.soBanSaoHienCo = _data["soBanSaoHienCo"];
            this.ghiChu = _data["ghiChu"];
            if (Array.isArray(_data["fileDinhKemVms"])) {
                this.fileDinhKemVms = [] as any;
                for (let item of _data["fileDinhKemVms"])
                    this.fileDinhKemVms!.push(FileDinhKemVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): HoSoLoaiGiayToVm {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoLoaiGiayToVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoSoLoaiGiayToId"] = this.hoSoLoaiGiayToId;
        data["idLoaiGiayTo"] = this.idLoaiGiayTo;
        data["soBanChinhHienCo"] = this.soBanChinhHienCo;
        data["soBanSaoHienCo"] = this.soBanSaoHienCo;
        data["ghiChu"] = this.ghiChu;
        if (Array.isArray(this.fileDinhKemVms)) {
            data["fileDinhKemVms"] = [];
            for (let item of this.fileDinhKemVms)
                data["fileDinhKemVms"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IHoSoLoaiGiayToVm {
    hoSoLoaiGiayToId?: string | undefined;
    idLoaiGiayTo?: number;
    soBanChinhHienCo?: number;
    soBanSaoHienCo?: number;
    ghiChu?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm[] | undefined;
}

export class HoSoDoiTuongKhaiThacVm implements IHoSoDoiTuongKhaiThacVm {
    idHoSo?: string | undefined;
    idDoiTuongKhaiThac?: string | undefined;
    nhanSMS?: NhanThongBao;
    nhanEmail?: NhanThongBao;

    constructor(data?: IHoSoDoiTuongKhaiThacVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idDoiTuongKhaiThac = _data["idDoiTuongKhaiThac"];
            this.nhanSMS = _data["nhanSMS"];
            this.nhanEmail = _data["nhanEmail"];
        }
    }

    static fromJS(data: any): HoSoDoiTuongKhaiThacVm {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoDoiTuongKhaiThacVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idDoiTuongKhaiThac"] = this.idDoiTuongKhaiThac;
        data["nhanSMS"] = this.nhanSMS;
        data["nhanEmail"] = this.nhanEmail;
        return data; 
    }
}

export interface IHoSoDoiTuongKhaiThacVm {
    idHoSo?: string | undefined;
    idDoiTuongKhaiThac?: string | undefined;
    nhanSMS?: NhanThongBao;
    nhanEmail?: NhanThongBao;
}

export class ChinhSuaHoSoTrucTiepCommand extends TiepNhanHoSoTrucTiepCommand implements IChinhSuaHoSoTrucTiepCommand {
    id?: string | undefined;

    constructor(data?: IChinhSuaHoSoTrucTiepCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
        }
    }

    static fromJS(data: any): ChinhSuaHoSoTrucTiepCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChinhSuaHoSoTrucTiepCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        super.toJSON(data);
        return data; 
    }
}

export interface IChinhSuaHoSoTrucTiepCommand extends ITiepNhanHoSoTrucTiepCommand {
    id?: string | undefined;
}

export class ApiResultOfHoSoByIdDto implements IApiResultOfHoSoByIdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoByIdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfHoSoByIdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? HoSoByIdDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfHoSoByIdDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfHoSoByIdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfHoSoByIdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoByIdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class HoSoByIdDto implements IHoSoByIdDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idDVHCCha?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    idHoSoDVC?: string | undefined;
    giaTriCauHinh?: string | undefined;
    maTinh?: string | undefined;
    tenDVHC?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    tenThuTuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    dieuKienInGCN?: number | undefined;
    isHoSoIgateV2?: boolean | undefined;
    heThongDvc?: HeThongDvc;

    constructor(data?: IHoSoByIdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.idDVHCCha = _data["idDVHCCha"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idNguoiThuLy = _data["idNguoiThuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.idHoSoDVC = _data["idHoSoDVC"];
            this.giaTriCauHinh = _data["giaTriCauHinh"];
            this.maTinh = _data["maTinh"];
            this.tenDVHC = _data["tenDVHC"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
            this.dieuKienInGCN = _data["dieuKienInGCN"];
            this.isHoSoIgateV2 = _data["isHoSoIgateV2"];
            this.heThongDvc = _data["heThongDvc"];
        }
    }

    static fromJS(data: any): HoSoByIdDto {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoByIdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["idDVHCCha"] = this.idDVHCCha;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idNguoiThuLy"] = this.idNguoiThuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["idHoSoDVC"] = this.idHoSoDVC;
        data["giaTriCauHinh"] = this.giaTriCauHinh;
        data["maTinh"] = this.maTinh;
        data["tenDVHC"] = this.tenDVHC;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        data["dieuKienInGCN"] = this.dieuKienInGCN;
        data["isHoSoIgateV2"] = this.isHoSoIgateV2;
        data["heThongDvc"] = this.heThongDvc;
        return data; 
    }
}

export interface IHoSoByIdDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idDVHCCha?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    idHoSoDVC?: string | undefined;
    giaTriCauHinh?: string | undefined;
    maTinh?: string | undefined;
    tenDVHC?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    tenThuTuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    dieuKienInGCN?: number | undefined;
    isHoSoIgateV2?: boolean | undefined;
    heThongDvc?: HeThongDvc;
}

export class ApiResultOfHoSoChiTietByIdDto implements IApiResultOfHoSoChiTietByIdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoChiTietByIdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfHoSoChiTietByIdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? HoSoChiTietByIdDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfHoSoChiTietByIdDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfHoSoChiTietByIdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfHoSoChiTietByIdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoChiTietByIdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class HoSoChiTietByIdDto implements IHoSoChiTietByIdDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    mucDvhc?: number;
    idDVHCCha?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    maTinh?: string | undefined;
    tenTinh?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    tenLinhVuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    maThuTuc?: string | undefined;
    maQuyTrinh?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDvhc?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    mucDoThuTuc?: MucDoThuTuc;
    tenMucDoThuTuc?: string | undefined;
    ngayTao?: Date | undefined;
    giaTriCauHinh?: string | undefined;
    thoiGianThucHien?: string | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    nguoiTao?: string | undefined;
    thoiGianConLaiPhut?: number;
    thoiGianXuLyDenHienTai?: number;
    thoiGianQuaHan?: string | undefined;
    thoiGianXuLyHoSo?: string | undefined;
    thoiGianXuLyHoSoDenHienTai?: string | undefined;
    hanXuLyHoSo?: Date;
    heThongDvc?: HeThongDvc;

    constructor(data?: IHoSoChiTietByIdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.mucDvhc = _data["mucDvhc"];
            this.idDVHCCha = _data["idDVHCCha"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.nguonDuLieu = _data["nguonDuLieu"];
            this.maTinh = _data["maTinh"];
            this.tenTinh = _data["tenTinh"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.maThuTuc = _data["maThuTuc"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenDvhc = _data["tenDvhc"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.mucDoThuTuc = _data["mucDoThuTuc"];
            this.tenMucDoThuTuc = _data["tenMucDoThuTuc"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.giaTriCauHinh = _data["giaTriCauHinh"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
            this.nguoiTao = _data["nguoiTao"];
            this.thoiGianConLaiPhut = _data["thoiGianConLaiPhut"];
            this.thoiGianXuLyDenHienTai = _data["thoiGianXuLyDenHienTai"];
            this.thoiGianQuaHan = _data["thoiGianQuaHan"];
            this.thoiGianXuLyHoSo = _data["thoiGianXuLyHoSo"];
            this.thoiGianXuLyHoSoDenHienTai = _data["thoiGianXuLyHoSoDenHienTai"];
            this.hanXuLyHoSo = _data["hanXuLyHoSo"] ? new Date(_data["hanXuLyHoSo"].toString()) : <any>undefined;
            this.heThongDvc = _data["heThongDvc"];
        }
    }

    static fromJS(data: any): HoSoChiTietByIdDto {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoChiTietByIdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["mucDvhc"] = this.mucDvhc;
        data["idDVHCCha"] = this.idDVHCCha;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["nguonDuLieu"] = this.nguonDuLieu;
        data["maTinh"] = this.maTinh;
        data["tenTinh"] = this.tenTinh;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["maThuTuc"] = this.maThuTuc;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenDvhc"] = this.tenDvhc;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["mucDoThuTuc"] = this.mucDoThuTuc;
        data["tenMucDoThuTuc"] = this.tenMucDoThuTuc;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["giaTriCauHinh"] = this.giaTriCauHinh;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        data["nguoiTao"] = this.nguoiTao;
        data["thoiGianConLaiPhut"] = this.thoiGianConLaiPhut;
        data["thoiGianXuLyDenHienTai"] = this.thoiGianXuLyDenHienTai;
        data["thoiGianQuaHan"] = this.thoiGianQuaHan;
        data["thoiGianXuLyHoSo"] = this.thoiGianXuLyHoSo;
        data["thoiGianXuLyHoSoDenHienTai"] = this.thoiGianXuLyHoSoDenHienTai;
        data["hanXuLyHoSo"] = this.hanXuLyHoSo ? this.hanXuLyHoSo.toISOString() : <any>undefined;
        data["heThongDvc"] = this.heThongDvc;
        return data; 
    }
}

export interface IHoSoChiTietByIdDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    mucDvhc?: number;
    idDVHCCha?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    maTinh?: string | undefined;
    tenTinh?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    tenLinhVuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    maThuTuc?: string | undefined;
    maQuyTrinh?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDvhc?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    mucDoThuTuc?: MucDoThuTuc;
    tenMucDoThuTuc?: string | undefined;
    ngayTao?: Date | undefined;
    giaTriCauHinh?: string | undefined;
    thoiGianThucHien?: string | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    nguoiTao?: string | undefined;
    thoiGianConLaiPhut?: number;
    thoiGianXuLyDenHienTai?: number;
    thoiGianQuaHan?: string | undefined;
    thoiGianXuLyHoSo?: string | undefined;
    thoiGianXuLyHoSoDenHienTai?: string | undefined;
    hanXuLyHoSo?: Date;
    heThongDvc?: HeThongDvc;
}

export class ApiResultOfPagedListOfHoSoSearchingDto implements IApiResultOfPagedListOfHoSoSearchingDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfHoSoSearchingDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfHoSoSearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfHoSoSearchingDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfHoSoSearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfHoSoSearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfHoSoSearchingDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfHoSoSearchingDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfHoSoSearchingDto implements IPagedListOfHoSoSearchingDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: HoSoSearchingDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfHoSoSearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(HoSoSearchingDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfHoSoSearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfHoSoSearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfHoSoSearchingDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: HoSoSearchingDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class HoSoSearchingDto implements IHoSoSearchingDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    ngayHoanThanh?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    heThongDvc?: HeThongDvc;
    maTinh?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDvhc?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    ngayTao?: Date | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    tenQuanHuyen?: string | undefined;
    soTien?: number | undefined;
    buocXuLyHienTais?: GetBuocXuLyByIdHoSoDto[] | undefined;

    constructor(data?: IHoSoSearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.ngayHoanThanh = _data["ngayHoanThanh"] ? new Date(_data["ngayHoanThanh"].toString()) : <any>undefined;
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.nguonDuLieu = _data["nguonDuLieu"];
            this.heThongDvc = _data["heThongDvc"];
            this.maTinh = _data["maTinh"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenDvhc = _data["tenDvhc"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
            this.tenQuanHuyen = _data["tenQuanHuyen"];
            this.soTien = _data["soTien"];
            if (Array.isArray(_data["buocXuLyHienTais"])) {
                this.buocXuLyHienTais = [] as any;
                for (let item of _data["buocXuLyHienTais"])
                    this.buocXuLyHienTais!.push(GetBuocXuLyByIdHoSoDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): HoSoSearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoSearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["ngayHoanThanh"] = this.ngayHoanThanh ? this.ngayHoanThanh.toISOString() : <any>undefined;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["nguonDuLieu"] = this.nguonDuLieu;
        data["heThongDvc"] = this.heThongDvc;
        data["maTinh"] = this.maTinh;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenDvhc"] = this.tenDvhc;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        data["tenQuanHuyen"] = this.tenQuanHuyen;
        data["soTien"] = this.soTien;
        if (Array.isArray(this.buocXuLyHienTais)) {
            data["buocXuLyHienTais"] = [];
            for (let item of this.buocXuLyHienTais)
                data["buocXuLyHienTais"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IHoSoSearchingDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    ngayHoanThanh?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    heThongDvc?: HeThongDvc;
    maTinh?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDvhc?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    ngayTao?: Date | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    tenQuanHuyen?: string | undefined;
    soTien?: number | undefined;
    buocXuLyHienTais?: GetBuocXuLyByIdHoSoDto[] | undefined;
}

export class SearchHoSoListQuery extends PagingRequest implements ISearchHoSoListQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    hoSoSearchType?: HoSoSearchType;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    dsIdCanBoXuLy?: string[] | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    isGetDanhSachBuocQuaHan?: boolean | undefined;
    isTonKyTruoc?: boolean | undefined;
    isChiTietGiaoDich?: boolean | undefined;

    constructor(data?: ISearchHoSoListQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.hoSoSearchType = _data["hoSoSearchType"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            if (Array.isArray(_data["dsIdCanBoXuLy"])) {
                this.dsIdCanBoXuLy = [] as any;
                for (let item of _data["dsIdCanBoXuLy"])
                    this.dsIdCanBoXuLy!.push(item);
            }
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
            this.isGetDanhSachBuocQuaHan = _data["isGetDanhSachBuocQuaHan"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
            this.isChiTietGiaoDich = _data["isChiTietGiaoDich"];
        }
    }

    static fromJS(data: any): SearchHoSoListQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoListQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["hoSoSearchType"] = this.hoSoSearchType;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        if (Array.isArray(this.dsIdCanBoXuLy)) {
            data["dsIdCanBoXuLy"] = [];
            for (let item of this.dsIdCanBoXuLy)
                data["dsIdCanBoXuLy"].push(item);
        }
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        data["isGetDanhSachBuocQuaHan"] = this.isGetDanhSachBuocQuaHan;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        data["isChiTietGiaoDich"] = this.isChiTietGiaoDich;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoListQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    hoSoSearchType?: HoSoSearchType;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    dsIdCanBoXuLy?: string[] | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    isGetDanhSachBuocQuaHan?: boolean | undefined;
    isTonKyTruoc?: boolean | undefined;
    isChiTietGiaoDich?: boolean | undefined;
}

export enum HoSoSearchType {
    None = 0,
    TrongHan = 1,
    SapQuaHan = 2,
    QuaHan = 3,
    KetThuc = 4,
    QuaHanAll = 5,
    DaGiaiQuyet = 7,
    DangThuLy = 9,
    Huy = 10,
    TraDichVuCong = 11,
    HoanThanhTreHan = 12,
    DangXuLySapQuaHan = 13,
}

export class ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto implements IApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchHoSoCanXuLyListByUserDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchHoSoCanXuLyListByUserDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchHoSoCanXuLyListByUserDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchHoSoCanXuLyListByUserDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchHoSoCanXuLyListByUserDto implements IPagedListOfSearchHoSoCanXuLyListByUserDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchHoSoCanXuLyListByUserDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchHoSoCanXuLyListByUserDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchHoSoCanXuLyListByUserDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchHoSoCanXuLyListByUserDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchHoSoCanXuLyListByUserDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchHoSoCanXuLyListByUserDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchHoSoCanXuLyListByUserDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchHoSoCanXuLyListByUserDto implements ISearchHoSoCanXuLyListByUserDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    heThongDvc?: HeThongDvc;
    maTinh?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDvhc?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    idTrangThaiBuocXuLyHienTaiFirst?: string | undefined;
    tenBuocXuLyHienTaiFirst?: string | undefined;
    tenTrangThaiBuocXuLyHienTaiFirst?: string | undefined;
    ngayTao?: Date | undefined;
    thoiGianConLaiPhut?: number;
    thoiGianQuaHan?: string | undefined;
    hanXuLyHoSo?: Date;
    idBuoc?: string | undefined;
    trangThaiThamDinh?: TrangThaiThamDinh;
    trangThaiThamTra?: TrangThaiThamTra;
    buocXuLyHienTais?: SearchHoSoCanXuLyBuocXuLyHienTaiDto[] | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTheoNgayHenTra?: number | undefined;
    buocXuLys?: BuocXuLy[] | undefined;

    constructor(data?: ISearchHoSoCanXuLyListByUserDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.nguonDuLieu = _data["nguonDuLieu"];
            this.heThongDvc = _data["heThongDvc"];
            this.maTinh = _data["maTinh"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenDvhc = _data["tenDvhc"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
            this.idTrangThaiBuocXuLyHienTaiFirst = _data["idTrangThaiBuocXuLyHienTaiFirst"];
            this.tenBuocXuLyHienTaiFirst = _data["tenBuocXuLyHienTaiFirst"];
            this.tenTrangThaiBuocXuLyHienTaiFirst = _data["tenTrangThaiBuocXuLyHienTaiFirst"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.thoiGianConLaiPhut = _data["thoiGianConLaiPhut"];
            this.thoiGianQuaHan = _data["thoiGianQuaHan"];
            this.hanXuLyHoSo = _data["hanXuLyHoSo"] ? new Date(_data["hanXuLyHoSo"].toString()) : <any>undefined;
            this.idBuoc = _data["idBuoc"];
            this.trangThaiThamDinh = _data["trangThaiThamDinh"];
            this.trangThaiThamTra = _data["trangThaiThamTra"];
            if (Array.isArray(_data["buocXuLyHienTais"])) {
                this.buocXuLyHienTais = [] as any;
                for (let item of _data["buocXuLyHienTais"])
                    this.buocXuLyHienTais!.push(SearchHoSoCanXuLyBuocXuLyHienTaiDto.fromJS(item));
            }
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.thoiGianThucHienTheoNgayHenTra = _data["thoiGianThucHienTheoNgayHenTra"];
            if (Array.isArray(_data["buocXuLys"])) {
                this.buocXuLys = [] as any;
                for (let item of _data["buocXuLys"])
                    this.buocXuLys!.push(BuocXuLy.fromJS(item));
            }
        }
    }

    static fromJS(data: any): SearchHoSoCanXuLyListByUserDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoCanXuLyListByUserDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["nguonDuLieu"] = this.nguonDuLieu;
        data["heThongDvc"] = this.heThongDvc;
        data["maTinh"] = this.maTinh;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenDvhc"] = this.tenDvhc;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        data["idTrangThaiBuocXuLyHienTaiFirst"] = this.idTrangThaiBuocXuLyHienTaiFirst;
        data["tenBuocXuLyHienTaiFirst"] = this.tenBuocXuLyHienTaiFirst;
        data["tenTrangThaiBuocXuLyHienTaiFirst"] = this.tenTrangThaiBuocXuLyHienTaiFirst;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["thoiGianConLaiPhut"] = this.thoiGianConLaiPhut;
        data["thoiGianQuaHan"] = this.thoiGianQuaHan;
        data["hanXuLyHoSo"] = this.hanXuLyHoSo ? this.hanXuLyHoSo.toISOString() : <any>undefined;
        data["idBuoc"] = this.idBuoc;
        data["trangThaiThamDinh"] = this.trangThaiThamDinh;
        data["trangThaiThamTra"] = this.trangThaiThamTra;
        if (Array.isArray(this.buocXuLyHienTais)) {
            data["buocXuLyHienTais"] = [];
            for (let item of this.buocXuLyHienTais)
                data["buocXuLyHienTais"].push(item.toJSON());
        }
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["thoiGianThucHienTheoNgayHenTra"] = this.thoiGianThucHienTheoNgayHenTra;
        if (Array.isArray(this.buocXuLys)) {
            data["buocXuLys"] = [];
            for (let item of this.buocXuLys)
                data["buocXuLys"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ISearchHoSoCanXuLyListByUserDto {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    nguonDuLieu?: NguonDuLieu;
    heThongDvc?: HeThongDvc;
    maTinh?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDvhc?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    idTrangThaiThucHien?: number;
    tenTrangThaiThucHien?: string | undefined;
    idTrangThaiBuocXuLyHienTaiFirst?: string | undefined;
    tenBuocXuLyHienTaiFirst?: string | undefined;
    tenTrangThaiBuocXuLyHienTaiFirst?: string | undefined;
    ngayTao?: Date | undefined;
    thoiGianConLaiPhut?: number;
    thoiGianQuaHan?: string | undefined;
    hanXuLyHoSo?: Date;
    idBuoc?: string | undefined;
    trangThaiThamDinh?: TrangThaiThamDinh;
    trangThaiThamTra?: TrangThaiThamTra;
    buocXuLyHienTais?: SearchHoSoCanXuLyBuocXuLyHienTaiDto[] | undefined;
    thoiGianThucHien?: number | undefined;
    thoiGianThucHienTheoNgayHenTra?: number | undefined;
    buocXuLys?: BuocXuLy[] | undefined;
}

export enum TrangThaiThamDinh {
    ChuaThamDinh = 0,
    DaThamDinh = 1,
}

export enum TrangThaiThamTra {
    ChuaThamTra = 0,
    DaThamTra = 1,
}

export class SearchHoSoCanXuLyBuocXuLyHienTaiDto implements ISearchHoSoCanXuLyBuocXuLyHienTaiDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idTrangThaiXuLy?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    ngayBatDau?: Date;
    ngayKetThuc?: Date | undefined;
    thoiGianThucHienCauHinh?: number | undefined;
    thoiGianThucHienTimeCauHinh?: number | undefined;
    thoiGianDuKienXuLy?: number;
    thoiGianXuLyDenHienTai?: number;
    thoiGianXuLyBuocDenHienTai?: string | undefined;
    thoiGianQuaHan?: string | undefined;
    thoiGianDuKienHoanThanh?: Date;
    thoiGianXuLyBuoc?: string | undefined;
    hienTai?: LaHienTai;
    noiDungXuLy?: string | undefined;

    constructor(data?: ISearchHoSoCanXuLyBuocXuLyHienTaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.ngayKetThuc = _data["ngayKetThuc"] ? new Date(_data["ngayKetThuc"].toString()) : <any>undefined;
            this.thoiGianThucHienCauHinh = _data["thoiGianThucHienCauHinh"];
            this.thoiGianThucHienTimeCauHinh = _data["thoiGianThucHienTimeCauHinh"];
            this.thoiGianDuKienXuLy = _data["thoiGianDuKienXuLy"];
            this.thoiGianXuLyDenHienTai = _data["thoiGianXuLyDenHienTai"];
            this.thoiGianXuLyBuocDenHienTai = _data["thoiGianXuLyBuocDenHienTai"];
            this.thoiGianQuaHan = _data["thoiGianQuaHan"];
            this.thoiGianDuKienHoanThanh = _data["thoiGianDuKienHoanThanh"] ? new Date(_data["thoiGianDuKienHoanThanh"].toString()) : <any>undefined;
            this.thoiGianXuLyBuoc = _data["thoiGianXuLyBuoc"];
            this.hienTai = _data["hienTai"];
            this.noiDungXuLy = _data["noiDungXuLy"];
        }
    }

    static fromJS(data: any): SearchHoSoCanXuLyBuocXuLyHienTaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoCanXuLyBuocXuLyHienTaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["ngayKetThuc"] = this.ngayKetThuc ? this.ngayKetThuc.toISOString() : <any>undefined;
        data["thoiGianThucHienCauHinh"] = this.thoiGianThucHienCauHinh;
        data["thoiGianThucHienTimeCauHinh"] = this.thoiGianThucHienTimeCauHinh;
        data["thoiGianDuKienXuLy"] = this.thoiGianDuKienXuLy;
        data["thoiGianXuLyDenHienTai"] = this.thoiGianXuLyDenHienTai;
        data["thoiGianXuLyBuocDenHienTai"] = this.thoiGianXuLyBuocDenHienTai;
        data["thoiGianQuaHan"] = this.thoiGianQuaHan;
        data["thoiGianDuKienHoanThanh"] = this.thoiGianDuKienHoanThanh ? this.thoiGianDuKienHoanThanh.toISOString() : <any>undefined;
        data["thoiGianXuLyBuoc"] = this.thoiGianXuLyBuoc;
        data["hienTai"] = this.hienTai;
        data["noiDungXuLy"] = this.noiDungXuLy;
        return data; 
    }
}

export interface ISearchHoSoCanXuLyBuocXuLyHienTaiDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idTrangThaiXuLy?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    ngayBatDau?: Date;
    ngayKetThuc?: Date | undefined;
    thoiGianThucHienCauHinh?: number | undefined;
    thoiGianThucHienTimeCauHinh?: number | undefined;
    thoiGianDuKienXuLy?: number;
    thoiGianXuLyDenHienTai?: number;
    thoiGianXuLyBuocDenHienTai?: string | undefined;
    thoiGianQuaHan?: string | undefined;
    thoiGianDuKienHoanThanh?: Date;
    thoiGianXuLyBuoc?: string | undefined;
    hienTai?: LaHienTai;
    noiDungXuLy?: string | undefined;
}

export class SearchHoSoCanXuLyListByUserQuery extends PagingRequest implements ISearchHoSoCanXuLyListByUserQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    dsIdQuyTrinh?: string[] | undefined;
    dsMaQuyTrinh?: string[] | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    trangThaiKhongTinhThoiGianSearchType?: TrangThaiKhongTinhThoiGianSearchType;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    isGetBuocXuLyChuyenLai?: boolean | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    loaiSapXepHanXuLy?: number | undefined;

    constructor(data?: ISearchHoSoCanXuLyListByUserQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            if (Array.isArray(_data["dsIdQuyTrinh"])) {
                this.dsIdQuyTrinh = [] as any;
                for (let item of _data["dsIdQuyTrinh"])
                    this.dsIdQuyTrinh!.push(item);
            }
            if (Array.isArray(_data["dsMaQuyTrinh"])) {
                this.dsMaQuyTrinh = [] as any;
                for (let item of _data["dsMaQuyTrinh"])
                    this.dsMaQuyTrinh!.push(item);
            }
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.trangThaiKhongTinhThoiGianSearchType = _data["trangThaiKhongTinhThoiGianSearchType"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.isGetBuocXuLyHienTai = _data["isGetBuocXuLyHienTai"];
            this.isGetBuocXuLyChuyenLai = _data["isGetBuocXuLyChuyenLai"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.loaiSapXepHanXuLy = _data["loaiSapXepHanXuLy"];
        }
    }

    static fromJS(data: any): SearchHoSoCanXuLyListByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoCanXuLyListByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        if (Array.isArray(this.dsIdQuyTrinh)) {
            data["dsIdQuyTrinh"] = [];
            for (let item of this.dsIdQuyTrinh)
                data["dsIdQuyTrinh"].push(item);
        }
        if (Array.isArray(this.dsMaQuyTrinh)) {
            data["dsMaQuyTrinh"] = [];
            for (let item of this.dsMaQuyTrinh)
                data["dsMaQuyTrinh"].push(item);
        }
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["trangThaiKhongTinhThoiGianSearchType"] = this.trangThaiKhongTinhThoiGianSearchType;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["isGetBuocXuLyHienTai"] = this.isGetBuocXuLyHienTai;
        data["isGetBuocXuLyChuyenLai"] = this.isGetBuocXuLyChuyenLai;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["loaiSapXepHanXuLy"] = this.loaiSapXepHanXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoCanXuLyListByUserQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    dsIdQuyTrinh?: string[] | undefined;
    dsMaQuyTrinh?: string[] | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    trangThaiKhongTinhThoiGianSearchType?: TrangThaiKhongTinhThoiGianSearchType;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    isGetBuocXuLyChuyenLai?: boolean | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    loaiSapXepHanXuLy?: number | undefined;
}

export enum TrangThaiKhongTinhThoiGianSearchType {
    None = 0,
    KhongLayTrangThaiKhongTinhThoiGian = 1,
    ChiLayTrangThaiKhongTinhThoiGian = 2,
}

export class SearchHoSoLienQuanChuaKetThucListByUserQuery extends PagingRequest implements ISearchHoSoLienQuanChuaKetThucListByUserQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    dieuKienInGCN?: number | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;

    constructor(data?: ISearchHoSoLienQuanChuaKetThucListByUserQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.dieuKienInGCN = _data["dieuKienInGCN"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
        }
    }

    static fromJS(data: any): SearchHoSoLienQuanChuaKetThucListByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoLienQuanChuaKetThucListByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["dieuKienInGCN"] = this.dieuKienInGCN;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoLienQuanChuaKetThucListByUserQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    dieuKienInGCN?: number | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
}

export class ApiResultOfInteger implements IApiResultOfInteger {
    isError?: boolean;
    message?: string | undefined;
    data?: number;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfInteger) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"];
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfInteger {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfInteger();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfInteger {
    isError?: boolean;
    message?: string | undefined;
    data?: number;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PhanCongLaiNguoiDangXuLyCommand implements IPhanCongLaiNguoiDangXuLyCommand {
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
    noiDungXuLy?: string | undefined;

    constructor(data?: IPhanCongLaiNguoiDangXuLyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuocXuLy = _data["idBuocXuLy"];
            if (Array.isArray(_data["dsIdNguoiXuLy"])) {
                this.dsIdNguoiXuLy = [] as any;
                for (let item of _data["dsIdNguoiXuLy"])
                    this.dsIdNguoiXuLy!.push(item);
            }
            this.noiDungXuLy = _data["noiDungXuLy"];
        }
    }

    static fromJS(data: any): PhanCongLaiNguoiDangXuLyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new PhanCongLaiNguoiDangXuLyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuocXuLy"] = this.idBuocXuLy;
        if (Array.isArray(this.dsIdNguoiXuLy)) {
            data["dsIdNguoiXuLy"] = [];
            for (let item of this.dsIdNguoiXuLy)
                data["dsIdNguoiXuLy"].push(item);
        }
        data["noiDungXuLy"] = this.noiDungXuLy;
        return data; 
    }
}

export interface IPhanCongLaiNguoiDangXuLyCommand {
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
    noiDungXuLy?: string | undefined;
}

export class ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto implements IApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchYeuCauPhanCongLaiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchYeuCauPhanCongLaiDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchYeuCauPhanCongLaiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchYeuCauPhanCongLaiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchYeuCauPhanCongLaiDto implements IPagedListOfSearchYeuCauPhanCongLaiDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchYeuCauPhanCongLaiDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchYeuCauPhanCongLaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchYeuCauPhanCongLaiDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchYeuCauPhanCongLaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchYeuCauPhanCongLaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchYeuCauPhanCongLaiDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchYeuCauPhanCongLaiDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchYeuCauPhanCongLaiDto implements ISearchYeuCauPhanCongLaiDto {
    id?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    idHoSo?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    maTinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    noiDungXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    dsIdNguoiXuLyArray?: string[] | undefined;
    tenNguoiXuLy?: string | undefined;
    dsNguoiXuLy?: DsNguoiXuLyDto2[] | undefined;
    nguoiCapNhat?: string | undefined;
    ngayCapNhat?: Date;
    yeuCauPhanCongLais?: SearchYeuCauPhanCongLaiDto[] | undefined;

    constructor(data?: ISearchYeuCauPhanCongLaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.nguoiNop = _data["nguoiNop"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.idHoSo = _data["idHoSo"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.idDvhc = _data["idDvhc"];
            this.tenDvhc = _data["tenDvhc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.maTinh = _data["maTinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
            if (Array.isArray(_data["dsIdNguoiXuLyArray"])) {
                this.dsIdNguoiXuLyArray = [] as any;
                for (let item of _data["dsIdNguoiXuLyArray"])
                    this.dsIdNguoiXuLyArray!.push(item);
            }
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
            if (Array.isArray(_data["dsNguoiXuLy"])) {
                this.dsNguoiXuLy = [] as any;
                for (let item of _data["dsNguoiXuLy"])
                    this.dsNguoiXuLy!.push(DsNguoiXuLyDto2.fromJS(item));
            }
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            if (Array.isArray(_data["yeuCauPhanCongLais"])) {
                this.yeuCauPhanCongLais = [] as any;
                for (let item of _data["yeuCauPhanCongLais"])
                    this.yeuCauPhanCongLais!.push(SearchYeuCauPhanCongLaiDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): SearchYeuCauPhanCongLaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchYeuCauPhanCongLaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["nguoiNop"] = this.nguoiNop;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["idHoSo"] = this.idHoSo;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["idDvhc"] = this.idDvhc;
        data["tenDvhc"] = this.tenDvhc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["maTinh"] = this.maTinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        if (Array.isArray(this.dsIdNguoiXuLyArray)) {
            data["dsIdNguoiXuLyArray"] = [];
            for (let item of this.dsIdNguoiXuLyArray)
                data["dsIdNguoiXuLyArray"].push(item);
        }
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        if (Array.isArray(this.dsNguoiXuLy)) {
            data["dsNguoiXuLy"] = [];
            for (let item of this.dsNguoiXuLy)
                data["dsNguoiXuLy"].push(item.toJSON());
        }
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        if (Array.isArray(this.yeuCauPhanCongLais)) {
            data["yeuCauPhanCongLais"] = [];
            for (let item of this.yeuCauPhanCongLais)
                data["yeuCauPhanCongLais"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ISearchYeuCauPhanCongLaiDto {
    id?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    idHoSo?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
    idQuyTrinh?: string | undefined;
    maTinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idNguoiXuLy?: string | undefined;
    noiDungXuLy?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
    dsIdNguoiXuLyArray?: string[] | undefined;
    tenNguoiXuLy?: string | undefined;
    dsNguoiXuLy?: DsNguoiXuLyDto2[] | undefined;
    nguoiCapNhat?: string | undefined;
    ngayCapNhat?: Date;
    yeuCauPhanCongLais?: SearchYeuCauPhanCongLaiDto[] | undefined;
}

export class DsNguoiXuLyDto2 implements IDsNguoiXuLyDto2 {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;

    constructor(data?: IDsNguoiXuLyDto2) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
        }
    }

    static fromJS(data: any): DsNguoiXuLyDto2 {
        data = typeof data === 'object' ? data : {};
        let result = new DsNguoiXuLyDto2();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        return data; 
    }
}

export interface IDsNguoiXuLyDto2 {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
}

export class SearchYeuCauPhanCongLaiListQuery extends PagingRequest implements ISearchYeuCauPhanCongLaiListQuery {
    idNguoiXuLy?: string | undefined;
    idQuyTrinh?: string | undefined;
    idDvhc?: string | undefined;
    loaiLocDvhc?: LoaiLocDvhc;

    constructor(data?: ISearchYeuCauPhanCongLaiListQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idDvhc = _data["idDvhc"];
            this.loaiLocDvhc = _data["loaiLocDvhc"];
        }
    }

    static fromJS(data: any): SearchYeuCauPhanCongLaiListQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchYeuCauPhanCongLaiListQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idDvhc"] = this.idDvhc;
        data["loaiLocDvhc"] = this.loaiLocDvhc;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchYeuCauPhanCongLaiListQuery extends IPagingRequest {
    idNguoiXuLy?: string | undefined;
    idQuyTrinh?: string | undefined;
    idDvhc?: string | undefined;
    loaiLocDvhc?: LoaiLocDvhc;
}

export class ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto implements IApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchYeuCauDaPhanCongLaiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchYeuCauDaPhanCongLaiDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchYeuCauDaPhanCongLaiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchYeuCauDaPhanCongLaiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchYeuCauDaPhanCongLaiDto implements IPagedListOfSearchYeuCauDaPhanCongLaiDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchYeuCauDaPhanCongLaiDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchYeuCauDaPhanCongLaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchYeuCauDaPhanCongLaiDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchYeuCauDaPhanCongLaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchYeuCauDaPhanCongLaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchYeuCauDaPhanCongLaiDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchYeuCauDaPhanCongLaiDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchYeuCauDaPhanCongLaiDto implements ISearchYeuCauDaPhanCongLaiDto {
    id?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    idHoSo?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    noiDungXuLy?: string | undefined;
    tenDvhc?: string | undefined;
    maTinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayCapNhat?: Date;
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;

    constructor(data?: ISearchYeuCauDaPhanCongLaiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.nguoiNop = _data["nguoiNop"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.idHoSo = _data["idHoSo"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.tenDvhc = _data["tenDvhc"];
            this.maTinh = _data["maTinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
        }
    }

    static fromJS(data: any): SearchYeuCauDaPhanCongLaiDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchYeuCauDaPhanCongLaiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["nguoiNop"] = this.nguoiNop;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["idHoSo"] = this.idHoSo;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["tenDvhc"] = this.tenDvhc;
        data["maTinh"] = this.maTinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        return data; 
    }
}

export interface ISearchYeuCauDaPhanCongLaiDto {
    id?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    idHoSo?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    noiDungXuLy?: string | undefined;
    tenDvhc?: string | undefined;
    maTinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayCapNhat?: Date;
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
}

export class SearchYeuCauDaPhanCongLaiListQuery extends PagingRequest implements ISearchYeuCauDaPhanCongLaiListQuery {
    idNguoiDuocPhanCong?: string | undefined;
    idQuyTrinh?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    loaiLocDvhc?: LoaiLocDvhc;

    constructor(data?: ISearchYeuCauDaPhanCongLaiListQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idNguoiDuocPhanCong = _data["idNguoiDuocPhanCong"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idDvhc = _data["idDvhc"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.loaiLocDvhc = _data["loaiLocDvhc"];
        }
    }

    static fromJS(data: any): SearchYeuCauDaPhanCongLaiListQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchYeuCauDaPhanCongLaiListQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiDuocPhanCong"] = this.idNguoiDuocPhanCong;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idDvhc"] = this.idDvhc;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["loaiLocDvhc"] = this.loaiLocDvhc;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchYeuCauDaPhanCongLaiListQuery extends IPagingRequest {
    idNguoiDuocPhanCong?: string | undefined;
    idQuyTrinh?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    loaiLocDvhc?: LoaiLocDvhc;
}

export class ApiResultOfPagedListOfHoSoGiaoDichDto implements IApiResultOfPagedListOfHoSoGiaoDichDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfHoSoGiaoDichDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfHoSoGiaoDichDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfHoSoGiaoDichDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfHoSoGiaoDichDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfHoSoGiaoDichDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfHoSoGiaoDichDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfHoSoGiaoDichDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfHoSoGiaoDichDto implements IPagedListOfHoSoGiaoDichDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: HoSoGiaoDichDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfHoSoGiaoDichDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(HoSoGiaoDichDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfHoSoGiaoDichDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfHoSoGiaoDichDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfHoSoGiaoDichDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: HoSoGiaoDichDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class HoSoGiaoDichDto implements IHoSoGiaoDichDto {
    ma?: string | undefined;
    maQuyTrinh?: string | undefined;
    maLoaiHoSo?: string | undefined;
    ngayTiepNhan?: Date | undefined;
    ngayHenTra?: Date | undefined;
    ngayHenTraMoiNhat?: Date | undefined;
    soThuTuThua?: string | undefined;
    soHieuToBanDo?: string | undefined;
    diaChiThuaDat?: string | undefined;
    tenChu?: string | undefined;
    loaiGiayToChu?: string | undefined;
    soGiayToChu?: string | undefined;
    diaChiChu?: string | undefined;
    soDienThoaiChu?: string | undefined;
    diaChiEmailChu?: string | undefined;
    tenNguoiNop?: string | undefined;
    loaiGiayToNguoiNop?: string | undefined;
    soGiayToNguoiNop?: string | undefined;
    diaChiNguoiNop?: string | undefined;
    ghiChuNguoiNop?: string | undefined;
    thoiGianConLai?: number | undefined;
    giayToTiepNhan?: GiayToTiepNhan[] | undefined;
    tenQuyTrinh?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    trangThaiXuLy?: number | undefined;
    maXa?: number | undefined;
    maHuyen?: number | undefined;
    tenLinhVuc?: string | undefined;

    constructor(data?: IHoSoGiaoDichDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ma = _data["ma"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.ngayTiepNhan = _data["ngayTiepNhan"] ? new Date(_data["ngayTiepNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.ngayHenTraMoiNhat = _data["ngayHenTraMoiNhat"] ? new Date(_data["ngayHenTraMoiNhat"].toString()) : <any>undefined;
            this.soThuTuThua = _data["soThuTuThua"];
            this.soHieuToBanDo = _data["soHieuToBanDo"];
            this.diaChiThuaDat = _data["diaChiThuaDat"];
            this.tenChu = _data["tenChu"];
            this.loaiGiayToChu = _data["loaiGiayToChu"];
            this.soGiayToChu = _data["soGiayToChu"];
            this.diaChiChu = _data["diaChiChu"];
            this.soDienThoaiChu = _data["soDienThoaiChu"];
            this.diaChiEmailChu = _data["diaChiEmailChu"];
            this.tenNguoiNop = _data["tenNguoiNop"];
            this.loaiGiayToNguoiNop = _data["loaiGiayToNguoiNop"];
            this.soGiayToNguoiNop = _data["soGiayToNguoiNop"];
            this.diaChiNguoiNop = _data["diaChiNguoiNop"];
            this.ghiChuNguoiNop = _data["ghiChuNguoiNop"];
            this.thoiGianConLai = _data["thoiGianConLai"];
            if (Array.isArray(_data["giayToTiepNhan"])) {
                this.giayToTiepNhan = [] as any;
                for (let item of _data["giayToTiepNhan"])
                    this.giayToTiepNhan!.push(GiayToTiepNhan.fromJS(item));
            }
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.trangThaiXuLy = _data["trangThaiXuLy"];
            this.maXa = _data["maXa"];
            this.maHuyen = _data["maHuyen"];
            this.tenLinhVuc = _data["tenLinhVuc"];
        }
    }

    static fromJS(data: any): HoSoGiaoDichDto {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoGiaoDichDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ma"] = this.ma;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["ngayTiepNhan"] = this.ngayTiepNhan ? this.ngayTiepNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["ngayHenTraMoiNhat"] = this.ngayHenTraMoiNhat ? this.ngayHenTraMoiNhat.toISOString() : <any>undefined;
        data["soThuTuThua"] = this.soThuTuThua;
        data["soHieuToBanDo"] = this.soHieuToBanDo;
        data["diaChiThuaDat"] = this.diaChiThuaDat;
        data["tenChu"] = this.tenChu;
        data["loaiGiayToChu"] = this.loaiGiayToChu;
        data["soGiayToChu"] = this.soGiayToChu;
        data["diaChiChu"] = this.diaChiChu;
        data["soDienThoaiChu"] = this.soDienThoaiChu;
        data["diaChiEmailChu"] = this.diaChiEmailChu;
        data["tenNguoiNop"] = this.tenNguoiNop;
        data["loaiGiayToNguoiNop"] = this.loaiGiayToNguoiNop;
        data["soGiayToNguoiNop"] = this.soGiayToNguoiNop;
        data["diaChiNguoiNop"] = this.diaChiNguoiNop;
        data["ghiChuNguoiNop"] = this.ghiChuNguoiNop;
        data["thoiGianConLai"] = this.thoiGianConLai;
        if (Array.isArray(this.giayToTiepNhan)) {
            data["giayToTiepNhan"] = [];
            for (let item of this.giayToTiepNhan)
                data["giayToTiepNhan"].push(item.toJSON());
        }
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["trangThaiXuLy"] = this.trangThaiXuLy;
        data["maXa"] = this.maXa;
        data["maHuyen"] = this.maHuyen;
        data["tenLinhVuc"] = this.tenLinhVuc;
        return data; 
    }
}

export interface IHoSoGiaoDichDto {
    ma?: string | undefined;
    maQuyTrinh?: string | undefined;
    maLoaiHoSo?: string | undefined;
    ngayTiepNhan?: Date | undefined;
    ngayHenTra?: Date | undefined;
    ngayHenTraMoiNhat?: Date | undefined;
    soThuTuThua?: string | undefined;
    soHieuToBanDo?: string | undefined;
    diaChiThuaDat?: string | undefined;
    tenChu?: string | undefined;
    loaiGiayToChu?: string | undefined;
    soGiayToChu?: string | undefined;
    diaChiChu?: string | undefined;
    soDienThoaiChu?: string | undefined;
    diaChiEmailChu?: string | undefined;
    tenNguoiNop?: string | undefined;
    loaiGiayToNguoiNop?: string | undefined;
    soGiayToNguoiNop?: string | undefined;
    diaChiNguoiNop?: string | undefined;
    ghiChuNguoiNop?: string | undefined;
    thoiGianConLai?: number | undefined;
    giayToTiepNhan?: GiayToTiepNhan[] | undefined;
    tenQuyTrinh?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    trangThaiXuLy?: number | undefined;
    maXa?: number | undefined;
    maHuyen?: number | undefined;
    tenLinhVuc?: string | undefined;
}

export class GiayToTiepNhan implements IGiayToTiepNhan {
    maLoaiVanBanPhapLy?: string | undefined;
    tenGiayTo?: string | undefined;
    soBanChinh?: number | undefined;
    soBanSao?: number | undefined;
    fileDownloadPath?: string | undefined;

    constructor(data?: IGiayToTiepNhan) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maLoaiVanBanPhapLy = _data["maLoaiVanBanPhapLy"];
            this.tenGiayTo = _data["tenGiayTo"];
            this.soBanChinh = _data["soBanChinh"];
            this.soBanSao = _data["soBanSao"];
            this.fileDownloadPath = _data["fileDownloadPath"];
        }
    }

    static fromJS(data: any): GiayToTiepNhan {
        data = typeof data === 'object' ? data : {};
        let result = new GiayToTiepNhan();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLoaiVanBanPhapLy"] = this.maLoaiVanBanPhapLy;
        data["tenGiayTo"] = this.tenGiayTo;
        data["soBanChinh"] = this.soBanChinh;
        data["soBanSao"] = this.soBanSao;
        data["fileDownloadPath"] = this.fileDownloadPath;
        return data; 
    }
}

export interface IGiayToTiepNhan {
    maLoaiVanBanPhapLy?: string | undefined;
    tenGiayTo?: string | undefined;
    soBanChinh?: number | undefined;
    soBanSao?: number | undefined;
    fileDownloadPath?: string | undefined;
}

export class GetHoSoGiaoDichQuery implements IGetHoSoGiaoDichQuery {
    keyword?: string | undefined;
    soBienNhan?: string | undefined;
    soGiayTo?: string | undefined;
    maLinhVuc?: string | undefined;
    maQuyTrinh?: string | undefined;
    trangThaiThucHien?: string | undefined;
    maLoaiHoSo?: string | undefined;
    ngayBatDau?: Date | undefined;
    ngayKetThuc?: Date | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    pNum?: number;
    pSize?: number;

    constructor(data?: IGetHoSoGiaoDichQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.keyword = _data["keyword"];
            this.soBienNhan = _data["soBienNhan"];
            this.soGiayTo = _data["soGiayTo"];
            this.maLinhVuc = _data["maLinhVuc"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.trangThaiThucHien = _data["trangThaiThucHien"];
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.ngayBatDau = _data["ngayBatDau"] ? new Date(_data["ngayBatDau"].toString()) : <any>undefined;
            this.ngayKetThuc = _data["ngayKetThuc"] ? new Date(_data["ngayKetThuc"].toString()) : <any>undefined;
            this.maHuyen = _data["maHuyen"];
            this.maXa = _data["maXa"];
            this.pNum = _data["pNum"];
            this.pSize = _data["pSize"];
        }
    }

    static fromJS(data: any): GetHoSoGiaoDichQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoGiaoDichQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["keyword"] = this.keyword;
        data["soBienNhan"] = this.soBienNhan;
        data["soGiayTo"] = this.soGiayTo;
        data["maLinhVuc"] = this.maLinhVuc;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["trangThaiThucHien"] = this.trangThaiThucHien;
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["ngayBatDau"] = this.ngayBatDau ? this.ngayBatDau.toISOString() : <any>undefined;
        data["ngayKetThuc"] = this.ngayKetThuc ? this.ngayKetThuc.toISOString() : <any>undefined;
        data["maHuyen"] = this.maHuyen;
        data["maXa"] = this.maXa;
        data["pNum"] = this.pNum;
        data["pSize"] = this.pSize;
        return data; 
    }
}

export interface IGetHoSoGiaoDichQuery {
    keyword?: string | undefined;
    soBienNhan?: string | undefined;
    soGiayTo?: string | undefined;
    maLinhVuc?: string | undefined;
    maQuyTrinh?: string | undefined;
    trangThaiThucHien?: string | undefined;
    maLoaiHoSo?: string | undefined;
    ngayBatDau?: Date | undefined;
    ngayKetThuc?: Date | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    pNum?: number;
    pSize?: number;
}

export class SearchHoSoQuaHanListByUserQuery extends PagingRequest implements ISearchHoSoQuaHanListByUserQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    trangThaiKhongTinhThoiGianSearchType?: TrangThaiKhongTinhThoiGianSearchType;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    loaiSapXepHanXuLy?: number | undefined;

    constructor(data?: ISearchHoSoQuaHanListByUserQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.trangThaiKhongTinhThoiGianSearchType = _data["trangThaiKhongTinhThoiGianSearchType"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.isGetBuocXuLyHienTai = _data["isGetBuocXuLyHienTai"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
            this.loaiSapXepHanXuLy = _data["loaiSapXepHanXuLy"];
        }
    }

    static fromJS(data: any): SearchHoSoQuaHanListByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoQuaHanListByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["trangThaiKhongTinhThoiGianSearchType"] = this.trangThaiKhongTinhThoiGianSearchType;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["isGetBuocXuLyHienTai"] = this.isGetBuocXuLyHienTai;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        data["loaiSapXepHanXuLy"] = this.loaiSapXepHanXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoQuaHanListByUserQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    trangThaiKhongTinhThoiGianSearchType?: TrangThaiKhongTinhThoiGianSearchType;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    loaiSapXepHanXuLy?: number | undefined;
}

export class SearchHoSoSapHetHanXuLyListByUserQuery extends PagingRequest implements ISearchHoSoSapHetHanXuLyListByUserQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    trangThaiKhongTinhThoiGianSearchType?: TrangThaiKhongTinhThoiGianSearchType;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    loaiSapXepHanXuLy?: number | undefined;

    constructor(data?: ISearchHoSoSapHetHanXuLyListByUserQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.trangThaiKhongTinhThoiGianSearchType = _data["trangThaiKhongTinhThoiGianSearchType"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.isGetBuocXuLyHienTai = _data["isGetBuocXuLyHienTai"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
            this.loaiSapXepHanXuLy = _data["loaiSapXepHanXuLy"];
        }
    }

    static fromJS(data: any): SearchHoSoSapHetHanXuLyListByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoSapHetHanXuLyListByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["trangThaiKhongTinhThoiGianSearchType"] = this.trangThaiKhongTinhThoiGianSearchType;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["isGetBuocXuLyHienTai"] = this.isGetBuocXuLyHienTai;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        data["loaiSapXepHanXuLy"] = this.loaiSapXepHanXuLy;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoSapHetHanXuLyListByUserQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    trangThaiKhongTinhThoiGianSearchType?: TrangThaiKhongTinhThoiGianSearchType;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
    loaiSapXepHanXuLy?: number | undefined;
}

export class ApiResultOfSoLuongHoSoDto implements IApiResultOfSoLuongHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: SoLuongHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfSoLuongHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? SoLuongHoSoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfSoLuongHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfSoLuongHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfSoLuongHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: SoLuongHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class SoLuongHoSoDto implements ISoLuongHoSoDto {
    tongSoHoSo?: number;
    dangXuLy?: number;
    tamDung?: number;
    traLai?: number;
    chuaXuLy?: number;
    sapHetHan?: number;
    quaHan?: number;
    daHoanThanh?: number;
    dsHsTiepNhanDVC?: number;

    constructor(data?: ISoLuongHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tongSoHoSo = _data["tongSoHoSo"];
            this.dangXuLy = _data["dangXuLy"];
            this.tamDung = _data["tamDung"];
            this.traLai = _data["traLai"];
            this.chuaXuLy = _data["chuaXuLy"];
            this.sapHetHan = _data["sapHetHan"];
            this.quaHan = _data["quaHan"];
            this.daHoanThanh = _data["daHoanThanh"];
            this.dsHsTiepNhanDVC = _data["dsHsTiepNhanDVC"];
        }
    }

    static fromJS(data: any): SoLuongHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new SoLuongHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tongSoHoSo"] = this.tongSoHoSo;
        data["dangXuLy"] = this.dangXuLy;
        data["tamDung"] = this.tamDung;
        data["traLai"] = this.traLai;
        data["chuaXuLy"] = this.chuaXuLy;
        data["sapHetHan"] = this.sapHetHan;
        data["quaHan"] = this.quaHan;
        data["daHoanThanh"] = this.daHoanThanh;
        data["dsHsTiepNhanDVC"] = this.dsHsTiepNhanDVC;
        return data; 
    }
}

export interface ISoLuongHoSoDto {
    tongSoHoSo?: number;
    dangXuLy?: number;
    tamDung?: number;
    traLai?: number;
    chuaXuLy?: number;
    sapHetHan?: number;
    quaHan?: number;
    daHoanThanh?: number;
    dsHsTiepNhanDVC?: number;
}

export class SoLuongHoSoByUserQuery implements ISoLuongHoSoByUserQuery {

    constructor(data?: ISoLuongHoSoByUserQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
    }

    static fromJS(data: any): SoLuongHoSoByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SoLuongHoSoByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        return data; 
    }
}

export interface ISoLuongHoSoByUserQuery {
}

export class SoLuongHoSoCanXuLyByUserQuery implements ISoLuongHoSoCanXuLyByUserQuery {
    dsIdQuyTrinh?: string[] | undefined;

    constructor(data?: ISoLuongHoSoCanXuLyByUserQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["dsIdQuyTrinh"])) {
                this.dsIdQuyTrinh = [] as any;
                for (let item of _data["dsIdQuyTrinh"])
                    this.dsIdQuyTrinh!.push(item);
            }
        }
    }

    static fromJS(data: any): SoLuongHoSoCanXuLyByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SoLuongHoSoCanXuLyByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dsIdQuyTrinh)) {
            data["dsIdQuyTrinh"] = [];
            for (let item of this.dsIdQuyTrinh)
                data["dsIdQuyTrinh"].push(item);
        }
        return data; 
    }
}

export interface ISoLuongHoSoCanXuLyByUserQuery {
    dsIdQuyTrinh?: string[] | undefined;
}

export class ApiResultOfIListOfHoSoSearchingDto implements IApiResultOfIListOfHoSoSearchingDto {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoSearchingDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfHoSoSearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(HoSoSearchingDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfHoSoSearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfHoSoSearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfHoSoSearchingDto {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoSearchingDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class HoSoListQuery implements IHoSoListQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    fullTextSearch?: string | undefined;

    constructor(data?: IHoSoListQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.fullTextSearch = _data["fullTextSearch"];
        }
    }

    static fromJS(data: any): HoSoListQuery {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoListQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["fullTextSearch"] = this.fullTextSearch;
        return data; 
    }
}

export interface IHoSoListQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idLoaiHoSo?: number | undefined;
    fullTextSearch?: string | undefined;
}

export class ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel implements IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoGiaiQuyetHoSoTheoDonviViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BaoCaoGiaiQuyetHoSoTheoDonviViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoDonviViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoGiaiQuyetHoSoTheoDonviViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BaoCaoGiaiQuyetHoSoTheoDonviViewModel implements IBaoCaoGiaiQuyetHoSoTheoDonviViewModel {
    idDvhc?: string | undefined;
    donVi?: string | undefined;
    hoSoTonDauKy?: number;
    hoSoNhanTrongKy?: number;
    tongSoHoSo?: number;
    hoSoHoanThanhDungHan?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoHoanThanh?: number;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoDangXuLy?: number;
    hoSoHuy?: number;

    constructor(data?: IBaoCaoGiaiQuyetHoSoTheoDonviViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.donVi = _data["donVi"];
            this.hoSoTonDauKy = _data["hoSoTonDauKy"];
            this.hoSoNhanTrongKy = _data["hoSoNhanTrongKy"];
            this.tongSoHoSo = _data["tongSoHoSo"];
            this.hoSoHoanThanhDungHan = _data["hoSoHoanThanhDungHan"];
            this.hoSoHoanThanhQuaHan = _data["hoSoHoanThanhQuaHan"];
            this.tongSoHoSoHoanThanh = _data["tongSoHoSoHoanThanh"];
            this.hoSoDangXuLyTrongHan = _data["hoSoDangXuLyTrongHan"];
            this.hoSoDangXuLyQuaHan = _data["hoSoDangXuLyQuaHan"];
            this.tongSoHoSoDangXuLy = _data["tongSoHoSoDangXuLy"];
            this.hoSoHuy = _data["hoSoHuy"];
        }
    }

    static fromJS(data: any): BaoCaoGiaiQuyetHoSoTheoDonviViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoGiaiQuyetHoSoTheoDonviViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["donVi"] = this.donVi;
        data["hoSoTonDauKy"] = this.hoSoTonDauKy;
        data["hoSoNhanTrongKy"] = this.hoSoNhanTrongKy;
        data["tongSoHoSo"] = this.tongSoHoSo;
        data["hoSoHoanThanhDungHan"] = this.hoSoHoanThanhDungHan;
        data["hoSoHoanThanhQuaHan"] = this.hoSoHoanThanhQuaHan;
        data["tongSoHoSoHoanThanh"] = this.tongSoHoSoHoanThanh;
        data["hoSoDangXuLyTrongHan"] = this.hoSoDangXuLyTrongHan;
        data["hoSoDangXuLyQuaHan"] = this.hoSoDangXuLyQuaHan;
        data["tongSoHoSoDangXuLy"] = this.tongSoHoSoDangXuLy;
        data["hoSoHuy"] = this.hoSoHuy;
        return data; 
    }
}

export interface IBaoCaoGiaiQuyetHoSoTheoDonviViewModel {
    idDvhc?: string | undefined;
    donVi?: string | undefined;
    hoSoTonDauKy?: number;
    hoSoNhanTrongKy?: number;
    tongSoHoSo?: number;
    hoSoHoanThanhDungHan?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoHoanThanh?: number;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoDangXuLy?: number;
    hoSoHuy?: number;
}

export class BaoCaoGiaiQuyetHoSoTheoDonviQuery implements IBaoCaoGiaiQuyetHoSoTheoDonviQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;

    constructor(data?: IBaoCaoGiaiQuyetHoSoTheoDonviQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.kyBaoCao = _data["kyBaoCao"];
            this.idDvhc = _data["idDvhc"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.thang = _data["thang"];
            this.quy = _data["quy"];
            this.nam = _data["nam"];
        }
    }

    static fromJS(data: any): BaoCaoGiaiQuyetHoSoTheoDonviQuery {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoGiaiQuyetHoSoTheoDonviQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["kyBaoCao"] = this.kyBaoCao;
        data["idDvhc"] = this.idDvhc;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["thang"] = this.thang;
        data["quy"] = this.quy;
        data["nam"] = this.nam;
        return data; 
    }
}

export interface IBaoCaoGiaiQuyetHoSoTheoDonviQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
}

export class ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel implements IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoGiaiQuyetHoSoTheoThuTucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BaoCaoGiaiQuyetHoSoTheoThuTucViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoThuTucViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoGiaiQuyetHoSoTheoThuTucViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BaoCaoGiaiQuyetHoSoTheoThuTucViewModel implements IBaoCaoGiaiQuyetHoSoTheoThuTucViewModel {
    thuTuc?: string | undefined;
    hoSoTonDauKy?: number;
    hoSoNhanTrongKy?: number;
    tongSoHoSo?: number;
    hoSoHoanThanhDungHan?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoHoanThanh?: number;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoDangXuLy?: number;

    constructor(data?: IBaoCaoGiaiQuyetHoSoTheoThuTucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.thuTuc = _data["thuTuc"];
            this.hoSoTonDauKy = _data["hoSoTonDauKy"];
            this.hoSoNhanTrongKy = _data["hoSoNhanTrongKy"];
            this.tongSoHoSo = _data["tongSoHoSo"];
            this.hoSoHoanThanhDungHan = _data["hoSoHoanThanhDungHan"];
            this.hoSoHoanThanhQuaHan = _data["hoSoHoanThanhQuaHan"];
            this.tongSoHoSoHoanThanh = _data["tongSoHoSoHoanThanh"];
            this.hoSoDangXuLyTrongHan = _data["hoSoDangXuLyTrongHan"];
            this.hoSoDangXuLyQuaHan = _data["hoSoDangXuLyQuaHan"];
            this.tongSoHoSoDangXuLy = _data["tongSoHoSoDangXuLy"];
        }
    }

    static fromJS(data: any): BaoCaoGiaiQuyetHoSoTheoThuTucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoGiaiQuyetHoSoTheoThuTucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["thuTuc"] = this.thuTuc;
        data["hoSoTonDauKy"] = this.hoSoTonDauKy;
        data["hoSoNhanTrongKy"] = this.hoSoNhanTrongKy;
        data["tongSoHoSo"] = this.tongSoHoSo;
        data["hoSoHoanThanhDungHan"] = this.hoSoHoanThanhDungHan;
        data["hoSoHoanThanhQuaHan"] = this.hoSoHoanThanhQuaHan;
        data["tongSoHoSoHoanThanh"] = this.tongSoHoSoHoanThanh;
        data["hoSoDangXuLyTrongHan"] = this.hoSoDangXuLyTrongHan;
        data["hoSoDangXuLyQuaHan"] = this.hoSoDangXuLyQuaHan;
        data["tongSoHoSoDangXuLy"] = this.tongSoHoSoDangXuLy;
        return data; 
    }
}

export interface IBaoCaoGiaiQuyetHoSoTheoThuTucViewModel {
    thuTuc?: string | undefined;
    hoSoTonDauKy?: number;
    hoSoNhanTrongKy?: number;
    tongSoHoSo?: number;
    hoSoHoanThanhDungHan?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoHoanThanh?: number;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoDangXuLy?: number;
}

export class BaoCaoGiaiQuyetHoSoTheoThuTucQuery implements IBaoCaoGiaiQuyetHoSoTheoThuTucQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;

    constructor(data?: IBaoCaoGiaiQuyetHoSoTheoThuTucQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.kyBaoCao = _data["kyBaoCao"];
            this.idDvhc = _data["idDvhc"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.thang = _data["thang"];
            this.quy = _data["quy"];
            this.nam = _data["nam"];
        }
    }

    static fromJS(data: any): BaoCaoGiaiQuyetHoSoTheoThuTucQuery {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoGiaiQuyetHoSoTheoThuTucQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["kyBaoCao"] = this.kyBaoCao;
        data["idDvhc"] = this.idDvhc;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["thang"] = this.thang;
        data["quy"] = this.quy;
        data["nam"] = this.nam;
        return data; 
    }
}

export interface IBaoCaoGiaiQuyetHoSoTheoThuTucQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
}

export class ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel implements IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel implements IBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel {
    idNguoiXuLy?: string | undefined;
    chuyenVien?: string | undefined;
    hoSoTonDauKy?: number;
    hoSoChuaNhanTrongKy?: number;
    hoSoNhanTrongKy?: number;
    tongSoHoSo?: number;
    hoSoTuGiaiQuyet?: number;
    hoSoNguoiKhacThuLyThay?: number;
    hoSoHoanThanhDungHan?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoHoanThanh?: number;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoTonDong?: number;

    constructor(data?: IBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.chuyenVien = _data["chuyenVien"];
            this.hoSoTonDauKy = _data["hoSoTonDauKy"];
            this.hoSoChuaNhanTrongKy = _data["hoSoChuaNhanTrongKy"];
            this.hoSoNhanTrongKy = _data["hoSoNhanTrongKy"];
            this.tongSoHoSo = _data["tongSoHoSo"];
            this.hoSoTuGiaiQuyet = _data["hoSoTuGiaiQuyet"];
            this.hoSoNguoiKhacThuLyThay = _data["hoSoNguoiKhacThuLyThay"];
            this.hoSoHoanThanhDungHan = _data["hoSoHoanThanhDungHan"];
            this.hoSoHoanThanhQuaHan = _data["hoSoHoanThanhQuaHan"];
            this.tongSoHoSoHoanThanh = _data["tongSoHoSoHoanThanh"];
            this.hoSoDangXuLyTrongHan = _data["hoSoDangXuLyTrongHan"];
            this.hoSoDangXuLyQuaHan = _data["hoSoDangXuLyQuaHan"];
            this.tongSoHoSoTonDong = _data["tongSoHoSoTonDong"];
        }
    }

    static fromJS(data: any): BaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["chuyenVien"] = this.chuyenVien;
        data["hoSoTonDauKy"] = this.hoSoTonDauKy;
        data["hoSoChuaNhanTrongKy"] = this.hoSoChuaNhanTrongKy;
        data["hoSoNhanTrongKy"] = this.hoSoNhanTrongKy;
        data["tongSoHoSo"] = this.tongSoHoSo;
        data["hoSoTuGiaiQuyet"] = this.hoSoTuGiaiQuyet;
        data["hoSoNguoiKhacThuLyThay"] = this.hoSoNguoiKhacThuLyThay;
        data["hoSoHoanThanhDungHan"] = this.hoSoHoanThanhDungHan;
        data["hoSoHoanThanhQuaHan"] = this.hoSoHoanThanhQuaHan;
        data["tongSoHoSoHoanThanh"] = this.tongSoHoSoHoanThanh;
        data["hoSoDangXuLyTrongHan"] = this.hoSoDangXuLyTrongHan;
        data["hoSoDangXuLyQuaHan"] = this.hoSoDangXuLyQuaHan;
        data["tongSoHoSoTonDong"] = this.tongSoHoSoTonDong;
        return data; 
    }
}

export interface IBaoCaoGiaiQuyetHoSoTheoChuyenVienViewModel {
    idNguoiXuLy?: string | undefined;
    chuyenVien?: string | undefined;
    hoSoTonDauKy?: number;
    hoSoChuaNhanTrongKy?: number;
    hoSoNhanTrongKy?: number;
    tongSoHoSo?: number;
    hoSoTuGiaiQuyet?: number;
    hoSoNguoiKhacThuLyThay?: number;
    hoSoHoanThanhDungHan?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoHoanThanh?: number;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoTonDong?: number;
}

export class BaoCaoGiaiQuyetHoSoTheoChuyenVienQuery implements IBaoCaoGiaiQuyetHoSoTheoChuyenVienQuery {
    idQuanHuyen?: string | undefined;
    idPhongBan?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    isHoSo?: boolean;

    constructor(data?: IBaoCaoGiaiQuyetHoSoTheoChuyenVienQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhongBan = _data["idPhongBan"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.isHoSo = _data["isHoSo"];
        }
    }

    static fromJS(data: any): BaoCaoGiaiQuyetHoSoTheoChuyenVienQuery {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoGiaiQuyetHoSoTheoChuyenVienQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhongBan"] = this.idPhongBan;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["isHoSo"] = this.isHoSo;
        return data; 
    }
}

export interface IBaoCaoGiaiQuyetHoSoTheoChuyenVienQuery {
    idQuanHuyen?: string | undefined;
    idPhongBan?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    isHoSo?: boolean;
}

export class BaoCaoThuLyHoSoTheoPhongBanQuery implements IBaoCaoThuLyHoSoTheoPhongBanQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    idPhongBan?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    isHoSo?: boolean;

    constructor(data?: IBaoCaoThuLyHoSoTheoPhongBanQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.kyBaoCao = _data["kyBaoCao"];
            this.idDvhc = _data["idDvhc"];
            this.idPhongBan = _data["idPhongBan"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.thang = _data["thang"];
            this.quy = _data["quy"];
            this.nam = _data["nam"];
            this.isHoSo = _data["isHoSo"];
        }
    }

    static fromJS(data: any): BaoCaoThuLyHoSoTheoPhongBanQuery {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoThuLyHoSoTheoPhongBanQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["kyBaoCao"] = this.kyBaoCao;
        data["idDvhc"] = this.idDvhc;
        data["idPhongBan"] = this.idPhongBan;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["thang"] = this.thang;
        data["quy"] = this.quy;
        data["nam"] = this.nam;
        data["isHoSo"] = this.isHoSo;
        return data; 
    }
}

export interface IBaoCaoThuLyHoSoTheoPhongBanQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    idPhongBan?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    isHoSo?: boolean;
}

export class SearchHoSoChoKetQuaThueByUserQuery extends PagingRequest implements ISearchHoSoChoKetQuaThueByUserQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;

    constructor(data?: ISearchHoSoChoKetQuaThueByUserQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.isGetBuocXuLyHienTai = _data["isGetBuocXuLyHienTai"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
        }
    }

    static fromJS(data: any): SearchHoSoChoKetQuaThueByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoChoKetQuaThueByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["isGetBuocXuLyHienTai"] = this.isGetBuocXuLyHienTai;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoChoKetQuaThueByUserQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
}

export class SearchHoSoHoanThanhNvtcByUserQuery extends PagingRequest implements ISearchHoSoHoanThanhNvtcByUserQuery {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;

    constructor(data?: ISearchHoSoHoanThanhNvtcByUserQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idTrangThaiThucHien = _data["idTrangThaiThucHien"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.isGetBuocXuLyHienTai = _data["isGetBuocXuLyHienTai"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.ngayHenTraTuNgay = _data["ngayHenTraTuNgay"] ? new Date(_data["ngayHenTraTuNgay"].toString()) : <any>undefined;
            this.ngayHenTraDenNgay = _data["ngayHenTraDenNgay"] ? new Date(_data["ngayHenTraDenNgay"].toString()) : <any>undefined;
            this.ngayThucTraTuNgay = _data["ngayThucTraTuNgay"] ? new Date(_data["ngayThucTraTuNgay"].toString()) : <any>undefined;
            this.ngayThucTraDenNgay = _data["ngayThucTraDenNgay"] ? new Date(_data["ngayThucTraDenNgay"].toString()) : <any>undefined;
            this.idHuyen = _data["idHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
        }
    }

    static fromJS(data: any): SearchHoSoHoanThanhNvtcByUserQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchHoSoHoanThanhNvtcByUserQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idTrangThaiThucHien"] = this.idTrangThaiThucHien;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["isGetBuocXuLyHienTai"] = this.isGetBuocXuLyHienTai;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["ngayHenTraTuNgay"] = this.ngayHenTraTuNgay ? this.ngayHenTraTuNgay.toISOString() : <any>undefined;
        data["ngayHenTraDenNgay"] = this.ngayHenTraDenNgay ? this.ngayHenTraDenNgay.toISOString() : <any>undefined;
        data["ngayThucTraTuNgay"] = this.ngayThucTraTuNgay ? this.ngayThucTraTuNgay.toISOString() : <any>undefined;
        data["ngayThucTraDenNgay"] = this.ngayThucTraDenNgay ? this.ngayThucTraDenNgay.toISOString() : <any>undefined;
        data["idHuyen"] = this.idHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchHoSoHoanThanhNvtcByUserQuery extends IPagingRequest {
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idTrangThaiHoSo?: number | undefined;
    idTrangThaiXuLy?: number | undefined;
    idTrangThaiThucHien?: number | undefined;
    idLoaiHoSo?: number | undefined;
    isGetBuocXuLyHienTai?: boolean | undefined;
    tuNgay?: Date | undefined;
    denNgay?: Date | undefined;
    ngayHenTraTuNgay?: Date | undefined;
    ngayHenTraDenNgay?: Date | undefined;
    ngayThucTraTuNgay?: Date | undefined;
    ngayThucTraDenNgay?: Date | undefined;
    idHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
}

export class CapNhatDieuKienInGCNCommand implements ICapNhatDieuKienInGCNCommand {
    id?: string | undefined;
    dieuKienInGiay?: number | undefined;

    constructor(data?: ICapNhatDieuKienInGCNCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.dieuKienInGiay = _data["dieuKienInGiay"];
        }
    }

    static fromJS(data: any): CapNhatDieuKienInGCNCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatDieuKienInGCNCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["dieuKienInGiay"] = this.dieuKienInGiay;
        return data; 
    }
}

export interface ICapNhatDieuKienInGCNCommand {
    id?: string | undefined;
    dieuKienInGiay?: number | undefined;
}

export class ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel implements IApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: GiaiQuyetHoSoTheoHuyenViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GiaiQuyetHoSoTheoHuyenViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGiaiQuyetHoSoTheoHuyenViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: GiaiQuyetHoSoTheoHuyenViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GiaiQuyetHoSoTheoHuyenViewModel implements IGiaiQuyetHoSoTheoHuyenViewModel {
    donVi?: string | undefined;
    idDonVi?: string | undefined;
    tongSoHoSo?: number;
    hoSoHoanThanh?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoDangXuLy?: number;
    hoSoDangXuLySapHeHan?: number;
    hoSoDangXuLyQuaHan?: number;
    hoSoHuy?: number;
    hoSoYeuCauBoSung?: number;

    constructor(data?: IGiaiQuyetHoSoTheoHuyenViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.donVi = _data["donVi"];
            this.idDonVi = _data["idDonVi"];
            this.tongSoHoSo = _data["tongSoHoSo"];
            this.hoSoHoanThanh = _data["hoSoHoanThanh"];
            this.hoSoHoanThanhQuaHan = _data["hoSoHoanThanhQuaHan"];
            this.tongSoHoSoDangXuLy = _data["tongSoHoSoDangXuLy"];
            this.hoSoDangXuLySapHeHan = _data["hoSoDangXuLySapHeHan"];
            this.hoSoDangXuLyQuaHan = _data["hoSoDangXuLyQuaHan"];
            this.hoSoHuy = _data["hoSoHuy"];
            this.hoSoYeuCauBoSung = _data["hoSoYeuCauBoSung"];
        }
    }

    static fromJS(data: any): GiaiQuyetHoSoTheoHuyenViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new GiaiQuyetHoSoTheoHuyenViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["donVi"] = this.donVi;
        data["idDonVi"] = this.idDonVi;
        data["tongSoHoSo"] = this.tongSoHoSo;
        data["hoSoHoanThanh"] = this.hoSoHoanThanh;
        data["hoSoHoanThanhQuaHan"] = this.hoSoHoanThanhQuaHan;
        data["tongSoHoSoDangXuLy"] = this.tongSoHoSoDangXuLy;
        data["hoSoDangXuLySapHeHan"] = this.hoSoDangXuLySapHeHan;
        data["hoSoDangXuLyQuaHan"] = this.hoSoDangXuLyQuaHan;
        data["hoSoHuy"] = this.hoSoHuy;
        data["hoSoYeuCauBoSung"] = this.hoSoYeuCauBoSung;
        return data; 
    }
}

export interface IGiaiQuyetHoSoTheoHuyenViewModel {
    donVi?: string | undefined;
    idDonVi?: string | undefined;
    tongSoHoSo?: number;
    hoSoHoanThanh?: number;
    hoSoHoanThanhQuaHan?: number;
    tongSoHoSoDangXuLy?: number;
    hoSoDangXuLySapHeHan?: number;
    hoSoDangXuLyQuaHan?: number;
    hoSoHuy?: number;
    hoSoYeuCauBoSung?: number;
}

export class GiaiQuyetHoSoTheoHuyenQuery implements IGiaiQuyetHoSoTheoHuyenQuery {
    kyBaoCao?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    isTonKyTruoc?: boolean;
    isVpdk?: boolean;

    constructor(data?: IGiaiQuyetHoSoTheoHuyenQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.kyBaoCao = _data["kyBaoCao"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.thang = _data["thang"];
            this.quy = _data["quy"];
            this.nam = _data["nam"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
            this.isVpdk = _data["isVpdk"];
        }
    }

    static fromJS(data: any): GiaiQuyetHoSoTheoHuyenQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GiaiQuyetHoSoTheoHuyenQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["kyBaoCao"] = this.kyBaoCao;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["thang"] = this.thang;
        data["quy"] = this.quy;
        data["nam"] = this.nam;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        data["isVpdk"] = this.isVpdk;
        return data; 
    }
}

export interface IGiaiQuyetHoSoTheoHuyenQuery {
    kyBaoCao?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    isTonKyTruoc?: boolean;
    isVpdk?: boolean;
}

export class ChiTietGiaiQuyetHoSoTheoDonviQuery extends PagingRequest implements IChiTietGiaiQuyetHoSoTheoDonviQuery {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    hoSoChiTietBaoCaoType?: HoSoChiTietBaoCaoType;

    constructor(data?: IChiTietGiaiQuyetHoSoTheoDonviQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.kyBaoCao = _data["kyBaoCao"];
            this.idDvhc = _data["idDvhc"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.thang = _data["thang"];
            this.quy = _data["quy"];
            this.nam = _data["nam"];
            this.hoSoChiTietBaoCaoType = _data["hoSoChiTietBaoCaoType"];
        }
    }

    static fromJS(data: any): ChiTietGiaiQuyetHoSoTheoDonviQuery {
        data = typeof data === 'object' ? data : {};
        let result = new ChiTietGiaiQuyetHoSoTheoDonviQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["kyBaoCao"] = this.kyBaoCao;
        data["idDvhc"] = this.idDvhc;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["thang"] = this.thang;
        data["quy"] = this.quy;
        data["nam"] = this.nam;
        data["hoSoChiTietBaoCaoType"] = this.hoSoChiTietBaoCaoType;
        super.toJSON(data);
        return data; 
    }
}

export interface IChiTietGiaiQuyetHoSoTheoDonviQuery extends IPagingRequest {
    kyBaoCao?: string | undefined;
    idDvhc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    hoSoChiTietBaoCaoType?: HoSoChiTietBaoCaoType;
}

export class ChiTietGiaoDichHoSoDatDaiQuery extends PagingRequest implements IChiTietGiaoDichHoSoDatDaiQuery {
    idDvhc?: string | undefined;
    kyBaoCao?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    isTonKyTruoc?: boolean;
    giaoDichHoSoChiTietType?: GiaoDichHoSoChiTietType;
    isVpdk?: boolean;

    constructor(data?: IChiTietGiaoDichHoSoDatDaiQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.kyBaoCao = _data["kyBaoCao"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.thang = _data["thang"];
            this.quy = _data["quy"];
            this.nam = _data["nam"];
            this.isTonKyTruoc = _data["isTonKyTruoc"];
            this.giaoDichHoSoChiTietType = _data["giaoDichHoSoChiTietType"];
            this.isVpdk = _data["isVpdk"];
        }
    }

    static fromJS(data: any): ChiTietGiaoDichHoSoDatDaiQuery {
        data = typeof data === 'object' ? data : {};
        let result = new ChiTietGiaoDichHoSoDatDaiQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["kyBaoCao"] = this.kyBaoCao;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["thang"] = this.thang;
        data["quy"] = this.quy;
        data["nam"] = this.nam;
        data["isTonKyTruoc"] = this.isTonKyTruoc;
        data["giaoDichHoSoChiTietType"] = this.giaoDichHoSoChiTietType;
        data["isVpdk"] = this.isVpdk;
        super.toJSON(data);
        return data; 
    }
}

export interface IChiTietGiaoDichHoSoDatDaiQuery extends IPagingRequest {
    idDvhc?: string | undefined;
    kyBaoCao?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    thang?: number;
    quy?: number;
    nam?: number;
    isTonKyTruoc?: boolean;
    giaoDichHoSoChiTietType?: GiaoDichHoSoChiTietType;
    isVpdk?: boolean;
}

export enum GiaoDichHoSoChiTietType {
    TongHoSo = 0,
    DangXuLy = 1,
    DangXuLySapQuaHan = 2,
    DangXuLyQuaHan = 3,
    HoanThanh = 4,
    HoanThanhTreHan = 5,
    HoSoHuy = 6,
    YeuCauBoSung = 7,
}

export class ChiTietBaoCaoHoSoTheoChuyenVienQuery extends PagingRequest implements IChiTietBaoCaoHoSoTheoChuyenVienQuery {
    idQuanHuyen?: string | undefined;
    idPhongBan?: string | undefined;
    idNguoiXuLy?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    hoSoChiTietType?: HoSoChiTietBaoCaoType;

    constructor(data?: IChiTietBaoCaoHoSoTheoChuyenVienQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhongBan = _data["idPhongBan"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.hoSoChiTietType = _data["hoSoChiTietType"];
        }
    }

    static fromJS(data: any): ChiTietBaoCaoHoSoTheoChuyenVienQuery {
        data = typeof data === 'object' ? data : {};
        let result = new ChiTietBaoCaoHoSoTheoChuyenVienQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhongBan"] = this.idPhongBan;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["hoSoChiTietType"] = this.hoSoChiTietType;
        super.toJSON(data);
        return data; 
    }
}

export interface IChiTietBaoCaoHoSoTheoChuyenVienQuery extends IPagingRequest {
    idQuanHuyen?: string | undefined;
    idPhongBan?: string | undefined;
    idNguoiXuLy?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    hoSoChiTietType?: HoSoChiTietBaoCaoType;
}

export class ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel implements IApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfBaoCaoTongHopHoSoCanXuLyViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfBaoCaoTongHopHoSoCanXuLyViewModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfBaoCaoTongHopHoSoCanXuLyViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfBaoCaoTongHopHoSoCanXuLyViewModel implements IPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: BaoCaoTongHopHoSoCanXuLyViewModel[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(BaoCaoTongHopHoSoCanXuLyViewModel.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfBaoCaoTongHopHoSoCanXuLyViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfBaoCaoTongHopHoSoCanXuLyViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfBaoCaoTongHopHoSoCanXuLyViewModel {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: BaoCaoTongHopHoSoCanXuLyViewModel[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class BaoCaoTongHopHoSoCanXuLyViewModel implements IBaoCaoTongHopHoSoCanXuLyViewModel {
    idNguoiXuLy?: string | undefined;
    chuyenVien?: string | undefined;
    huyen?: string | undefined;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoTonDong?: number;

    constructor(data?: IBaoCaoTongHopHoSoCanXuLyViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.chuyenVien = _data["chuyenVien"];
            this.huyen = _data["huyen"];
            this.hoSoDangXuLyTrongHan = _data["hoSoDangXuLyTrongHan"];
            this.hoSoDangXuLyQuaHan = _data["hoSoDangXuLyQuaHan"];
            this.tongSoHoSoTonDong = _data["tongSoHoSoTonDong"];
        }
    }

    static fromJS(data: any): BaoCaoTongHopHoSoCanXuLyViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoTongHopHoSoCanXuLyViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["chuyenVien"] = this.chuyenVien;
        data["huyen"] = this.huyen;
        data["hoSoDangXuLyTrongHan"] = this.hoSoDangXuLyTrongHan;
        data["hoSoDangXuLyQuaHan"] = this.hoSoDangXuLyQuaHan;
        data["tongSoHoSoTonDong"] = this.tongSoHoSoTonDong;
        return data; 
    }
}

export interface IBaoCaoTongHopHoSoCanXuLyViewModel {
    idNguoiXuLy?: string | undefined;
    chuyenVien?: string | undefined;
    huyen?: string | undefined;
    hoSoDangXuLyTrongHan?: number;
    hoSoDangXuLyQuaHan?: number;
    tongSoHoSoTonDong?: number;
}

export class BaoCaoTongHopHoSoCanXuLyQuery extends PagingRequest implements IBaoCaoTongHopHoSoCanXuLyQuery {
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    idTrangThaiHoSo?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;

    constructor(data?: IBaoCaoTongHopHoSoCanXuLyQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            if (Array.isArray(_data["dsIdNguoiXuLy"])) {
                this.dsIdNguoiXuLy = [] as any;
                for (let item of _data["dsIdNguoiXuLy"])
                    this.dsIdNguoiXuLy!.push(item);
            }
        }
    }

    static fromJS(data: any): BaoCaoTongHopHoSoCanXuLyQuery {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoTongHopHoSoCanXuLyQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        if (Array.isArray(this.dsIdNguoiXuLy)) {
            data["dsIdNguoiXuLy"] = [];
            for (let item of this.dsIdNguoiXuLy)
                data["dsIdNguoiXuLy"].push(item);
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IBaoCaoTongHopHoSoCanXuLyQuery extends IPagingRequest {
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    idTrangThaiHoSo?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
}

export class CreateHoSoDangKyMoiCommand implements ICreateHoSoDangKyMoiCommand {
    idHoSo?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    dangKyMoi?: CreateThongTinDangKyCommand[] | undefined;

    constructor(data?: ICreateHoSoDangKyMoiCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.loaiDangKy = _data["loaiDangKy"];
            this.nguonDangKy = _data["nguonDangKy"];
            if (Array.isArray(_data["dangKyMoi"])) {
                this.dangKyMoi = [] as any;
                for (let item of _data["dangKyMoi"])
                    this.dangKyMoi!.push(CreateThongTinDangKyCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateHoSoDangKyMoiCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateHoSoDangKyMoiCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["loaiDangKy"] = this.loaiDangKy;
        data["nguonDangKy"] = this.nguonDangKy;
        if (Array.isArray(this.dangKyMoi)) {
            data["dangKyMoi"] = [];
            for (let item of this.dangKyMoi)
                data["dangKyMoi"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateHoSoDangKyMoiCommand {
    idHoSo?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    dangKyMoi?: CreateThongTinDangKyCommand[] | undefined;
}

export class CreateThongTinDangKyCommand implements ICreateThongTinDangKyCommand {
    idChuSDThuaDat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    tentrangthai?: string | undefined;

    constructor(data?: ICreateThongTinDangKyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idChuSDThuaDat = _data["idChuSDThuaDat"];
            this.idthuadat = _data["idthuadat"];
            this.idchusudung = _data["idchusudung"];
            this.idhoso = _data["idhoso"];
            this.tenChu = _data["tenChu"];
            this.soDinhDanh = _data["soDinhDanh"];
            this.ngaySinh = _data["ngaySinh"];
            this.diaChi = _data["diaChi"];
            this.soTo = _data["soTo"];
            this.soThuTuThua = _data["soThuTuThua"];
            this.idDvhc = _data["idDvhc"];
            this.tenDvhc = _data["tenDvhc"];
            this.dienTich = _data["dienTich"];
            this.mucDichSuDung = _data["mucDichSuDung"];
            this.soPhatHanh = _data["soPhatHanh"];
            this.soVaoSo = _data["soVaoSo"];
            this.tentrangthai = _data["tentrangthai"];
        }
    }

    static fromJS(data: any): CreateThongTinDangKyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateThongTinDangKyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idChuSDThuaDat"] = this.idChuSDThuaDat;
        data["idthuadat"] = this.idthuadat;
        data["idchusudung"] = this.idchusudung;
        data["idhoso"] = this.idhoso;
        data["tenChu"] = this.tenChu;
        data["soDinhDanh"] = this.soDinhDanh;
        data["ngaySinh"] = this.ngaySinh;
        data["diaChi"] = this.diaChi;
        data["soTo"] = this.soTo;
        data["soThuTuThua"] = this.soThuTuThua;
        data["idDvhc"] = this.idDvhc;
        data["tenDvhc"] = this.tenDvhc;
        data["dienTich"] = this.dienTich;
        data["mucDichSuDung"] = this.mucDichSuDung;
        data["soPhatHanh"] = this.soPhatHanh;
        data["soVaoSo"] = this.soVaoSo;
        data["tentrangthai"] = this.tentrangthai;
        return data; 
    }
}

export interface ICreateThongTinDangKyCommand {
    idChuSDThuaDat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    tentrangthai?: string | undefined;
}

export class ApiResultOfCreateOrEditPhieuChuyenDto implements IApiResultOfCreateOrEditPhieuChuyenDto {
    isError?: boolean;
    message?: string | undefined;
    data?: CreateOrEditPhieuChuyenDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfCreateOrEditPhieuChuyenDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? CreateOrEditPhieuChuyenDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfCreateOrEditPhieuChuyenDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfCreateOrEditPhieuChuyenDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfCreateOrEditPhieuChuyenDto {
    isError?: boolean;
    message?: string | undefined;
    data?: CreateOrEditPhieuChuyenDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CreateOrEditPhieuChuyenDto implements ICreateOrEditPhieuChuyenDto {
    idHoSoDangKy?: string | undefined;
    idPhieuChuyenThue?: string | undefined;

    constructor(data?: ICreateOrEditPhieuChuyenDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSoDangKy = _data["idHoSoDangKy"];
            this.idPhieuChuyenThue = _data["idPhieuChuyenThue"];
        }
    }

    static fromJS(data: any): CreateOrEditPhieuChuyenDto {
        data = typeof data === 'object' ? data : {};
        let result = new CreateOrEditPhieuChuyenDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSoDangKy"] = this.idHoSoDangKy;
        data["idPhieuChuyenThue"] = this.idPhieuChuyenThue;
        return data; 
    }
}

export interface ICreateOrEditPhieuChuyenDto {
    idHoSoDangKy?: string | undefined;
    idPhieuChuyenThue?: string | undefined;
}

export class CreateOrUpdatePhieuChuyenNvtcThuCongCommand implements ICreateOrUpdatePhieuChuyenNvtcThuCongCommand {
    idHoSo?: string | undefined;
    idHoSoDangKy?: string | undefined;
    actionMode?: ActionMode;
    thongTinChung?: AddThongTinChungCommand | undefined;
    nvtc?: AddNvtcCommand | undefined;
    listDoiTuongGiaoDich?: AddDoiTuongGiaoDichCommand[] | undefined;
    thongTinThuaDat?: AddThongTinThuaDatCommand | undefined;
    listThongTinTaiSan?: AddThongTinTaiSanCommand[] | undefined;
    thongTinBienDong?: AddThongTinChuyenNhuongCommand | undefined;
    listDoiTuongMienGiam?: AddThongTinMienGiamCommand[] | undefined;

    constructor(data?: ICreateOrUpdatePhieuChuyenNvtcThuCongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idHoSoDangKy = _data["idHoSoDangKy"];
            this.actionMode = _data["actionMode"];
            this.thongTinChung = _data["thongTinChung"] ? AddThongTinChungCommand.fromJS(_data["thongTinChung"]) : <any>undefined;
            this.nvtc = _data["nvtc"] ? AddNvtcCommand.fromJS(_data["nvtc"]) : <any>undefined;
            if (Array.isArray(_data["listDoiTuongGiaoDich"])) {
                this.listDoiTuongGiaoDich = [] as any;
                for (let item of _data["listDoiTuongGiaoDich"])
                    this.listDoiTuongGiaoDich!.push(AddDoiTuongGiaoDichCommand.fromJS(item));
            }
            this.thongTinThuaDat = _data["thongTinThuaDat"] ? AddThongTinThuaDatCommand.fromJS(_data["thongTinThuaDat"]) : <any>undefined;
            if (Array.isArray(_data["listThongTinTaiSan"])) {
                this.listThongTinTaiSan = [] as any;
                for (let item of _data["listThongTinTaiSan"])
                    this.listThongTinTaiSan!.push(AddThongTinTaiSanCommand.fromJS(item));
            }
            this.thongTinBienDong = _data["thongTinBienDong"] ? AddThongTinChuyenNhuongCommand.fromJS(_data["thongTinBienDong"]) : <any>undefined;
            if (Array.isArray(_data["listDoiTuongMienGiam"])) {
                this.listDoiTuongMienGiam = [] as any;
                for (let item of _data["listDoiTuongMienGiam"])
                    this.listDoiTuongMienGiam!.push(AddThongTinMienGiamCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateOrUpdatePhieuChuyenNvtcThuCongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateOrUpdatePhieuChuyenNvtcThuCongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idHoSoDangKy"] = this.idHoSoDangKy;
        data["actionMode"] = this.actionMode;
        data["thongTinChung"] = this.thongTinChung ? this.thongTinChung.toJSON() : <any>undefined;
        data["nvtc"] = this.nvtc ? this.nvtc.toJSON() : <any>undefined;
        if (Array.isArray(this.listDoiTuongGiaoDich)) {
            data["listDoiTuongGiaoDich"] = [];
            for (let item of this.listDoiTuongGiaoDich)
                data["listDoiTuongGiaoDich"].push(item.toJSON());
        }
        data["thongTinThuaDat"] = this.thongTinThuaDat ? this.thongTinThuaDat.toJSON() : <any>undefined;
        if (Array.isArray(this.listThongTinTaiSan)) {
            data["listThongTinTaiSan"] = [];
            for (let item of this.listThongTinTaiSan)
                data["listThongTinTaiSan"].push(item.toJSON());
        }
        data["thongTinBienDong"] = this.thongTinBienDong ? this.thongTinBienDong.toJSON() : <any>undefined;
        if (Array.isArray(this.listDoiTuongMienGiam)) {
            data["listDoiTuongMienGiam"] = [];
            for (let item of this.listDoiTuongMienGiam)
                data["listDoiTuongMienGiam"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateOrUpdatePhieuChuyenNvtcThuCongCommand {
    idHoSo?: string | undefined;
    idHoSoDangKy?: string | undefined;
    actionMode?: ActionMode;
    thongTinChung?: AddThongTinChungCommand | undefined;
    nvtc?: AddNvtcCommand | undefined;
    listDoiTuongGiaoDich?: AddDoiTuongGiaoDichCommand[] | undefined;
    thongTinThuaDat?: AddThongTinThuaDatCommand | undefined;
    listThongTinTaiSan?: AddThongTinTaiSanCommand[] | undefined;
    thongTinBienDong?: AddThongTinChuyenNhuongCommand | undefined;
    listDoiTuongMienGiam?: AddThongTinMienGiamCommand[] | undefined;
}

export enum ActionMode {
    Add = 0,
    Edit = 1,
}

export class AddThongTinChungCommand implements IAddThongTinChungCommand {
    soPhieu?: string | undefined;
    ngayChuyen?: Date | undefined;
    nguoiChuyen?: string | undefined;
    nguoiDuyet?: string | undefined;
    idDvhcGui?: string | undefined;
    maDvhcGui?: string | undefined;
    tenDvhcGui?: string | undefined;
    idDvhcNhan?: string | undefined;
    maDvhcNhan?: string | undefined;
    tenDvhcNhan?: string | undefined;
    maLoaiDeNghi?: string | undefined;
    tenLoaiDeNghi?: string | undefined;
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    maThongTinSoHuu?: string | undefined;
    tenThongTinSoHuu?: string | undefined;
    maVachGcn?: string | undefined;
    soGcn?: string | undefined;
    ngayCapGcn?: Date | undefined;
    noiCapGcn?: string | undefined;
    nguoiKyGcn?: string | undefined;
    hoSoPhapLy?: string | undefined;

    constructor(data?: IAddThongTinChungCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soPhieu = _data["soPhieu"];
            this.ngayChuyen = _data["ngayChuyen"] ? new Date(_data["ngayChuyen"].toString()) : <any>undefined;
            this.nguoiChuyen = _data["nguoiChuyen"];
            this.nguoiDuyet = _data["nguoiDuyet"];
            this.idDvhcGui = _data["idDvhcGui"];
            this.maDvhcGui = _data["maDvhcGui"];
            this.tenDvhcGui = _data["tenDvhcGui"];
            this.idDvhcNhan = _data["idDvhcNhan"];
            this.maDvhcNhan = _data["maDvhcNhan"];
            this.tenDvhcNhan = _data["tenDvhcNhan"];
            this.maLoaiDeNghi = _data["maLoaiDeNghi"];
            this.tenLoaiDeNghi = _data["tenLoaiDeNghi"];
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.maThongTinSoHuu = _data["maThongTinSoHuu"];
            this.tenThongTinSoHuu = _data["tenThongTinSoHuu"];
            this.maVachGcn = _data["maVachGcn"];
            this.soGcn = _data["soGcn"];
            this.ngayCapGcn = _data["ngayCapGcn"] ? new Date(_data["ngayCapGcn"].toString()) : <any>undefined;
            this.noiCapGcn = _data["noiCapGcn"];
            this.nguoiKyGcn = _data["nguoiKyGcn"];
            this.hoSoPhapLy = _data["hoSoPhapLy"];
        }
    }

    static fromJS(data: any): AddThongTinChungCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinChungCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soPhieu"] = this.soPhieu;
        data["ngayChuyen"] = this.ngayChuyen ? this.ngayChuyen.toISOString() : <any>undefined;
        data["nguoiChuyen"] = this.nguoiChuyen;
        data["nguoiDuyet"] = this.nguoiDuyet;
        data["idDvhcGui"] = this.idDvhcGui;
        data["maDvhcGui"] = this.maDvhcGui;
        data["tenDvhcGui"] = this.tenDvhcGui;
        data["idDvhcNhan"] = this.idDvhcNhan;
        data["maDvhcNhan"] = this.maDvhcNhan;
        data["tenDvhcNhan"] = this.tenDvhcNhan;
        data["maLoaiDeNghi"] = this.maLoaiDeNghi;
        data["tenLoaiDeNghi"] = this.tenLoaiDeNghi;
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["maThongTinSoHuu"] = this.maThongTinSoHuu;
        data["tenThongTinSoHuu"] = this.tenThongTinSoHuu;
        data["maVachGcn"] = this.maVachGcn;
        data["soGcn"] = this.soGcn;
        data["ngayCapGcn"] = this.ngayCapGcn ? this.ngayCapGcn.toISOString() : <any>undefined;
        data["noiCapGcn"] = this.noiCapGcn;
        data["nguoiKyGcn"] = this.nguoiKyGcn;
        data["hoSoPhapLy"] = this.hoSoPhapLy;
        return data; 
    }
}

export interface IAddThongTinChungCommand {
    soPhieu?: string | undefined;
    ngayChuyen?: Date | undefined;
    nguoiChuyen?: string | undefined;
    nguoiDuyet?: string | undefined;
    idDvhcGui?: string | undefined;
    maDvhcGui?: string | undefined;
    tenDvhcGui?: string | undefined;
    idDvhcNhan?: string | undefined;
    maDvhcNhan?: string | undefined;
    tenDvhcNhan?: string | undefined;
    maLoaiDeNghi?: string | undefined;
    tenLoaiDeNghi?: string | undefined;
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    maThongTinSoHuu?: string | undefined;
    tenThongTinSoHuu?: string | undefined;
    maVachGcn?: string | undefined;
    soGcn?: string | undefined;
    ngayCapGcn?: Date | undefined;
    noiCapGcn?: string | undefined;
    nguoiKyGcn?: string | undefined;
    hoSoPhapLy?: string | undefined;
}

export class AddNvtcCommand implements IAddNvtcCommand {
    isLePhiTruocBa?: boolean;
    isTienSuDungDat?: boolean;
    isThueThuNhapCaNhan?: boolean;
    isTienThueDatMatNuoc?: boolean;

    constructor(data?: IAddNvtcCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isLePhiTruocBa = _data["isLePhiTruocBa"];
            this.isTienSuDungDat = _data["isTienSuDungDat"];
            this.isThueThuNhapCaNhan = _data["isThueThuNhapCaNhan"];
            this.isTienThueDatMatNuoc = _data["isTienThueDatMatNuoc"];
        }
    }

    static fromJS(data: any): AddNvtcCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddNvtcCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isLePhiTruocBa"] = this.isLePhiTruocBa;
        data["isTienSuDungDat"] = this.isTienSuDungDat;
        data["isThueThuNhapCaNhan"] = this.isThueThuNhapCaNhan;
        data["isTienThueDatMatNuoc"] = this.isTienThueDatMatNuoc;
        return data; 
    }
}

export interface IAddNvtcCommand {
    isLePhiTruocBa?: boolean;
    isTienSuDungDat?: boolean;
    isThueThuNhapCaNhan?: boolean;
    isTienThueDatMatNuoc?: boolean;
}

export class AddDoiTuongGiaoDichCommand implements IAddDoiTuongGiaoDichCommand {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    ngayCap?: Date | undefined;
    noiCap?: string | undefined;
    dienThoai?: string | undefined;
    fax?: string | undefined;
    email?: string | undefined;
    mst?: string | undefined;
    diaChi?: string | undefined;
    maLoaiDoiTuong?: string | undefined;
    tenLoaiDoiTuong?: string | undefined;
    maMienGiam?: string | undefined;
    tenMienGiam?: string | undefined;
    maLoaiGiayTo?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    idTinh?: string | undefined;
    maTinh?: string | undefined;
    tenTinh?: string | undefined;
    idQuanHuyen?: string | undefined;
    maQuanHuyen?: string | undefined;
    tenQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    maPhuongXa?: string | undefined;
    tenPhuongXa?: string | undefined;
    tyLeSoHuu?: string | undefined;
    loaiDoiTuongGiaoDich?: LoaiDoiTuongGiaoDich;
    tenBenGiaoDich?: string | undefined;

    constructor(data?: IAddDoiTuongGiaoDichCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soGiayTo = _data["soGiayTo"];
            this.ngayCap = _data["ngayCap"] ? new Date(_data["ngayCap"].toString()) : <any>undefined;
            this.noiCap = _data["noiCap"];
            this.dienThoai = _data["dienThoai"];
            this.fax = _data["fax"];
            this.email = _data["email"];
            this.mst = _data["mst"];
            this.diaChi = _data["diaChi"];
            this.maLoaiDoiTuong = _data["maLoaiDoiTuong"];
            this.tenLoaiDoiTuong = _data["tenLoaiDoiTuong"];
            this.maMienGiam = _data["maMienGiam"];
            this.tenMienGiam = _data["tenMienGiam"];
            this.maLoaiGiayTo = _data["maLoaiGiayTo"];
            this.tenLoaiGiayTo = _data["tenLoaiGiayTo"];
            this.idTinh = _data["idTinh"];
            this.maTinh = _data["maTinh"];
            this.tenTinh = _data["tenTinh"];
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.maQuanHuyen = _data["maQuanHuyen"];
            this.tenQuanHuyen = _data["tenQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.maPhuongXa = _data["maPhuongXa"];
            this.tenPhuongXa = _data["tenPhuongXa"];
            this.tyLeSoHuu = _data["tyLeSoHuu"];
            this.loaiDoiTuongGiaoDich = _data["loaiDoiTuongGiaoDich"];
            this.tenBenGiaoDich = _data["tenBenGiaoDich"];
        }
    }

    static fromJS(data: any): AddDoiTuongGiaoDichCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDoiTuongGiaoDichCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soGiayTo"] = this.soGiayTo;
        data["ngayCap"] = this.ngayCap ? this.ngayCap.toISOString() : <any>undefined;
        data["noiCap"] = this.noiCap;
        data["dienThoai"] = this.dienThoai;
        data["fax"] = this.fax;
        data["email"] = this.email;
        data["mst"] = this.mst;
        data["diaChi"] = this.diaChi;
        data["maLoaiDoiTuong"] = this.maLoaiDoiTuong;
        data["tenLoaiDoiTuong"] = this.tenLoaiDoiTuong;
        data["maMienGiam"] = this.maMienGiam;
        data["tenMienGiam"] = this.tenMienGiam;
        data["maLoaiGiayTo"] = this.maLoaiGiayTo;
        data["tenLoaiGiayTo"] = this.tenLoaiGiayTo;
        data["idTinh"] = this.idTinh;
        data["maTinh"] = this.maTinh;
        data["tenTinh"] = this.tenTinh;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["maQuanHuyen"] = this.maQuanHuyen;
        data["tenQuanHuyen"] = this.tenQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["maPhuongXa"] = this.maPhuongXa;
        data["tenPhuongXa"] = this.tenPhuongXa;
        data["tyLeSoHuu"] = this.tyLeSoHuu;
        data["loaiDoiTuongGiaoDich"] = this.loaiDoiTuongGiaoDich;
        data["tenBenGiaoDich"] = this.tenBenGiaoDich;
        return data; 
    }
}

export interface IAddDoiTuongGiaoDichCommand {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    ngayCap?: Date | undefined;
    noiCap?: string | undefined;
    dienThoai?: string | undefined;
    fax?: string | undefined;
    email?: string | undefined;
    mst?: string | undefined;
    diaChi?: string | undefined;
    maLoaiDoiTuong?: string | undefined;
    tenLoaiDoiTuong?: string | undefined;
    maMienGiam?: string | undefined;
    tenMienGiam?: string | undefined;
    maLoaiGiayTo?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    idTinh?: string | undefined;
    maTinh?: string | undefined;
    tenTinh?: string | undefined;
    idQuanHuyen?: string | undefined;
    maQuanHuyen?: string | undefined;
    tenQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    maPhuongXa?: string | undefined;
    tenPhuongXa?: string | undefined;
    tyLeSoHuu?: string | undefined;
    loaiDoiTuongGiaoDich?: LoaiDoiTuongGiaoDich;
    tenBenGiaoDich?: string | undefined;
}

export enum LoaiDoiTuongGiaoDich {
    NguoiMua = 0,
    NguoiBan = 1,
    NguoiDaiDien = 2,
}

export class AddThongTinThuaDatCommand implements IAddThongTinThuaDatCommand {
    soTo?: string | undefined;
    soThua?: string | undefined;
    dienTich?: string | undefined;
    diaChi?: string | undefined;
    idTinh?: string | undefined;
    maTinh?: string | undefined;
    tenTinh?: string | undefined;
    idQuanHuyen?: string | undefined;
    maQuanHuyen?: string | undefined;
    tenQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    maPhuongXa?: string | undefined;
    tenPhuongXa?: string | undefined;
    listThongTinChiTietThuaDat?: AddThongTinChiTietThuaDatCommand[] | undefined;
    thongTinGhiNo?: AddThongTinGhiNoCommand | undefined;

    constructor(data?: IAddThongTinThuaDatCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.dienTich = _data["dienTich"];
            this.diaChi = _data["diaChi"];
            this.idTinh = _data["idTinh"];
            this.maTinh = _data["maTinh"];
            this.tenTinh = _data["tenTinh"];
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.maQuanHuyen = _data["maQuanHuyen"];
            this.tenQuanHuyen = _data["tenQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.maPhuongXa = _data["maPhuongXa"];
            this.tenPhuongXa = _data["tenPhuongXa"];
            if (Array.isArray(_data["listThongTinChiTietThuaDat"])) {
                this.listThongTinChiTietThuaDat = [] as any;
                for (let item of _data["listThongTinChiTietThuaDat"])
                    this.listThongTinChiTietThuaDat!.push(AddThongTinChiTietThuaDatCommand.fromJS(item));
            }
            this.thongTinGhiNo = _data["thongTinGhiNo"] ? AddThongTinGhiNoCommand.fromJS(_data["thongTinGhiNo"]) : <any>undefined;
        }
    }

    static fromJS(data: any): AddThongTinThuaDatCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinThuaDatCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["dienTich"] = this.dienTich;
        data["diaChi"] = this.diaChi;
        data["idTinh"] = this.idTinh;
        data["maTinh"] = this.maTinh;
        data["tenTinh"] = this.tenTinh;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["maQuanHuyen"] = this.maQuanHuyen;
        data["tenQuanHuyen"] = this.tenQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["maPhuongXa"] = this.maPhuongXa;
        data["tenPhuongXa"] = this.tenPhuongXa;
        if (Array.isArray(this.listThongTinChiTietThuaDat)) {
            data["listThongTinChiTietThuaDat"] = [];
            for (let item of this.listThongTinChiTietThuaDat)
                data["listThongTinChiTietThuaDat"].push(item.toJSON());
        }
        data["thongTinGhiNo"] = this.thongTinGhiNo ? this.thongTinGhiNo.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IAddThongTinThuaDatCommand {
    soTo?: string | undefined;
    soThua?: string | undefined;
    dienTich?: string | undefined;
    diaChi?: string | undefined;
    idTinh?: string | undefined;
    maTinh?: string | undefined;
    tenTinh?: string | undefined;
    idQuanHuyen?: string | undefined;
    maQuanHuyen?: string | undefined;
    tenQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    maPhuongXa?: string | undefined;
    tenPhuongXa?: string | undefined;
    listThongTinChiTietThuaDat?: AddThongTinChiTietThuaDatCommand[] | undefined;
    thongTinGhiNo?: AddThongTinGhiNoCommand | undefined;
}

export class AddThongTinChiTietThuaDatCommand implements IAddThongTinChiTietThuaDatCommand {
    thongTinLoaiDat?: AddThongTinLoaiDatCommand | undefined;
    listThongTinViTri?: AddThongTinViTriCommand[] | undefined;
    thongTinGiaoDat?: AddThongTinGiaoDatCommand | undefined;
    thongTinThueDat?: AddThongTinThueDatCommand | undefined;

    constructor(data?: IAddThongTinChiTietThuaDatCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.thongTinLoaiDat = _data["thongTinLoaiDat"] ? AddThongTinLoaiDatCommand.fromJS(_data["thongTinLoaiDat"]) : <any>undefined;
            if (Array.isArray(_data["listThongTinViTri"])) {
                this.listThongTinViTri = [] as any;
                for (let item of _data["listThongTinViTri"])
                    this.listThongTinViTri!.push(AddThongTinViTriCommand.fromJS(item));
            }
            this.thongTinGiaoDat = _data["thongTinGiaoDat"] ? AddThongTinGiaoDatCommand.fromJS(_data["thongTinGiaoDat"]) : <any>undefined;
            this.thongTinThueDat = _data["thongTinThueDat"] ? AddThongTinThueDatCommand.fromJS(_data["thongTinThueDat"]) : <any>undefined;
        }
    }

    static fromJS(data: any): AddThongTinChiTietThuaDatCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinChiTietThuaDatCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["thongTinLoaiDat"] = this.thongTinLoaiDat ? this.thongTinLoaiDat.toJSON() : <any>undefined;
        if (Array.isArray(this.listThongTinViTri)) {
            data["listThongTinViTri"] = [];
            for (let item of this.listThongTinViTri)
                data["listThongTinViTri"].push(item.toJSON());
        }
        data["thongTinGiaoDat"] = this.thongTinGiaoDat ? this.thongTinGiaoDat.toJSON() : <any>undefined;
        data["thongTinThueDat"] = this.thongTinThueDat ? this.thongTinThueDat.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IAddThongTinChiTietThuaDatCommand {
    thongTinLoaiDat?: AddThongTinLoaiDatCommand | undefined;
    listThongTinViTri?: AddThongTinViTriCommand[] | undefined;
    thongTinGiaoDat?: AddThongTinGiaoDatCommand | undefined;
    thongTinThueDat?: AddThongTinThueDatCommand | undefined;
}

export class AddThongTinLoaiDatCommand implements IAddThongTinLoaiDatCommand {
    maLoaiDat?: string | undefined;
    tenLoaiDat?: string | undefined;
    maMucDichSuDung?: string | undefined;
    tenMucDichSuDung?: string | undefined;
    maHinhThucSuDungDat?: string | undefined;
    tenHinhThucSuDungDat?: string | undefined;
    dienTichChung?: number | undefined;
    dienTichRieng?: number | undefined;
    dienTichTrongHanMuc?: number | undefined;
    dienTichNgoaiHanMuc?: number | undefined;
    dienTich?: number;
    maNguonGocDat?: string | undefined;
    tenNguonGocDat?: string | undefined;
    thoiDiemSuDungDat?: Date | undefined;
    thoiHanSuDungDat?: number | undefined;

    constructor(data?: IAddThongTinLoaiDatCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maLoaiDat = _data["maLoaiDat"];
            this.tenLoaiDat = _data["tenLoaiDat"];
            this.maMucDichSuDung = _data["maMucDichSuDung"];
            this.tenMucDichSuDung = _data["tenMucDichSuDung"];
            this.maHinhThucSuDungDat = _data["maHinhThucSuDungDat"];
            this.tenHinhThucSuDungDat = _data["tenHinhThucSuDungDat"];
            this.dienTichChung = _data["dienTichChung"];
            this.dienTichRieng = _data["dienTichRieng"];
            this.dienTichTrongHanMuc = _data["dienTichTrongHanMuc"];
            this.dienTichNgoaiHanMuc = _data["dienTichNgoaiHanMuc"];
            this.dienTich = _data["dienTich"];
            this.maNguonGocDat = _data["maNguonGocDat"];
            this.tenNguonGocDat = _data["tenNguonGocDat"];
            this.thoiDiemSuDungDat = _data["thoiDiemSuDungDat"] ? new Date(_data["thoiDiemSuDungDat"].toString()) : <any>undefined;
            this.thoiHanSuDungDat = _data["thoiHanSuDungDat"];
        }
    }

    static fromJS(data: any): AddThongTinLoaiDatCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinLoaiDatCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLoaiDat"] = this.maLoaiDat;
        data["tenLoaiDat"] = this.tenLoaiDat;
        data["maMucDichSuDung"] = this.maMucDichSuDung;
        data["tenMucDichSuDung"] = this.tenMucDichSuDung;
        data["maHinhThucSuDungDat"] = this.maHinhThucSuDungDat;
        data["tenHinhThucSuDungDat"] = this.tenHinhThucSuDungDat;
        data["dienTichChung"] = this.dienTichChung;
        data["dienTichRieng"] = this.dienTichRieng;
        data["dienTichTrongHanMuc"] = this.dienTichTrongHanMuc;
        data["dienTichNgoaiHanMuc"] = this.dienTichNgoaiHanMuc;
        data["dienTich"] = this.dienTich;
        data["maNguonGocDat"] = this.maNguonGocDat;
        data["tenNguonGocDat"] = this.tenNguonGocDat;
        data["thoiDiemSuDungDat"] = this.thoiDiemSuDungDat ? this.thoiDiemSuDungDat.toISOString() : <any>undefined;
        data["thoiHanSuDungDat"] = this.thoiHanSuDungDat;
        return data; 
    }
}

export interface IAddThongTinLoaiDatCommand {
    maLoaiDat?: string | undefined;
    tenLoaiDat?: string | undefined;
    maMucDichSuDung?: string | undefined;
    tenMucDichSuDung?: string | undefined;
    maHinhThucSuDungDat?: string | undefined;
    tenHinhThucSuDungDat?: string | undefined;
    dienTichChung?: number | undefined;
    dienTichRieng?: number | undefined;
    dienTichTrongHanMuc?: number | undefined;
    dienTichNgoaiHanMuc?: number | undefined;
    dienTich?: number;
    maNguonGocDat?: string | undefined;
    tenNguonGocDat?: string | undefined;
    thoiDiemSuDungDat?: Date | undefined;
    thoiHanSuDungDat?: number | undefined;
}

export class AddThongTinViTriCommand implements IAddThongTinViTriCommand {
    maMucDichSuDung?: string | undefined;
    tenMucDichSuDung?: string | undefined;
    maMucDichSuDungTruocChuyenDoi?: string | undefined;
    tenMucDichSuDungTruocChuyenDoi?: string | undefined;
    idDuong?: string | undefined;
    maDuong?: string | undefined;
    tenDuong?: string | undefined;
    idDoanDuong?: string | undefined;
    maDoanDuong?: string | undefined;
    tenDoanDuong?: string | undefined;
    maKhuVuc?: string | undefined;
    tenKhuVuc?: string | undefined;
    idViTri?: string | undefined;
    maViTri?: string | undefined;
    tenViTri?: string | undefined;
    idViTriTruocChuyenDoi?: string | undefined;
    maViTriTruocChuyenDoi?: string | undefined;
    tenViTriTruocChuyenDoi?: string | undefined;
    dienTich?: number | undefined;
    dienTichHoanThanhLptb?: number | undefined;
    dienTichHoanThanhTncn?: number | undefined;
    dienTichHoanThanhTsdd?: number | undefined;
    idGiaDat?: string | undefined;
    giaDat?: number | undefined;
    doSau?: string | undefined;
    loaiHem?: string | undefined;

    constructor(data?: IAddThongTinViTriCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maMucDichSuDung = _data["maMucDichSuDung"];
            this.tenMucDichSuDung = _data["tenMucDichSuDung"];
            this.maMucDichSuDungTruocChuyenDoi = _data["maMucDichSuDungTruocChuyenDoi"];
            this.tenMucDichSuDungTruocChuyenDoi = _data["tenMucDichSuDungTruocChuyenDoi"];
            this.idDuong = _data["idDuong"];
            this.maDuong = _data["maDuong"];
            this.tenDuong = _data["tenDuong"];
            this.idDoanDuong = _data["idDoanDuong"];
            this.maDoanDuong = _data["maDoanDuong"];
            this.tenDoanDuong = _data["tenDoanDuong"];
            this.maKhuVuc = _data["maKhuVuc"];
            this.tenKhuVuc = _data["tenKhuVuc"];
            this.idViTri = _data["idViTri"];
            this.maViTri = _data["maViTri"];
            this.tenViTri = _data["tenViTri"];
            this.idViTriTruocChuyenDoi = _data["idViTriTruocChuyenDoi"];
            this.maViTriTruocChuyenDoi = _data["maViTriTruocChuyenDoi"];
            this.tenViTriTruocChuyenDoi = _data["tenViTriTruocChuyenDoi"];
            this.dienTich = _data["dienTich"];
            this.dienTichHoanThanhLptb = _data["dienTichHoanThanhLptb"];
            this.dienTichHoanThanhTncn = _data["dienTichHoanThanhTncn"];
            this.dienTichHoanThanhTsdd = _data["dienTichHoanThanhTsdd"];
            this.idGiaDat = _data["idGiaDat"];
            this.giaDat = _data["giaDat"];
            this.doSau = _data["doSau"];
            this.loaiHem = _data["loaiHem"];
        }
    }

    static fromJS(data: any): AddThongTinViTriCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinViTriCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maMucDichSuDung"] = this.maMucDichSuDung;
        data["tenMucDichSuDung"] = this.tenMucDichSuDung;
        data["maMucDichSuDungTruocChuyenDoi"] = this.maMucDichSuDungTruocChuyenDoi;
        data["tenMucDichSuDungTruocChuyenDoi"] = this.tenMucDichSuDungTruocChuyenDoi;
        data["idDuong"] = this.idDuong;
        data["maDuong"] = this.maDuong;
        data["tenDuong"] = this.tenDuong;
        data["idDoanDuong"] = this.idDoanDuong;
        data["maDoanDuong"] = this.maDoanDuong;
        data["tenDoanDuong"] = this.tenDoanDuong;
        data["maKhuVuc"] = this.maKhuVuc;
        data["tenKhuVuc"] = this.tenKhuVuc;
        data["idViTri"] = this.idViTri;
        data["maViTri"] = this.maViTri;
        data["tenViTri"] = this.tenViTri;
        data["idViTriTruocChuyenDoi"] = this.idViTriTruocChuyenDoi;
        data["maViTriTruocChuyenDoi"] = this.maViTriTruocChuyenDoi;
        data["tenViTriTruocChuyenDoi"] = this.tenViTriTruocChuyenDoi;
        data["dienTich"] = this.dienTich;
        data["dienTichHoanThanhLptb"] = this.dienTichHoanThanhLptb;
        data["dienTichHoanThanhTncn"] = this.dienTichHoanThanhTncn;
        data["dienTichHoanThanhTsdd"] = this.dienTichHoanThanhTsdd;
        data["idGiaDat"] = this.idGiaDat;
        data["giaDat"] = this.giaDat;
        data["doSau"] = this.doSau;
        data["loaiHem"] = this.loaiHem;
        return data; 
    }
}

export interface IAddThongTinViTriCommand {
    maMucDichSuDung?: string | undefined;
    tenMucDichSuDung?: string | undefined;
    maMucDichSuDungTruocChuyenDoi?: string | undefined;
    tenMucDichSuDungTruocChuyenDoi?: string | undefined;
    idDuong?: string | undefined;
    maDuong?: string | undefined;
    tenDuong?: string | undefined;
    idDoanDuong?: string | undefined;
    maDoanDuong?: string | undefined;
    tenDoanDuong?: string | undefined;
    maKhuVuc?: string | undefined;
    tenKhuVuc?: string | undefined;
    idViTri?: string | undefined;
    maViTri?: string | undefined;
    tenViTri?: string | undefined;
    idViTriTruocChuyenDoi?: string | undefined;
    maViTriTruocChuyenDoi?: string | undefined;
    tenViTriTruocChuyenDoi?: string | undefined;
    dienTich?: number | undefined;
    dienTichHoanThanhLptb?: number | undefined;
    dienTichHoanThanhTncn?: number | undefined;
    dienTichHoanThanhTsdd?: number | undefined;
    idGiaDat?: string | undefined;
    giaDat?: number | undefined;
    doSau?: string | undefined;
    loaiHem?: string | undefined;
}

export class AddThongTinGiaoDatCommand implements IAddThongTinGiaoDatCommand {
    doiTuongNopTsdd?: string | undefined;
    dienTichPhaiNop?: number | undefined;
    dienTichKhongPhaiNop?: number | undefined;
    dienTichTrongHanMuc?: number | undefined;
    dienTichNgoaiHanMuc?: number | undefined;
    dienTichNghiaTrang?: number | undefined;
    tienThueDatDaNop?: number | undefined;
    dienTichKhac?: number | undefined;
    tienBoiThuongGpmb?: number | undefined;
    giaAnDinh?: number | undefined;

    constructor(data?: IAddThongTinGiaoDatCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.doiTuongNopTsdd = _data["doiTuongNopTsdd"];
            this.dienTichPhaiNop = _data["dienTichPhaiNop"];
            this.dienTichKhongPhaiNop = _data["dienTichKhongPhaiNop"];
            this.dienTichTrongHanMuc = _data["dienTichTrongHanMuc"];
            this.dienTichNgoaiHanMuc = _data["dienTichNgoaiHanMuc"];
            this.dienTichNghiaTrang = _data["dienTichNghiaTrang"];
            this.tienThueDatDaNop = _data["tienThueDatDaNop"];
            this.dienTichKhac = _data["dienTichKhac"];
            this.tienBoiThuongGpmb = _data["tienBoiThuongGpmb"];
            this.giaAnDinh = _data["giaAnDinh"];
        }
    }

    static fromJS(data: any): AddThongTinGiaoDatCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinGiaoDatCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["doiTuongNopTsdd"] = this.doiTuongNopTsdd;
        data["dienTichPhaiNop"] = this.dienTichPhaiNop;
        data["dienTichKhongPhaiNop"] = this.dienTichKhongPhaiNop;
        data["dienTichTrongHanMuc"] = this.dienTichTrongHanMuc;
        data["dienTichNgoaiHanMuc"] = this.dienTichNgoaiHanMuc;
        data["dienTichNghiaTrang"] = this.dienTichNghiaTrang;
        data["tienThueDatDaNop"] = this.tienThueDatDaNop;
        data["dienTichKhac"] = this.dienTichKhac;
        data["tienBoiThuongGpmb"] = this.tienBoiThuongGpmb;
        data["giaAnDinh"] = this.giaAnDinh;
        return data; 
    }
}

export interface IAddThongTinGiaoDatCommand {
    doiTuongNopTsdd?: string | undefined;
    dienTichPhaiNop?: number | undefined;
    dienTichKhongPhaiNop?: number | undefined;
    dienTichTrongHanMuc?: number | undefined;
    dienTichNgoaiHanMuc?: number | undefined;
    dienTichNghiaTrang?: number | undefined;
    tienThueDatDaNop?: number | undefined;
    dienTichKhac?: number | undefined;
    tienBoiThuongGpmb?: number | undefined;
    giaAnDinh?: number | undefined;
}

export class AddThongTinThueDatCommand implements IAddThongTinThueDatCommand {
    hinhThucThue?: string | undefined;
    dienTich?: number | undefined;
    dienTichPhaiNop?: number | undefined;
    dienTichKhongPhaiNop?: number | undefined;
    dienTichMatNuoc?: number | undefined;
    dienTichCoDinh?: number | undefined;
    dienTichKhongCoDinh?: number | undefined;
    dienTichCongTrinhNgam?: number | undefined;
    traMotLan?: number | undefined;
    tienDuocTru?: number | undefined;
    tienGpmb?: number | undefined;
    mucDichSuDung?: string | undefined;
    viTriThue?: string | undefined;
    ngayBatDauThue?: Date | undefined;
    thoiHanThue?: number | undefined;

    constructor(data?: IAddThongTinThueDatCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hinhThucThue = _data["hinhThucThue"];
            this.dienTich = _data["dienTich"];
            this.dienTichPhaiNop = _data["dienTichPhaiNop"];
            this.dienTichKhongPhaiNop = _data["dienTichKhongPhaiNop"];
            this.dienTichMatNuoc = _data["dienTichMatNuoc"];
            this.dienTichCoDinh = _data["dienTichCoDinh"];
            this.dienTichKhongCoDinh = _data["dienTichKhongCoDinh"];
            this.dienTichCongTrinhNgam = _data["dienTichCongTrinhNgam"];
            this.traMotLan = _data["traMotLan"];
            this.tienDuocTru = _data["tienDuocTru"];
            this.tienGpmb = _data["tienGpmb"];
            this.mucDichSuDung = _data["mucDichSuDung"];
            this.viTriThue = _data["viTriThue"];
            this.ngayBatDauThue = _data["ngayBatDauThue"] ? new Date(_data["ngayBatDauThue"].toString()) : <any>undefined;
            this.thoiHanThue = _data["thoiHanThue"];
        }
    }

    static fromJS(data: any): AddThongTinThueDatCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinThueDatCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hinhThucThue"] = this.hinhThucThue;
        data["dienTich"] = this.dienTich;
        data["dienTichPhaiNop"] = this.dienTichPhaiNop;
        data["dienTichKhongPhaiNop"] = this.dienTichKhongPhaiNop;
        data["dienTichMatNuoc"] = this.dienTichMatNuoc;
        data["dienTichCoDinh"] = this.dienTichCoDinh;
        data["dienTichKhongCoDinh"] = this.dienTichKhongCoDinh;
        data["dienTichCongTrinhNgam"] = this.dienTichCongTrinhNgam;
        data["traMotLan"] = this.traMotLan;
        data["tienDuocTru"] = this.tienDuocTru;
        data["tienGpmb"] = this.tienGpmb;
        data["mucDichSuDung"] = this.mucDichSuDung;
        data["viTriThue"] = this.viTriThue;
        data["ngayBatDauThue"] = this.ngayBatDauThue ? this.ngayBatDauThue.toISOString() : <any>undefined;
        data["thoiHanThue"] = this.thoiHanThue;
        return data; 
    }
}

export interface IAddThongTinThueDatCommand {
    hinhThucThue?: string | undefined;
    dienTich?: number | undefined;
    dienTichPhaiNop?: number | undefined;
    dienTichKhongPhaiNop?: number | undefined;
    dienTichMatNuoc?: number | undefined;
    dienTichCoDinh?: number | undefined;
    dienTichKhongCoDinh?: number | undefined;
    dienTichCongTrinhNgam?: number | undefined;
    traMotLan?: number | undefined;
    tienDuocTru?: number | undefined;
    tienGpmb?: number | undefined;
    mucDichSuDung?: string | undefined;
    viTriThue?: string | undefined;
    ngayBatDauThue?: Date | undefined;
    thoiHanThue?: number | undefined;
}

export class AddThongTinGhiNoCommand implements IAddThongTinGhiNoCommand {
    dienTichGhiNoTsdd?: number | undefined;
    ngayGhiNoTsdd?: Date | undefined;
    noiDungGhiNoTsdd?: string | undefined;
    dienTichGhiNoLptb?: number | undefined;
    ngayGhiNoLptb?: Date | undefined;
    noiDungGhiNoLptb?: string | undefined;

    constructor(data?: IAddThongTinGhiNoCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.dienTichGhiNoTsdd = _data["dienTichGhiNoTsdd"];
            this.ngayGhiNoTsdd = _data["ngayGhiNoTsdd"] ? new Date(_data["ngayGhiNoTsdd"].toString()) : <any>undefined;
            this.noiDungGhiNoTsdd = _data["noiDungGhiNoTsdd"];
            this.dienTichGhiNoLptb = _data["dienTichGhiNoLptb"];
            this.ngayGhiNoLptb = _data["ngayGhiNoLptb"] ? new Date(_data["ngayGhiNoLptb"].toString()) : <any>undefined;
            this.noiDungGhiNoLptb = _data["noiDungGhiNoLptb"];
        }
    }

    static fromJS(data: any): AddThongTinGhiNoCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinGhiNoCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["dienTichGhiNoTsdd"] = this.dienTichGhiNoTsdd;
        data["ngayGhiNoTsdd"] = this.ngayGhiNoTsdd ? this.ngayGhiNoTsdd.toISOString() : <any>undefined;
        data["noiDungGhiNoTsdd"] = this.noiDungGhiNoTsdd;
        data["dienTichGhiNoLptb"] = this.dienTichGhiNoLptb;
        data["ngayGhiNoLptb"] = this.ngayGhiNoLptb ? this.ngayGhiNoLptb.toISOString() : <any>undefined;
        data["noiDungGhiNoLptb"] = this.noiDungGhiNoLptb;
        return data; 
    }
}

export interface IAddThongTinGhiNoCommand {
    dienTichGhiNoTsdd?: number | undefined;
    ngayGhiNoTsdd?: Date | undefined;
    noiDungGhiNoTsdd?: string | undefined;
    dienTichGhiNoLptb?: number | undefined;
    ngayGhiNoLptb?: Date | undefined;
    noiDungGhiNoLptb?: string | undefined;
}

export class AddThongTinTaiSanCommand implements IAddThongTinTaiSanCommand {
    idCapNha?: string | undefined;
    maCapNha?: string | undefined;
    tenCapNha?: string | undefined;
    idLoaiNha?: string | undefined;
    maLoaiNha?: string | undefined;
    tenLoaiNha?: string | undefined;
    maNguonGocNha?: string | undefined;
    tenNguonGocNha?: string | undefined;
    dienTichXayDung?: number | undefined;
    dienTichSanXayDung?: number | undefined;
    dienTichSoHuuChungCdt?: number | undefined;
    dienTichSoHuuChungNguoiSdd?: number | undefined;
    dienTichSoHuuRieng?: number | undefined;
    namHoanCong?: number | undefined;
    dienTichHoanThanhNvtc?: number | undefined;
    dienTichPhatTrienRiengLe?: number | undefined;
    dienTichPhatTrienKhongRiengLe?: number | undefined;
    ketCau?: string | undefined;
    soTang?: number | undefined;
    soTangHam?: number | undefined;
    tyLeChatLuongConLai?: number | undefined;
    thoiHanSoHuuNha?: string | undefined;
    coHoSoXacDinhNhaDat?: boolean | undefined;

    constructor(data?: IAddThongTinTaiSanCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idCapNha = _data["idCapNha"];
            this.maCapNha = _data["maCapNha"];
            this.tenCapNha = _data["tenCapNha"];
            this.idLoaiNha = _data["idLoaiNha"];
            this.maLoaiNha = _data["maLoaiNha"];
            this.tenLoaiNha = _data["tenLoaiNha"];
            this.maNguonGocNha = _data["maNguonGocNha"];
            this.tenNguonGocNha = _data["tenNguonGocNha"];
            this.dienTichXayDung = _data["dienTichXayDung"];
            this.dienTichSanXayDung = _data["dienTichSanXayDung"];
            this.dienTichSoHuuChungCdt = _data["dienTichSoHuuChungCdt"];
            this.dienTichSoHuuChungNguoiSdd = _data["dienTichSoHuuChungNguoiSdd"];
            this.dienTichSoHuuRieng = _data["dienTichSoHuuRieng"];
            this.namHoanCong = _data["namHoanCong"];
            this.dienTichHoanThanhNvtc = _data["dienTichHoanThanhNvtc"];
            this.dienTichPhatTrienRiengLe = _data["dienTichPhatTrienRiengLe"];
            this.dienTichPhatTrienKhongRiengLe = _data["dienTichPhatTrienKhongRiengLe"];
            this.ketCau = _data["ketCau"];
            this.soTang = _data["soTang"];
            this.soTangHam = _data["soTangHam"];
            this.tyLeChatLuongConLai = _data["tyLeChatLuongConLai"];
            this.thoiHanSoHuuNha = _data["thoiHanSoHuuNha"];
            this.coHoSoXacDinhNhaDat = _data["coHoSoXacDinhNhaDat"];
        }
    }

    static fromJS(data: any): AddThongTinTaiSanCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinTaiSanCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idCapNha"] = this.idCapNha;
        data["maCapNha"] = this.maCapNha;
        data["tenCapNha"] = this.tenCapNha;
        data["idLoaiNha"] = this.idLoaiNha;
        data["maLoaiNha"] = this.maLoaiNha;
        data["tenLoaiNha"] = this.tenLoaiNha;
        data["maNguonGocNha"] = this.maNguonGocNha;
        data["tenNguonGocNha"] = this.tenNguonGocNha;
        data["dienTichXayDung"] = this.dienTichXayDung;
        data["dienTichSanXayDung"] = this.dienTichSanXayDung;
        data["dienTichSoHuuChungCdt"] = this.dienTichSoHuuChungCdt;
        data["dienTichSoHuuChungNguoiSdd"] = this.dienTichSoHuuChungNguoiSdd;
        data["dienTichSoHuuRieng"] = this.dienTichSoHuuRieng;
        data["namHoanCong"] = this.namHoanCong;
        data["dienTichHoanThanhNvtc"] = this.dienTichHoanThanhNvtc;
        data["dienTichPhatTrienRiengLe"] = this.dienTichPhatTrienRiengLe;
        data["dienTichPhatTrienKhongRiengLe"] = this.dienTichPhatTrienKhongRiengLe;
        data["ketCau"] = this.ketCau;
        data["soTang"] = this.soTang;
        data["soTangHam"] = this.soTangHam;
        data["tyLeChatLuongConLai"] = this.tyLeChatLuongConLai;
        data["thoiHanSoHuuNha"] = this.thoiHanSoHuuNha;
        data["coHoSoXacDinhNhaDat"] = this.coHoSoXacDinhNhaDat;
        return data; 
    }
}

export interface IAddThongTinTaiSanCommand {
    idCapNha?: string | undefined;
    maCapNha?: string | undefined;
    tenCapNha?: string | undefined;
    idLoaiNha?: string | undefined;
    maLoaiNha?: string | undefined;
    tenLoaiNha?: string | undefined;
    maNguonGocNha?: string | undefined;
    tenNguonGocNha?: string | undefined;
    dienTichXayDung?: number | undefined;
    dienTichSanXayDung?: number | undefined;
    dienTichSoHuuChungCdt?: number | undefined;
    dienTichSoHuuChungNguoiSdd?: number | undefined;
    dienTichSoHuuRieng?: number | undefined;
    namHoanCong?: number | undefined;
    dienTichHoanThanhNvtc?: number | undefined;
    dienTichPhatTrienRiengLe?: number | undefined;
    dienTichPhatTrienKhongRiengLe?: number | undefined;
    ketCau?: string | undefined;
    soTang?: number | undefined;
    soTangHam?: number | undefined;
    tyLeChatLuongConLai?: number | undefined;
    thoiHanSoHuuNha?: string | undefined;
    coHoSoXacDinhNhaDat?: boolean | undefined;
}

export class AddThongTinChuyenNhuongCommand implements IAddThongTinChuyenNhuongCommand {
    maLoaiChuyenNhuong?: string | undefined;
    tenLoaiChuyenNhuong?: string | undefined;
    maLoaiBatDongSan?: string | undefined;
    tenLoaiBatDongSan?: string | undefined;
    soHopDongMuaBan?: string | undefined;
    ngayLap?: Date | undefined;
    noiLap?: string | undefined;
    noiChungThuc?: string | undefined;
    ngayChungThuc?: Date | undefined;
    tenChuDuAn?: string | undefined;
    soHopDong?: string | undefined;
    ngayHopDong?: Date | undefined;
    tongGiaBanTrenHd?: number | undefined;
    giaBanNhaTrenHd?: number | undefined;
    giaBanDatTrenHd?: number | undefined;
    tongGiaMuaTrenHd?: number | undefined;
    giaTriDuocTru?: number | undefined;
    giaTriMua?: number | undefined;
    soChungTuKhoanTru?: string | undefined;

    constructor(data?: IAddThongTinChuyenNhuongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maLoaiChuyenNhuong = _data["maLoaiChuyenNhuong"];
            this.tenLoaiChuyenNhuong = _data["tenLoaiChuyenNhuong"];
            this.maLoaiBatDongSan = _data["maLoaiBatDongSan"];
            this.tenLoaiBatDongSan = _data["tenLoaiBatDongSan"];
            this.soHopDongMuaBan = _data["soHopDongMuaBan"];
            this.ngayLap = _data["ngayLap"] ? new Date(_data["ngayLap"].toString()) : <any>undefined;
            this.noiLap = _data["noiLap"];
            this.noiChungThuc = _data["noiChungThuc"];
            this.ngayChungThuc = _data["ngayChungThuc"] ? new Date(_data["ngayChungThuc"].toString()) : <any>undefined;
            this.tenChuDuAn = _data["tenChuDuAn"];
            this.soHopDong = _data["soHopDong"];
            this.ngayHopDong = _data["ngayHopDong"] ? new Date(_data["ngayHopDong"].toString()) : <any>undefined;
            this.tongGiaBanTrenHd = _data["tongGiaBanTrenHd"];
            this.giaBanNhaTrenHd = _data["giaBanNhaTrenHd"];
            this.giaBanDatTrenHd = _data["giaBanDatTrenHd"];
            this.tongGiaMuaTrenHd = _data["tongGiaMuaTrenHd"];
            this.giaTriDuocTru = _data["giaTriDuocTru"];
            this.giaTriMua = _data["giaTriMua"];
            this.soChungTuKhoanTru = _data["soChungTuKhoanTru"];
        }
    }

    static fromJS(data: any): AddThongTinChuyenNhuongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinChuyenNhuongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maLoaiChuyenNhuong"] = this.maLoaiChuyenNhuong;
        data["tenLoaiChuyenNhuong"] = this.tenLoaiChuyenNhuong;
        data["maLoaiBatDongSan"] = this.maLoaiBatDongSan;
        data["tenLoaiBatDongSan"] = this.tenLoaiBatDongSan;
        data["soHopDongMuaBan"] = this.soHopDongMuaBan;
        data["ngayLap"] = this.ngayLap ? this.ngayLap.toISOString() : <any>undefined;
        data["noiLap"] = this.noiLap;
        data["noiChungThuc"] = this.noiChungThuc;
        data["ngayChungThuc"] = this.ngayChungThuc ? this.ngayChungThuc.toISOString() : <any>undefined;
        data["tenChuDuAn"] = this.tenChuDuAn;
        data["soHopDong"] = this.soHopDong;
        data["ngayHopDong"] = this.ngayHopDong ? this.ngayHopDong.toISOString() : <any>undefined;
        data["tongGiaBanTrenHd"] = this.tongGiaBanTrenHd;
        data["giaBanNhaTrenHd"] = this.giaBanNhaTrenHd;
        data["giaBanDatTrenHd"] = this.giaBanDatTrenHd;
        data["tongGiaMuaTrenHd"] = this.tongGiaMuaTrenHd;
        data["giaTriDuocTru"] = this.giaTriDuocTru;
        data["giaTriMua"] = this.giaTriMua;
        data["soChungTuKhoanTru"] = this.soChungTuKhoanTru;
        return data; 
    }
}

export interface IAddThongTinChuyenNhuongCommand {
    maLoaiChuyenNhuong?: string | undefined;
    tenLoaiChuyenNhuong?: string | undefined;
    maLoaiBatDongSan?: string | undefined;
    tenLoaiBatDongSan?: string | undefined;
    soHopDongMuaBan?: string | undefined;
    ngayLap?: Date | undefined;
    noiLap?: string | undefined;
    noiChungThuc?: string | undefined;
    ngayChungThuc?: Date | undefined;
    tenChuDuAn?: string | undefined;
    soHopDong?: string | undefined;
    ngayHopDong?: Date | undefined;
    tongGiaBanTrenHd?: number | undefined;
    giaBanNhaTrenHd?: number | undefined;
    giaBanDatTrenHd?: number | undefined;
    tongGiaMuaTrenHd?: number | undefined;
    giaTriDuocTru?: number | undefined;
    giaTriMua?: number | undefined;
    soChungTuKhoanTru?: string | undefined;
}

export class AddThongTinMienGiamCommand implements IAddThongTinMienGiamCommand {
    maDoiTuongMienGiam?: string | undefined;
    tenDoiTuongMienGiam?: string | undefined;
    soQuyetDinh?: string | undefined;
    ngayQuyetDinh?: Date | undefined;
    coQuanCap?: string | undefined;
    tyLeMienGiam?: number | undefined;
    thoiGianDuocMienGiam?: number | undefined;
    dienTichMienGiam?: number | undefined;

    constructor(data?: IAddThongTinMienGiamCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maDoiTuongMienGiam = _data["maDoiTuongMienGiam"];
            this.tenDoiTuongMienGiam = _data["tenDoiTuongMienGiam"];
            this.soQuyetDinh = _data["soQuyetDinh"];
            this.ngayQuyetDinh = _data["ngayQuyetDinh"] ? new Date(_data["ngayQuyetDinh"].toString()) : <any>undefined;
            this.coQuanCap = _data["coQuanCap"];
            this.tyLeMienGiam = _data["tyLeMienGiam"];
            this.thoiGianDuocMienGiam = _data["thoiGianDuocMienGiam"];
            this.dienTichMienGiam = _data["dienTichMienGiam"];
        }
    }

    static fromJS(data: any): AddThongTinMienGiamCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddThongTinMienGiamCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maDoiTuongMienGiam"] = this.maDoiTuongMienGiam;
        data["tenDoiTuongMienGiam"] = this.tenDoiTuongMienGiam;
        data["soQuyetDinh"] = this.soQuyetDinh;
        data["ngayQuyetDinh"] = this.ngayQuyetDinh ? this.ngayQuyetDinh.toISOString() : <any>undefined;
        data["coQuanCap"] = this.coQuanCap;
        data["tyLeMienGiam"] = this.tyLeMienGiam;
        data["thoiGianDuocMienGiam"] = this.thoiGianDuocMienGiam;
        data["dienTichMienGiam"] = this.dienTichMienGiam;
        return data; 
    }
}

export interface IAddThongTinMienGiamCommand {
    maDoiTuongMienGiam?: string | undefined;
    tenDoiTuongMienGiam?: string | undefined;
    soQuyetDinh?: string | undefined;
    ngayQuyetDinh?: Date | undefined;
    coQuanCap?: string | undefined;
    tyLeMienGiam?: number | undefined;
    thoiGianDuocMienGiam?: number | undefined;
    dienTichMienGiam?: number | undefined;
}

export class CreateHoSoDangKyBienDongCommand implements ICreateHoSoDangKyBienDongCommand {
    idHoSo?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    dangKyBienDong?: CreateThongTinDangKyBienDongCommand[] | undefined;

    constructor(data?: ICreateHoSoDangKyBienDongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.loaiDangKy = _data["loaiDangKy"];
            this.nguonDangKy = _data["nguonDangKy"];
            if (Array.isArray(_data["dangKyBienDong"])) {
                this.dangKyBienDong = [] as any;
                for (let item of _data["dangKyBienDong"])
                    this.dangKyBienDong!.push(CreateThongTinDangKyBienDongCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateHoSoDangKyBienDongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateHoSoDangKyBienDongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["loaiDangKy"] = this.loaiDangKy;
        data["nguonDangKy"] = this.nguonDangKy;
        if (Array.isArray(this.dangKyBienDong)) {
            data["dangKyBienDong"] = [];
            for (let item of this.dangKyBienDong)
                data["dangKyBienDong"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateHoSoDangKyBienDongCommand {
    idHoSo?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    dangKyBienDong?: CreateThongTinDangKyBienDongCommand[] | undefined;
}

export class CreateThongTinDangKyBienDongCommand implements ICreateThongTinDangKyBienDongCommand {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    idChuSdThuaDatOld?: string | undefined;
    lyDoBienDong?: string | undefined;
    dangKyTruocBienDong?: CreateThongTinChiTietDangKyBienDongCommand[] | undefined;
    dangKySauBienDong?: CreateThongTinChiTietDangKyBienDongCommand[] | undefined;

    constructor(data?: ICreateThongTinDangKyBienDongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.tenLoaiBienDong = _data["tenLoaiBienDong"];
            this.idChuSdThuaDatOld = _data["idChuSdThuaDatOld"];
            this.lyDoBienDong = _data["lyDoBienDong"];
            if (Array.isArray(_data["dangKyTruocBienDong"])) {
                this.dangKyTruocBienDong = [] as any;
                for (let item of _data["dangKyTruocBienDong"])
                    this.dangKyTruocBienDong!.push(CreateThongTinChiTietDangKyBienDongCommand.fromJS(item));
            }
            if (Array.isArray(_data["dangKySauBienDong"])) {
                this.dangKySauBienDong = [] as any;
                for (let item of _data["dangKySauBienDong"])
                    this.dangKySauBienDong!.push(CreateThongTinChiTietDangKyBienDongCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateThongTinDangKyBienDongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateThongTinDangKyBienDongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["tenLoaiBienDong"] = this.tenLoaiBienDong;
        data["idChuSdThuaDatOld"] = this.idChuSdThuaDatOld;
        data["lyDoBienDong"] = this.lyDoBienDong;
        if (Array.isArray(this.dangKyTruocBienDong)) {
            data["dangKyTruocBienDong"] = [];
            for (let item of this.dangKyTruocBienDong)
                data["dangKyTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.dangKySauBienDong)) {
            data["dangKySauBienDong"] = [];
            for (let item of this.dangKySauBienDong)
                data["dangKySauBienDong"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateThongTinDangKyBienDongCommand {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    idChuSdThuaDatOld?: string | undefined;
    lyDoBienDong?: string | undefined;
    dangKyTruocBienDong?: CreateThongTinChiTietDangKyBienDongCommand[] | undefined;
    dangKySauBienDong?: CreateThongTinChiTietDangKyBienDongCommand[] | undefined;
}

export class CreateThongTinChiTietDangKyBienDongCommand implements ICreateThongTinChiTietDangKyBienDongCommand {
    idChuSDThuaDat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    idToBanDo?: string | undefined;
    idDvhc?: string | undefined;
    idTinh?: string | undefined;
    idHuyen?: string | undefined;
    dsNguoiLienQuan?: NguoiLienQuan[] | undefined;

    constructor(data?: ICreateThongTinChiTietDangKyBienDongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idChuSDThuaDat = _data["idChuSDThuaDat"];
            this.idthuadat = _data["idthuadat"];
            this.idchusudung = _data["idchusudung"];
            this.idhoso = _data["idhoso"];
            this.tenChu = _data["tenChu"];
            this.soDinhDanh = _data["soDinhDanh"];
            this.ngaySinh = _data["ngaySinh"];
            this.diaChi = _data["diaChi"];
            this.soTo = _data["soTo"];
            this.soThuTuThua = _data["soThuTuThua"];
            this.dienTich = _data["dienTich"];
            this.mucDichSuDung = _data["mucDichSuDung"];
            this.soPhatHanh = _data["soPhatHanh"];
            this.soVaoSo = _data["soVaoSo"];
            this.idToBanDo = _data["idToBanDo"];
            this.idDvhc = _data["idDvhc"];
            this.idTinh = _data["idTinh"];
            this.idHuyen = _data["idHuyen"];
            if (Array.isArray(_data["dsNguoiLienQuan"])) {
                this.dsNguoiLienQuan = [] as any;
                for (let item of _data["dsNguoiLienQuan"])
                    this.dsNguoiLienQuan!.push(NguoiLienQuan.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CreateThongTinChiTietDangKyBienDongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateThongTinChiTietDangKyBienDongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idChuSDThuaDat"] = this.idChuSDThuaDat;
        data["idthuadat"] = this.idthuadat;
        data["idchusudung"] = this.idchusudung;
        data["idhoso"] = this.idhoso;
        data["tenChu"] = this.tenChu;
        data["soDinhDanh"] = this.soDinhDanh;
        data["ngaySinh"] = this.ngaySinh;
        data["diaChi"] = this.diaChi;
        data["soTo"] = this.soTo;
        data["soThuTuThua"] = this.soThuTuThua;
        data["dienTich"] = this.dienTich;
        data["mucDichSuDung"] = this.mucDichSuDung;
        data["soPhatHanh"] = this.soPhatHanh;
        data["soVaoSo"] = this.soVaoSo;
        data["idToBanDo"] = this.idToBanDo;
        data["idDvhc"] = this.idDvhc;
        data["idTinh"] = this.idTinh;
        data["idHuyen"] = this.idHuyen;
        if (Array.isArray(this.dsNguoiLienQuan)) {
            data["dsNguoiLienQuan"] = [];
            for (let item of this.dsNguoiLienQuan)
                data["dsNguoiLienQuan"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICreateThongTinChiTietDangKyBienDongCommand {
    idChuSDThuaDat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    idToBanDo?: string | undefined;
    idDvhc?: string | undefined;
    idTinh?: string | undefined;
    idHuyen?: string | undefined;
    dsNguoiLienQuan?: NguoiLienQuan[] | undefined;
}

export class NguoiLienQuan implements INguoiLienQuan {
    hoTen?: string | undefined;
    soDinhDanh?: string | undefined;

    constructor(data?: INguoiLienQuan) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soDinhDanh = _data["soDinhDanh"];
        }
    }

    static fromJS(data: any): NguoiLienQuan {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiLienQuan();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soDinhDanh"] = this.soDinhDanh;
        return data; 
    }
}

export interface INguoiLienQuan {
    hoTen?: string | undefined;
    soDinhDanh?: string | undefined;
}

export class EditHoSoDangKyCommand implements IEditHoSoDangKyCommand {
    id?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    noiDungDangKyMoi?: EditThongTinDangKyCommand | undefined;
    noiDungDangKyBienDong?: EditThongTinDangKyBienDongCommand | undefined;

    constructor(data?: IEditHoSoDangKyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.loaiDangKy = _data["loaiDangKy"];
            this.nguonDangKy = _data["nguonDangKy"];
            this.noiDungDangKyMoi = _data["noiDungDangKyMoi"] ? EditThongTinDangKyCommand.fromJS(_data["noiDungDangKyMoi"]) : <any>undefined;
            this.noiDungDangKyBienDong = _data["noiDungDangKyBienDong"] ? EditThongTinDangKyBienDongCommand.fromJS(_data["noiDungDangKyBienDong"]) : <any>undefined;
        }
    }

    static fromJS(data: any): EditHoSoDangKyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new EditHoSoDangKyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["loaiDangKy"] = this.loaiDangKy;
        data["nguonDangKy"] = this.nguonDangKy;
        data["noiDungDangKyMoi"] = this.noiDungDangKyMoi ? this.noiDungDangKyMoi.toJSON() : <any>undefined;
        data["noiDungDangKyBienDong"] = this.noiDungDangKyBienDong ? this.noiDungDangKyBienDong.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IEditHoSoDangKyCommand {
    id?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    noiDungDangKyMoi?: EditThongTinDangKyCommand | undefined;
    noiDungDangKyBienDong?: EditThongTinDangKyBienDongCommand | undefined;
}

export class EditThongTinDangKyCommand implements IEditThongTinDangKyCommand {
    idChuSDThuaDat?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;

    constructor(data?: IEditThongTinDangKyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idChuSDThuaDat = _data["idChuSDThuaDat"];
            this.tenChu = _data["tenChu"];
            this.soDinhDanh = _data["soDinhDanh"];
            this.ngaySinh = _data["ngaySinh"];
            this.diaChi = _data["diaChi"];
            this.soTo = _data["soTo"];
            this.soThuTuThua = _data["soThuTuThua"];
            this.dienTich = _data["dienTich"];
            this.mucDichSuDung = _data["mucDichSuDung"];
            this.soPhatHanh = _data["soPhatHanh"];
            this.soVaoSo = _data["soVaoSo"];
        }
    }

    static fromJS(data: any): EditThongTinDangKyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new EditThongTinDangKyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idChuSDThuaDat"] = this.idChuSDThuaDat;
        data["tenChu"] = this.tenChu;
        data["soDinhDanh"] = this.soDinhDanh;
        data["ngaySinh"] = this.ngaySinh;
        data["diaChi"] = this.diaChi;
        data["soTo"] = this.soTo;
        data["soThuTuThua"] = this.soThuTuThua;
        data["dienTich"] = this.dienTich;
        data["mucDichSuDung"] = this.mucDichSuDung;
        data["soPhatHanh"] = this.soPhatHanh;
        data["soVaoSo"] = this.soVaoSo;
        return data; 
    }
}

export interface IEditThongTinDangKyCommand {
    idChuSDThuaDat?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
}

export class EditThongTinDangKyBienDongCommand implements IEditThongTinDangKyBienDongCommand {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    dangKyTruocBienDong?: EditThongTinChiTietDangKyBienDongCommand[] | undefined;
    dangKySauBienDong?: EditThongTinChiTietDangKyBienDongCommand[] | undefined;

    constructor(data?: IEditThongTinDangKyBienDongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.tenLoaiBienDong = _data["tenLoaiBienDong"];
            if (Array.isArray(_data["dangKyTruocBienDong"])) {
                this.dangKyTruocBienDong = [] as any;
                for (let item of _data["dangKyTruocBienDong"])
                    this.dangKyTruocBienDong!.push(EditThongTinChiTietDangKyBienDongCommand.fromJS(item));
            }
            if (Array.isArray(_data["dangKySauBienDong"])) {
                this.dangKySauBienDong = [] as any;
                for (let item of _data["dangKySauBienDong"])
                    this.dangKySauBienDong!.push(EditThongTinChiTietDangKyBienDongCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): EditThongTinDangKyBienDongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new EditThongTinDangKyBienDongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["tenLoaiBienDong"] = this.tenLoaiBienDong;
        if (Array.isArray(this.dangKyTruocBienDong)) {
            data["dangKyTruocBienDong"] = [];
            for (let item of this.dangKyTruocBienDong)
                data["dangKyTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.dangKySauBienDong)) {
            data["dangKySauBienDong"] = [];
            for (let item of this.dangKySauBienDong)
                data["dangKySauBienDong"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IEditThongTinDangKyBienDongCommand {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    dangKyTruocBienDong?: EditThongTinChiTietDangKyBienDongCommand[] | undefined;
    dangKySauBienDong?: EditThongTinChiTietDangKyBienDongCommand[] | undefined;
}

export class EditThongTinChiTietDangKyBienDongCommand implements IEditThongTinChiTietDangKyBienDongCommand {
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;

    constructor(data?: IEditThongTinChiTietDangKyBienDongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tenChu = _data["tenChu"];
            this.soDinhDanh = _data["soDinhDanh"];
            this.ngaySinh = _data["ngaySinh"];
            this.diaChi = _data["diaChi"];
            this.soTo = _data["soTo"];
            this.soThuTuThua = _data["soThuTuThua"];
            this.dienTich = _data["dienTich"];
            this.mucDichSuDung = _data["mucDichSuDung"];
            this.soPhatHanh = _data["soPhatHanh"];
            this.soVaoSo = _data["soVaoSo"];
        }
    }

    static fromJS(data: any): EditThongTinChiTietDangKyBienDongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new EditThongTinChiTietDangKyBienDongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tenChu"] = this.tenChu;
        data["soDinhDanh"] = this.soDinhDanh;
        data["ngaySinh"] = this.ngaySinh;
        data["diaChi"] = this.diaChi;
        data["soTo"] = this.soTo;
        data["soThuTuThua"] = this.soThuTuThua;
        data["dienTich"] = this.dienTich;
        data["mucDichSuDung"] = this.mucDichSuDung;
        data["soPhatHanh"] = this.soPhatHanh;
        data["soVaoSo"] = this.soVaoSo;
        return data; 
    }
}

export interface IEditThongTinChiTietDangKyBienDongCommand {
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
}

export class ApiResultOfGetHoSoDangKyByIdHoSoDto implements IApiResultOfGetHoSoDangKyByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetHoSoDangKyByIdHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfGetHoSoDangKyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? GetHoSoDangKyByIdHoSoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfGetHoSoDangKyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfGetHoSoDangKyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfGetHoSoDangKyByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetHoSoDangKyByIdHoSoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetHoSoDangKyByIdHoSoDto implements IGetHoSoDangKyByIdHoSoDto {
    idHoSo?: string | undefined;
    dangKy?: HoSoDangKyVm[] | undefined;

    constructor(data?: IGetHoSoDangKyByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            if (Array.isArray(_data["dangKy"])) {
                this.dangKy = [] as any;
                for (let item of _data["dangKy"])
                    this.dangKy!.push(HoSoDangKyVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetHoSoDangKyByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoDangKyByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        if (Array.isArray(this.dangKy)) {
            data["dangKy"] = [];
            for (let item of this.dangKy)
                data["dangKy"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetHoSoDangKyByIdHoSoDto {
    idHoSo?: string | undefined;
    dangKy?: HoSoDangKyVm[] | undefined;
}

export class HoSoDangKyVm implements IHoSoDangKyVm {
    id?: string | undefined;
    idDangKyCadas?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    noiDungDangKyMoi?: ThongTinDangKyVm | undefined;
    noiDungDangKyBienDong?: ThongTinDangKyBienDongVm | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;

    constructor(data?: IHoSoDangKyVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idDangKyCadas = _data["idDangKyCadas"];
            this.loaiDangKy = _data["loaiDangKy"];
            this.nguonDangKy = _data["nguonDangKy"];
            this.noiDungDangKyMoi = _data["noiDungDangKyMoi"] ? ThongTinDangKyVm.fromJS(_data["noiDungDangKyMoi"]) : <any>undefined;
            this.noiDungDangKyBienDong = _data["noiDungDangKyBienDong"] ? ThongTinDangKyBienDongVm.fromJS(_data["noiDungDangKyBienDong"]) : <any>undefined;
            this.maTinh = _data["maTinh"];
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): HoSoDangKyVm {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoDangKyVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idDangKyCadas"] = this.idDangKyCadas;
        data["loaiDangKy"] = this.loaiDangKy;
        data["nguonDangKy"] = this.nguonDangKy;
        data["noiDungDangKyMoi"] = this.noiDungDangKyMoi ? this.noiDungDangKyMoi.toJSON() : <any>undefined;
        data["noiDungDangKyBienDong"] = this.noiDungDangKyBienDong ? this.noiDungDangKyBienDong.toJSON() : <any>undefined;
        data["maTinh"] = this.maTinh;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        return data; 
    }
}

export interface IHoSoDangKyVm {
    id?: string | undefined;
    idDangKyCadas?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    nguonDangKy?: NguonDangKy;
    noiDungDangKyMoi?: ThongTinDangKyVm | undefined;
    noiDungDangKyBienDong?: ThongTinDangKyBienDongVm | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
}

export class ThongTinDangKyVm implements IThongTinDangKyVm {
    idChuSDThuaDat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    tentrangthai?: string | undefined;
    idToBanDo?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    dsNguoiLienQuan?: NguoiLienQuan2[] | undefined;

    constructor(data?: IThongTinDangKyVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idChuSDThuaDat = _data["idChuSDThuaDat"];
            this.idthuadat = _data["idthuadat"];
            this.idchusudung = _data["idchusudung"];
            this.idhoso = _data["idhoso"];
            this.tenChu = _data["tenChu"];
            this.soDinhDanh = _data["soDinhDanh"];
            this.ngaySinh = _data["ngaySinh"];
            this.diaChi = _data["diaChi"];
            this.soTo = _data["soTo"];
            this.soThuTuThua = _data["soThuTuThua"];
            this.dienTich = _data["dienTich"];
            this.mucDichSuDung = _data["mucDichSuDung"];
            this.soPhatHanh = _data["soPhatHanh"];
            this.soVaoSo = _data["soVaoSo"];
            this.tentrangthai = _data["tentrangthai"];
            this.idToBanDo = _data["idToBanDo"];
            this.idDvhc = _data["idDvhc"];
            this.tenDvhc = _data["tenDvhc"];
            this.idHuyen = _data["idHuyen"];
            this.idTinh = _data["idTinh"];
            if (Array.isArray(_data["dsNguoiLienQuan"])) {
                this.dsNguoiLienQuan = [] as any;
                for (let item of _data["dsNguoiLienQuan"])
                    this.dsNguoiLienQuan!.push(NguoiLienQuan2.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ThongTinDangKyVm {
        data = typeof data === 'object' ? data : {};
        let result = new ThongTinDangKyVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idChuSDThuaDat"] = this.idChuSDThuaDat;
        data["idthuadat"] = this.idthuadat;
        data["idchusudung"] = this.idchusudung;
        data["idhoso"] = this.idhoso;
        data["tenChu"] = this.tenChu;
        data["soDinhDanh"] = this.soDinhDanh;
        data["ngaySinh"] = this.ngaySinh;
        data["diaChi"] = this.diaChi;
        data["soTo"] = this.soTo;
        data["soThuTuThua"] = this.soThuTuThua;
        data["dienTich"] = this.dienTich;
        data["mucDichSuDung"] = this.mucDichSuDung;
        data["soPhatHanh"] = this.soPhatHanh;
        data["soVaoSo"] = this.soVaoSo;
        data["tentrangthai"] = this.tentrangthai;
        data["idToBanDo"] = this.idToBanDo;
        data["idDvhc"] = this.idDvhc;
        data["tenDvhc"] = this.tenDvhc;
        data["idHuyen"] = this.idHuyen;
        data["idTinh"] = this.idTinh;
        if (Array.isArray(this.dsNguoiLienQuan)) {
            data["dsNguoiLienQuan"] = [];
            for (let item of this.dsNguoiLienQuan)
                data["dsNguoiLienQuan"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IThongTinDangKyVm {
    idChuSDThuaDat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    tenChu?: string | undefined;
    soDinhDanh?: string | undefined;
    ngaySinh?: string | undefined;
    diaChi?: string | undefined;
    soTo?: string | undefined;
    soThuTuThua?: string | undefined;
    dienTich?: string | undefined;
    mucDichSuDung?: string | undefined;
    soPhatHanh?: string | undefined;
    soVaoSo?: string | undefined;
    tentrangthai?: string | undefined;
    idToBanDo?: string | undefined;
    idDvhc?: string | undefined;
    tenDvhc?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    dsNguoiLienQuan?: NguoiLienQuan2[] | undefined;
}

export class NguoiLienQuan2 implements INguoiLienQuan2 {
    hoTen?: string | undefined;
    soDinhDanh?: string | undefined;

    constructor(data?: INguoiLienQuan2) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soDinhDanh = _data["soDinhDanh"];
        }
    }

    static fromJS(data: any): NguoiLienQuan2 {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiLienQuan2();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soDinhDanh"] = this.soDinhDanh;
        return data; 
    }
}

export interface INguoiLienQuan2 {
    hoTen?: string | undefined;
    soDinhDanh?: string | undefined;
}

export class ThongTinDangKyBienDongVm implements IThongTinDangKyBienDongVm {
    idChuSdThuaDatOld?: string | undefined;
    idBienDong?: string | undefined;
    idDangKyGoc?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    lyDoBienDong?: string | undefined;
    dangKyTruocBienDong?: ThongTinDangKyVm[] | undefined;
    dangKySauBienDong?: ThongTinDangKyVm[] | undefined;

    constructor(data?: IThongTinDangKyBienDongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idChuSdThuaDatOld = _data["idChuSdThuaDatOld"];
            this.idBienDong = _data["idBienDong"];
            this.idDangKyGoc = _data["idDangKyGoc"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.tenLoaiBienDong = _data["tenLoaiBienDong"];
            this.lyDoBienDong = _data["lyDoBienDong"];
            if (Array.isArray(_data["dangKyTruocBienDong"])) {
                this.dangKyTruocBienDong = [] as any;
                for (let item of _data["dangKyTruocBienDong"])
                    this.dangKyTruocBienDong!.push(ThongTinDangKyVm.fromJS(item));
            }
            if (Array.isArray(_data["dangKySauBienDong"])) {
                this.dangKySauBienDong = [] as any;
                for (let item of _data["dangKySauBienDong"])
                    this.dangKySauBienDong!.push(ThongTinDangKyVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ThongTinDangKyBienDongVm {
        data = typeof data === 'object' ? data : {};
        let result = new ThongTinDangKyBienDongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idChuSdThuaDatOld"] = this.idChuSdThuaDatOld;
        data["idBienDong"] = this.idBienDong;
        data["idDangKyGoc"] = this.idDangKyGoc;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["tenLoaiBienDong"] = this.tenLoaiBienDong;
        data["lyDoBienDong"] = this.lyDoBienDong;
        if (Array.isArray(this.dangKyTruocBienDong)) {
            data["dangKyTruocBienDong"] = [];
            for (let item of this.dangKyTruocBienDong)
                data["dangKyTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.dangKySauBienDong)) {
            data["dangKySauBienDong"] = [];
            for (let item of this.dangKySauBienDong)
                data["dangKySauBienDong"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IThongTinDangKyBienDongVm {
    idChuSdThuaDatOld?: string | undefined;
    idBienDong?: string | undefined;
    idDangKyGoc?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    lyDoBienDong?: string | undefined;
    dangKyTruocBienDong?: ThongTinDangKyVm[] | undefined;
    dangKySauBienDong?: ThongTinDangKyVm[] | undefined;
}

export class GetHoSoDangKyByIdHoSoQuery implements IGetHoSoDangKyByIdHoSoQuery {
    idHoSo?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    isHoSoQuet?: boolean;

    constructor(data?: IGetHoSoDangKyByIdHoSoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.loaiDangKy = _data["loaiDangKy"];
            this.isHoSoQuet = _data["isHoSoQuet"];
        }
    }

    static fromJS(data: any): GetHoSoDangKyByIdHoSoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoDangKyByIdHoSoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["loaiDangKy"] = this.loaiDangKy;
        data["isHoSoQuet"] = this.isHoSoQuet;
        return data; 
    }
}

export interface IGetHoSoDangKyByIdHoSoQuery {
    idHoSo?: string | undefined;
    loaiDangKy?: LoaiDangKy;
    isHoSoQuet?: boolean;
}

export class ApiResultOfIListOfHoSoPhieuChuyenThueVm implements IApiResultOfIListOfHoSoPhieuChuyenThueVm {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoPhieuChuyenThueVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfHoSoPhieuChuyenThueVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(HoSoPhieuChuyenThueVm.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfHoSoPhieuChuyenThueVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfHoSoPhieuChuyenThueVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfHoSoPhieuChuyenThueVm {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoPhieuChuyenThueVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class HoSoPhieuChuyenThueVm implements IHoSoPhieuChuyenThueVm {
    id?: string | undefined;
    idHoSo?: string | undefined;
    tenTinh?: string | undefined;
    idDangKyCadas?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    nguoiNopHoSo?: string | undefined;
    tinhTrangPhieuChuyenText?: string | undefined;
    moTaThongBaoThue?: string | undefined;
    moTaLoiChuyenThue?: string | undefined;
    isLoiChuyenThue?: boolean;
    moTaThongTinNvtc?: string | undefined;
    maKetQuaThongTinNvtc?: number | undefined;
    nguonDangKy?: NguonDangKy;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    chiTietHoSoPhieuChuyen?: ChiTietHoSoPhieuChuyenVm | undefined;

    constructor(data?: IHoSoPhieuChuyenThueVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.tenTinh = _data["tenTinh"];
            this.idDangKyCadas = _data["idDangKyCadas"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.nguoiNopHoSo = _data["nguoiNopHoSo"];
            this.tinhTrangPhieuChuyenText = _data["tinhTrangPhieuChuyenText"];
            this.moTaThongBaoThue = _data["moTaThongBaoThue"];
            this.moTaLoiChuyenThue = _data["moTaLoiChuyenThue"];
            this.isLoiChuyenThue = _data["isLoiChuyenThue"];
            this.moTaThongTinNvtc = _data["moTaThongTinNvtc"];
            this.maKetQuaThongTinNvtc = _data["maKetQuaThongTinNvtc"];
            this.nguonDangKy = _data["nguonDangKy"];
            this.tinhTrangPhieuChuyen = _data["tinhTrangPhieuChuyen"];
            this.chiTietHoSoPhieuChuyen = _data["chiTietHoSoPhieuChuyen"] ? ChiTietHoSoPhieuChuyenVm.fromJS(_data["chiTietHoSoPhieuChuyen"]) : <any>undefined;
        }
    }

    static fromJS(data: any): HoSoPhieuChuyenThueVm {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoPhieuChuyenThueVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["tenTinh"] = this.tenTinh;
        data["idDangKyCadas"] = this.idDangKyCadas;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["nguoiNopHoSo"] = this.nguoiNopHoSo;
        data["tinhTrangPhieuChuyenText"] = this.tinhTrangPhieuChuyenText;
        data["moTaThongBaoThue"] = this.moTaThongBaoThue;
        data["moTaLoiChuyenThue"] = this.moTaLoiChuyenThue;
        data["isLoiChuyenThue"] = this.isLoiChuyenThue;
        data["moTaThongTinNvtc"] = this.moTaThongTinNvtc;
        data["maKetQuaThongTinNvtc"] = this.maKetQuaThongTinNvtc;
        data["nguonDangKy"] = this.nguonDangKy;
        data["tinhTrangPhieuChuyen"] = this.tinhTrangPhieuChuyen;
        data["chiTietHoSoPhieuChuyen"] = this.chiTietHoSoPhieuChuyen ? this.chiTietHoSoPhieuChuyen.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IHoSoPhieuChuyenThueVm {
    id?: string | undefined;
    idHoSo?: string | undefined;
    tenTinh?: string | undefined;
    idDangKyCadas?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    nguoiNopHoSo?: string | undefined;
    tinhTrangPhieuChuyenText?: string | undefined;
    moTaThongBaoThue?: string | undefined;
    moTaLoiChuyenThue?: string | undefined;
    isLoiChuyenThue?: boolean;
    moTaThongTinNvtc?: string | undefined;
    maKetQuaThongTinNvtc?: number | undefined;
    nguonDangKy?: NguonDangKy;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    chiTietHoSoPhieuChuyen?: ChiTietHoSoPhieuChuyenVm | undefined;
}

export class ChiTietHoSoPhieuChuyenVm implements IChiTietHoSoPhieuChuyenVm {
    loaiTemplatePhieuChuyen?: LoaiTemplatePhieuChuyen;
    idHsdkPhieuChuyen?: string | undefined;
    idPhieuLienThongThue?: string | undefined;
    idBienDong?: string | undefined;
    tenTinh?: string | undefined;
    tinh?: Tinh;
    idChuSdThuaDat?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    maHoSo?: string | undefined;
    idHoSo?: string | undefined;
    soPhieu?: string | undefined;
    ngayKyPhieuChuyen?: Date | undefined;
    nguoiKyPhieuChuyen?: string | undefined;
    loaiDeNghi?: string | undefined;
    loaiHoSo?: string | undefined;
    thongTinSoHuu?: string | undefined;
    soGcn?: string | undefined;
    maVach?: string | undefined;
    ngayCapGcn?: string | undefined;
    noiCapGcn?: string | undefined;
    nguoiKyGcn?: string | undefined;
    danhSachViTri?: ViTriVm[] | undefined;
    thongTinThuaDat?: ThongTinThuaDatVm | undefined;
    danhSachNguoiMua?: NguoiMuaVm[] | undefined;
    danhSachNguoiBan?: NguoiBanVm[] | undefined;
    danhSachNguoiDaiDien?: NguoiDaiDienVm[] | undefined;
    dsFileHoSoDaKy?: FileDinhKemVm2[] | undefined;
    nguonDangKy?: NguonDangKy;

    constructor(data?: IChiTietHoSoPhieuChuyenVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.loaiTemplatePhieuChuyen = _data["loaiTemplatePhieuChuyen"];
            this.idHsdkPhieuChuyen = _data["idHsdkPhieuChuyen"];
            this.idPhieuLienThongThue = _data["idPhieuLienThongThue"];
            this.idBienDong = _data["idBienDong"];
            this.tenTinh = _data["tenTinh"];
            this.tinh = _data["tinh"];
            this.idChuSdThuaDat = _data["idChuSdThuaDat"];
            this.tinhTrangPhieuChuyen = _data["tinhTrangPhieuChuyen"];
            this.maHoSo = _data["maHoSo"];
            this.idHoSo = _data["idHoSo"];
            this.soPhieu = _data["soPhieu"];
            this.ngayKyPhieuChuyen = _data["ngayKyPhieuChuyen"] ? new Date(_data["ngayKyPhieuChuyen"].toString()) : <any>undefined;
            this.nguoiKyPhieuChuyen = _data["nguoiKyPhieuChuyen"];
            this.loaiDeNghi = _data["loaiDeNghi"];
            this.loaiHoSo = _data["loaiHoSo"];
            this.thongTinSoHuu = _data["thongTinSoHuu"];
            this.soGcn = _data["soGcn"];
            this.maVach = _data["maVach"];
            this.ngayCapGcn = _data["ngayCapGcn"];
            this.noiCapGcn = _data["noiCapGcn"];
            this.nguoiKyGcn = _data["nguoiKyGcn"];
            if (Array.isArray(_data["danhSachViTri"])) {
                this.danhSachViTri = [] as any;
                for (let item of _data["danhSachViTri"])
                    this.danhSachViTri!.push(ViTriVm.fromJS(item));
            }
            this.thongTinThuaDat = _data["thongTinThuaDat"] ? ThongTinThuaDatVm.fromJS(_data["thongTinThuaDat"]) : <any>undefined;
            if (Array.isArray(_data["danhSachNguoiMua"])) {
                this.danhSachNguoiMua = [] as any;
                for (let item of _data["danhSachNguoiMua"])
                    this.danhSachNguoiMua!.push(NguoiMuaVm.fromJS(item));
            }
            if (Array.isArray(_data["danhSachNguoiBan"])) {
                this.danhSachNguoiBan = [] as any;
                for (let item of _data["danhSachNguoiBan"])
                    this.danhSachNguoiBan!.push(NguoiBanVm.fromJS(item));
            }
            if (Array.isArray(_data["danhSachNguoiDaiDien"])) {
                this.danhSachNguoiDaiDien = [] as any;
                for (let item of _data["danhSachNguoiDaiDien"])
                    this.danhSachNguoiDaiDien!.push(NguoiDaiDienVm.fromJS(item));
            }
            if (Array.isArray(_data["dsFileHoSoDaKy"])) {
                this.dsFileHoSoDaKy = [] as any;
                for (let item of _data["dsFileHoSoDaKy"])
                    this.dsFileHoSoDaKy!.push(FileDinhKemVm2.fromJS(item));
            }
            this.nguonDangKy = _data["nguonDangKy"];
        }
    }

    static fromJS(data: any): ChiTietHoSoPhieuChuyenVm {
        data = typeof data === 'object' ? data : {};
        let result = new ChiTietHoSoPhieuChuyenVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["loaiTemplatePhieuChuyen"] = this.loaiTemplatePhieuChuyen;
        data["idHsdkPhieuChuyen"] = this.idHsdkPhieuChuyen;
        data["idPhieuLienThongThue"] = this.idPhieuLienThongThue;
        data["idBienDong"] = this.idBienDong;
        data["tenTinh"] = this.tenTinh;
        data["tinh"] = this.tinh;
        data["idChuSdThuaDat"] = this.idChuSdThuaDat;
        data["tinhTrangPhieuChuyen"] = this.tinhTrangPhieuChuyen;
        data["maHoSo"] = this.maHoSo;
        data["idHoSo"] = this.idHoSo;
        data["soPhieu"] = this.soPhieu;
        data["ngayKyPhieuChuyen"] = this.ngayKyPhieuChuyen ? this.ngayKyPhieuChuyen.toISOString() : <any>undefined;
        data["nguoiKyPhieuChuyen"] = this.nguoiKyPhieuChuyen;
        data["loaiDeNghi"] = this.loaiDeNghi;
        data["loaiHoSo"] = this.loaiHoSo;
        data["thongTinSoHuu"] = this.thongTinSoHuu;
        data["soGcn"] = this.soGcn;
        data["maVach"] = this.maVach;
        data["ngayCapGcn"] = this.ngayCapGcn;
        data["noiCapGcn"] = this.noiCapGcn;
        data["nguoiKyGcn"] = this.nguoiKyGcn;
        if (Array.isArray(this.danhSachViTri)) {
            data["danhSachViTri"] = [];
            for (let item of this.danhSachViTri)
                data["danhSachViTri"].push(item.toJSON());
        }
        data["thongTinThuaDat"] = this.thongTinThuaDat ? this.thongTinThuaDat.toJSON() : <any>undefined;
        if (Array.isArray(this.danhSachNguoiMua)) {
            data["danhSachNguoiMua"] = [];
            for (let item of this.danhSachNguoiMua)
                data["danhSachNguoiMua"].push(item.toJSON());
        }
        if (Array.isArray(this.danhSachNguoiBan)) {
            data["danhSachNguoiBan"] = [];
            for (let item of this.danhSachNguoiBan)
                data["danhSachNguoiBan"].push(item.toJSON());
        }
        if (Array.isArray(this.danhSachNguoiDaiDien)) {
            data["danhSachNguoiDaiDien"] = [];
            for (let item of this.danhSachNguoiDaiDien)
                data["danhSachNguoiDaiDien"].push(item.toJSON());
        }
        if (Array.isArray(this.dsFileHoSoDaKy)) {
            data["dsFileHoSoDaKy"] = [];
            for (let item of this.dsFileHoSoDaKy)
                data["dsFileHoSoDaKy"].push(item.toJSON());
        }
        data["nguonDangKy"] = this.nguonDangKy;
        return data; 
    }
}

export interface IChiTietHoSoPhieuChuyenVm {
    loaiTemplatePhieuChuyen?: LoaiTemplatePhieuChuyen;
    idHsdkPhieuChuyen?: string | undefined;
    idPhieuLienThongThue?: string | undefined;
    idBienDong?: string | undefined;
    tenTinh?: string | undefined;
    tinh?: Tinh;
    idChuSdThuaDat?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    maHoSo?: string | undefined;
    idHoSo?: string | undefined;
    soPhieu?: string | undefined;
    ngayKyPhieuChuyen?: Date | undefined;
    nguoiKyPhieuChuyen?: string | undefined;
    loaiDeNghi?: string | undefined;
    loaiHoSo?: string | undefined;
    thongTinSoHuu?: string | undefined;
    soGcn?: string | undefined;
    maVach?: string | undefined;
    ngayCapGcn?: string | undefined;
    noiCapGcn?: string | undefined;
    nguoiKyGcn?: string | undefined;
    danhSachViTri?: ViTriVm[] | undefined;
    thongTinThuaDat?: ThongTinThuaDatVm | undefined;
    danhSachNguoiMua?: NguoiMuaVm[] | undefined;
    danhSachNguoiBan?: NguoiBanVm[] | undefined;
    danhSachNguoiDaiDien?: NguoiDaiDienVm[] | undefined;
    dsFileHoSoDaKy?: FileDinhKemVm2[] | undefined;
    nguonDangKy?: NguonDangKy;
}

export enum LoaiTemplatePhieuChuyen {
    MotCap = 0,
    NhieuCap = 1,
}

export enum Tinh {
    HaNoi = 1,
    TuyenQuang = 8,
    LaiChau = 12,
    QuangNinh = 22,
    PhuTho = 25,
    ThanhHoa = 38,
    DaNang = 48,
    QuangNam = 49,
    BinhDinh = 52,
    NinhThuan = 58,
    KonTum = 62,
    LamDong = 68,
    TayNinh = 72,
    BinhDuong = 74,
    HauGiang = 93,
    CaMau = 96,
}

export class ViTriVm implements IViTriVm {
    ma?: string | undefined;
    mdsd?: string | undefined;
    khuVuc?: string | undefined;
    viTri?: string | undefined;
    dienTich?: string | undefined;
    doSau?: string | undefined;

    constructor(data?: IViTriVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ma = _data["ma"];
            this.mdsd = _data["mdsd"];
            this.khuVuc = _data["khuVuc"];
            this.viTri = _data["viTri"];
            this.dienTich = _data["dienTich"];
            this.doSau = _data["doSau"];
        }
    }

    static fromJS(data: any): ViTriVm {
        data = typeof data === 'object' ? data : {};
        let result = new ViTriVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ma"] = this.ma;
        data["mdsd"] = this.mdsd;
        data["khuVuc"] = this.khuVuc;
        data["viTri"] = this.viTri;
        data["dienTich"] = this.dienTich;
        data["doSau"] = this.doSau;
        return data; 
    }
}

export interface IViTriVm {
    ma?: string | undefined;
    mdsd?: string | undefined;
    khuVuc?: string | undefined;
    viTri?: string | undefined;
    dienTich?: string | undefined;
    doSau?: string | undefined;
}

export class ThongTinThuaDatVm implements IThongTinThuaDatVm {
    soTo?: string | undefined;
    soThua?: string | undefined;
    dienTich?: string | undefined;
    duong?: string | undefined;
    doanDuong?: string | undefined;
    diaChi?: string | undefined;

    constructor(data?: IThongTinThuaDatVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.dienTich = _data["dienTich"];
            this.duong = _data["duong"];
            this.doanDuong = _data["doanDuong"];
            this.diaChi = _data["diaChi"];
        }
    }

    static fromJS(data: any): ThongTinThuaDatVm {
        data = typeof data === 'object' ? data : {};
        let result = new ThongTinThuaDatVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["dienTich"] = this.dienTich;
        data["duong"] = this.duong;
        data["doanDuong"] = this.doanDuong;
        data["diaChi"] = this.diaChi;
        return data; 
    }
}

export interface IThongTinThuaDatVm {
    soTo?: string | undefined;
    soThua?: string | undefined;
    dienTich?: string | undefined;
    duong?: string | undefined;
    doanDuong?: string | undefined;
    diaChi?: string | undefined;
}

export class NguoiMuaVm implements INguoiMuaVm {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    diaChi?: string | undefined;

    constructor(data?: INguoiMuaVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soGiayTo = _data["soGiayTo"];
            this.diaChi = _data["diaChi"];
        }
    }

    static fromJS(data: any): NguoiMuaVm {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiMuaVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soGiayTo"] = this.soGiayTo;
        data["diaChi"] = this.diaChi;
        return data; 
    }
}

export interface INguoiMuaVm {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    diaChi?: string | undefined;
}

export class NguoiBanVm implements INguoiBanVm {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    diaChi?: string | undefined;

    constructor(data?: INguoiBanVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soGiayTo = _data["soGiayTo"];
            this.diaChi = _data["diaChi"];
        }
    }

    static fromJS(data: any): NguoiBanVm {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiBanVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soGiayTo"] = this.soGiayTo;
        data["diaChi"] = this.diaChi;
        return data; 
    }
}

export interface INguoiBanVm {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    diaChi?: string | undefined;
}

export class NguoiDaiDienVm implements INguoiDaiDienVm {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    diaChi?: string | undefined;

    constructor(data?: INguoiDaiDienVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.soGiayTo = _data["soGiayTo"];
            this.diaChi = _data["diaChi"];
        }
    }

    static fromJS(data: any): NguoiDaiDienVm {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiDaiDienVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["soGiayTo"] = this.soGiayTo;
        data["diaChi"] = this.diaChi;
        return data; 
    }
}

export interface INguoiDaiDienVm {
    hoTen?: string | undefined;
    soGiayTo?: string | undefined;
    diaChi?: string | undefined;
}

export class FileDinhKemVm2 implements IFileDinhKemVm2 {
    id?: string | undefined;
    tenFile?: string | undefined;
    link?: string | undefined;
    idNguoiTao?: string | undefined;

    constructor(data?: IFileDinhKemVm2) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.tenFile = _data["tenFile"];
            this.link = _data["link"];
            this.idNguoiTao = _data["idNguoiTao"];
        }
    }

    static fromJS(data: any): FileDinhKemVm2 {
        data = typeof data === 'object' ? data : {};
        let result = new FileDinhKemVm2();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["tenFile"] = this.tenFile;
        data["link"] = this.link;
        data["idNguoiTao"] = this.idNguoiTao;
        return data; 
    }
}

export interface IFileDinhKemVm2 {
    id?: string | undefined;
    tenFile?: string | undefined;
    link?: string | undefined;
    idNguoiTao?: string | undefined;
}

export class GetHoSoPhieuChuyenThueByIdHoSoQuery implements IGetHoSoPhieuChuyenThueByIdHoSoQuery {
    idHoSo?: string | undefined;

    constructor(data?: IGetHoSoPhieuChuyenThueByIdHoSoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
        }
    }

    static fromJS(data: any): GetHoSoPhieuChuyenThueByIdHoSoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoPhieuChuyenThueByIdHoSoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        return data; 
    }
}

export interface IGetHoSoPhieuChuyenThueByIdHoSoQuery {
    idHoSo?: string | undefined;
}

export class GuiPhieuChuyenNvtcCommand implements IGuiPhieuChuyenNvtcCommand {
    idPhieuLienThongThue?: string | undefined;

    constructor(data?: IGuiPhieuChuyenNvtcCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPhieuLienThongThue = _data["idPhieuLienThongThue"];
        }
    }

    static fromJS(data: any): GuiPhieuChuyenNvtcCommand {
        data = typeof data === 'object' ? data : {};
        let result = new GuiPhieuChuyenNvtcCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPhieuLienThongThue"] = this.idPhieuLienThongThue;
        return data; 
    }
}

export interface IGuiPhieuChuyenNvtcCommand {
    idPhieuLienThongThue?: string | undefined;
}

export class UpdateDanhSachFileKySoCommand implements IUpdateDanhSachFileKySoCommand {
    idPhieuLienThongThue?: string | undefined;
    dsIdFileDinhKem?: string[] | undefined;

    constructor(data?: IUpdateDanhSachFileKySoCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPhieuLienThongThue = _data["idPhieuLienThongThue"];
            if (Array.isArray(_data["dsIdFileDinhKem"])) {
                this.dsIdFileDinhKem = [] as any;
                for (let item of _data["dsIdFileDinhKem"])
                    this.dsIdFileDinhKem!.push(item);
            }
        }
    }

    static fromJS(data: any): UpdateDanhSachFileKySoCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDanhSachFileKySoCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPhieuLienThongThue"] = this.idPhieuLienThongThue;
        if (Array.isArray(this.dsIdFileDinhKem)) {
            data["dsIdFileDinhKem"] = [];
            for (let item of this.dsIdFileDinhKem)
                data["dsIdFileDinhKem"].push(item);
        }
        return data; 
    }
}

export interface IUpdateDanhSachFileKySoCommand {
    idPhieuLienThongThue?: string | undefined;
    dsIdFileDinhKem?: string[] | undefined;
}

export class CapNhatKySoThanhCongCommand implements ICapNhatKySoThanhCongCommand {
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    kySoXml?: string | undefined;
    xmlGuiPhieuChuyen?: string | undefined;
    nguoiKy?: string | undefined;
    dsFileHoSoDaKy?: string[] | undefined;

    constructor(data?: ICapNhatKySoThanhCongCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idChuSuDungThuaDat = _data["idChuSuDungThuaDat"];
            this.kySoXml = _data["kySoXml"];
            this.xmlGuiPhieuChuyen = _data["xmlGuiPhieuChuyen"];
            this.nguoiKy = _data["nguoiKy"];
            if (Array.isArray(_data["dsFileHoSoDaKy"])) {
                this.dsFileHoSoDaKy = [] as any;
                for (let item of _data["dsFileHoSoDaKy"])
                    this.dsFileHoSoDaKy!.push(item);
            }
        }
    }

    static fromJS(data: any): CapNhatKySoThanhCongCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatKySoThanhCongCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idChuSuDungThuaDat"] = this.idChuSuDungThuaDat;
        data["kySoXml"] = this.kySoXml;
        data["xmlGuiPhieuChuyen"] = this.xmlGuiPhieuChuyen;
        data["nguoiKy"] = this.nguoiKy;
        if (Array.isArray(this.dsFileHoSoDaKy)) {
            data["dsFileHoSoDaKy"] = [];
            for (let item of this.dsFileHoSoDaKy)
                data["dsFileHoSoDaKy"].push(item);
        }
        return data; 
    }
}

export interface ICapNhatKySoThanhCongCommand {
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    kySoXml?: string | undefined;
    xmlGuiPhieuChuyen?: string | undefined;
    nguoiKy?: string | undefined;
    dsFileHoSoDaKy?: string[] | undefined;
}

export class ApiResultOfTruyVanThueDto implements IApiResultOfTruyVanThueDto {
    isError?: boolean;
    message?: string | undefined;
    data?: TruyVanThueDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfTruyVanThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? TruyVanThueDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfTruyVanThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfTruyVanThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfTruyVanThueDto {
    isError?: boolean;
    message?: string | undefined;
    data?: TruyVanThueDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class TruyVanThueDto implements ITruyVanThueDto {
    maKetQua?: string | undefined;
    ketQuaTruyVan?: string | undefined;
    tinhTrangPhieuChuyenText?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    loaiTruyVan?: LoaiTruyVanThue;

    constructor(data?: ITruyVanThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maKetQua = _data["maKetQua"];
            this.ketQuaTruyVan = _data["ketQuaTruyVan"];
            this.tinhTrangPhieuChuyenText = _data["tinhTrangPhieuChuyenText"];
            this.tinhTrangPhieuChuyen = _data["tinhTrangPhieuChuyen"];
            this.loaiTruyVan = _data["loaiTruyVan"];
        }
    }

    static fromJS(data: any): TruyVanThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new TruyVanThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maKetQua"] = this.maKetQua;
        data["ketQuaTruyVan"] = this.ketQuaTruyVan;
        data["tinhTrangPhieuChuyenText"] = this.tinhTrangPhieuChuyenText;
        data["tinhTrangPhieuChuyen"] = this.tinhTrangPhieuChuyen;
        data["loaiTruyVan"] = this.loaiTruyVan;
        return data; 
    }
}

export interface ITruyVanThueDto {
    maKetQua?: string | undefined;
    ketQuaTruyVan?: string | undefined;
    tinhTrangPhieuChuyenText?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    loaiTruyVan?: LoaiTruyVanThue;
}

export enum LoaiTruyVanThue {
    ThongBaoThue = 0,
    Nvtc = 1,
    HoSoScan = 2,
}

export class ApiResultOfPagedListOfSearchPhieuLienThongThueDto implements IApiResultOfPagedListOfSearchPhieuLienThongThueDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchPhieuLienThongThueDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchPhieuLienThongThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchPhieuLienThongThueDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchPhieuLienThongThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchPhieuLienThongThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchPhieuLienThongThueDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchPhieuLienThongThueDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchPhieuLienThongThueDto implements IPagedListOfSearchPhieuLienThongThueDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchPhieuLienThongThueDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchPhieuLienThongThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchPhieuLienThongThueDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchPhieuLienThongThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchPhieuLienThongThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchPhieuLienThongThueDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchPhieuLienThongThueDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchPhieuLienThongThueDto implements ISearchPhieuLienThongThueDto {
    id?: string | undefined;
    idPhieuChuyen?: string | undefined;
    soPhieu?: string | undefined;
    loaiPhieu?: string | undefined;
    maHoSo?: string | undefined;
    idHoSo?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    idBienDong?: string | undefined;
    idChuSdThuaDat?: string | undefined;
    nguoiNopHoSo?: string | undefined;
    isLoiChuyenThue?: boolean;
    tinhTrangPhieuChuyenText?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    moTaLoiChuyenThue?: string | undefined;
    moTaThongBaoThue?: string | undefined;
    moTaThongBaoThueDisplay?: string | undefined;
    moTaLoiThongBaoThue?: string | undefined;
    ngayTruyVanThongBaoThue?: Date | undefined;
    moTaThongTinNvtc?: string | undefined;
    moTaThongTinNvtcDisplay?: string | undefined;
    moTaLoiThongTinNvtc?: string | undefined;
    ngayTruyVanThongTinNvtc?: Date | undefined;
    ngayTaoCadas?: Date;
    ngayChuyenThue?: Date | undefined;
    isHoanThanhNvtc?: boolean;
    maLoiChuyenThue?: number | undefined;
    nguonDangKy?: NguonDangKy;
    maKetQuaThongTinNvtc?: number | undefined;
    maKetQuaThongBaoThue?: number | undefined;
    thoiHanTraThongBaoThue?: number | undefined;
    maCoQuanThue?: string | undefined;
    ngayTra?: string | undefined;
    nguoiTra?: string | undefined;
    tongPhaiNop?: string | undefined;
    tongMienGiam?: string | undefined;
    tongDaNop?: string | undefined;
    tongConPhaiNop?: string | undefined;

    constructor(data?: ISearchPhieuLienThongThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idPhieuChuyen = _data["idPhieuChuyen"];
            this.soPhieu = _data["soPhieu"];
            this.loaiPhieu = _data["loaiPhieu"];
            this.maHoSo = _data["maHoSo"];
            this.idHoSo = _data["idHoSo"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.idBienDong = _data["idBienDong"];
            this.idChuSdThuaDat = _data["idChuSdThuaDat"];
            this.nguoiNopHoSo = _data["nguoiNopHoSo"];
            this.isLoiChuyenThue = _data["isLoiChuyenThue"];
            this.tinhTrangPhieuChuyenText = _data["tinhTrangPhieuChuyenText"];
            this.tinhTrangPhieuChuyen = _data["tinhTrangPhieuChuyen"];
            this.moTaLoiChuyenThue = _data["moTaLoiChuyenThue"];
            this.moTaThongBaoThue = _data["moTaThongBaoThue"];
            this.moTaThongBaoThueDisplay = _data["moTaThongBaoThueDisplay"];
            this.moTaLoiThongBaoThue = _data["moTaLoiThongBaoThue"];
            this.ngayTruyVanThongBaoThue = _data["ngayTruyVanThongBaoThue"] ? new Date(_data["ngayTruyVanThongBaoThue"].toString()) : <any>undefined;
            this.moTaThongTinNvtc = _data["moTaThongTinNvtc"];
            this.moTaThongTinNvtcDisplay = _data["moTaThongTinNvtcDisplay"];
            this.moTaLoiThongTinNvtc = _data["moTaLoiThongTinNvtc"];
            this.ngayTruyVanThongTinNvtc = _data["ngayTruyVanThongTinNvtc"] ? new Date(_data["ngayTruyVanThongTinNvtc"].toString()) : <any>undefined;
            this.ngayTaoCadas = _data["ngayTaoCadas"] ? new Date(_data["ngayTaoCadas"].toString()) : <any>undefined;
            this.ngayChuyenThue = _data["ngayChuyenThue"] ? new Date(_data["ngayChuyenThue"].toString()) : <any>undefined;
            this.isHoanThanhNvtc = _data["isHoanThanhNvtc"];
            this.maLoiChuyenThue = _data["maLoiChuyenThue"];
            this.nguonDangKy = _data["nguonDangKy"];
            this.maKetQuaThongTinNvtc = _data["maKetQuaThongTinNvtc"];
            this.maKetQuaThongBaoThue = _data["maKetQuaThongBaoThue"];
            this.thoiHanTraThongBaoThue = _data["thoiHanTraThongBaoThue"];
            this.maCoQuanThue = _data["maCoQuanThue"];
            this.ngayTra = _data["ngayTra"];
            this.nguoiTra = _data["nguoiTra"];
            this.tongPhaiNop = _data["tongPhaiNop"];
            this.tongMienGiam = _data["tongMienGiam"];
            this.tongDaNop = _data["tongDaNop"];
            this.tongConPhaiNop = _data["tongConPhaiNop"];
        }
    }

    static fromJS(data: any): SearchPhieuLienThongThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new SearchPhieuLienThongThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idPhieuChuyen"] = this.idPhieuChuyen;
        data["soPhieu"] = this.soPhieu;
        data["loaiPhieu"] = this.loaiPhieu;
        data["maHoSo"] = this.maHoSo;
        data["idHoSo"] = this.idHoSo;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["idBienDong"] = this.idBienDong;
        data["idChuSdThuaDat"] = this.idChuSdThuaDat;
        data["nguoiNopHoSo"] = this.nguoiNopHoSo;
        data["isLoiChuyenThue"] = this.isLoiChuyenThue;
        data["tinhTrangPhieuChuyenText"] = this.tinhTrangPhieuChuyenText;
        data["tinhTrangPhieuChuyen"] = this.tinhTrangPhieuChuyen;
        data["moTaLoiChuyenThue"] = this.moTaLoiChuyenThue;
        data["moTaThongBaoThue"] = this.moTaThongBaoThue;
        data["moTaThongBaoThueDisplay"] = this.moTaThongBaoThueDisplay;
        data["moTaLoiThongBaoThue"] = this.moTaLoiThongBaoThue;
        data["ngayTruyVanThongBaoThue"] = this.ngayTruyVanThongBaoThue ? this.ngayTruyVanThongBaoThue.toISOString() : <any>undefined;
        data["moTaThongTinNvtc"] = this.moTaThongTinNvtc;
        data["moTaThongTinNvtcDisplay"] = this.moTaThongTinNvtcDisplay;
        data["moTaLoiThongTinNvtc"] = this.moTaLoiThongTinNvtc;
        data["ngayTruyVanThongTinNvtc"] = this.ngayTruyVanThongTinNvtc ? this.ngayTruyVanThongTinNvtc.toISOString() : <any>undefined;
        data["ngayTaoCadas"] = this.ngayTaoCadas ? this.ngayTaoCadas.toISOString() : <any>undefined;
        data["ngayChuyenThue"] = this.ngayChuyenThue ? this.ngayChuyenThue.toISOString() : <any>undefined;
        data["isHoanThanhNvtc"] = this.isHoanThanhNvtc;
        data["maLoiChuyenThue"] = this.maLoiChuyenThue;
        data["nguonDangKy"] = this.nguonDangKy;
        data["maKetQuaThongTinNvtc"] = this.maKetQuaThongTinNvtc;
        data["maKetQuaThongBaoThue"] = this.maKetQuaThongBaoThue;
        data["thoiHanTraThongBaoThue"] = this.thoiHanTraThongBaoThue;
        data["maCoQuanThue"] = this.maCoQuanThue;
        data["ngayTra"] = this.ngayTra;
        data["nguoiTra"] = this.nguoiTra;
        data["tongPhaiNop"] = this.tongPhaiNop;
        data["tongMienGiam"] = this.tongMienGiam;
        data["tongDaNop"] = this.tongDaNop;
        data["tongConPhaiNop"] = this.tongConPhaiNop;
        return data; 
    }
}

export interface ISearchPhieuLienThongThueDto {
    id?: string | undefined;
    idPhieuChuyen?: string | undefined;
    soPhieu?: string | undefined;
    loaiPhieu?: string | undefined;
    maHoSo?: string | undefined;
    idHoSo?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    idBienDong?: string | undefined;
    idChuSdThuaDat?: string | undefined;
    nguoiNopHoSo?: string | undefined;
    isLoiChuyenThue?: boolean;
    tinhTrangPhieuChuyenText?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    moTaLoiChuyenThue?: string | undefined;
    moTaThongBaoThue?: string | undefined;
    moTaThongBaoThueDisplay?: string | undefined;
    moTaLoiThongBaoThue?: string | undefined;
    ngayTruyVanThongBaoThue?: Date | undefined;
    moTaThongTinNvtc?: string | undefined;
    moTaThongTinNvtcDisplay?: string | undefined;
    moTaLoiThongTinNvtc?: string | undefined;
    ngayTruyVanThongTinNvtc?: Date | undefined;
    ngayTaoCadas?: Date;
    ngayChuyenThue?: Date | undefined;
    isHoanThanhNvtc?: boolean;
    maLoiChuyenThue?: number | undefined;
    nguonDangKy?: NguonDangKy;
    maKetQuaThongTinNvtc?: number | undefined;
    maKetQuaThongBaoThue?: number | undefined;
    thoiHanTraThongBaoThue?: number | undefined;
    maCoQuanThue?: string | undefined;
    ngayTra?: string | undefined;
    nguoiTra?: string | undefined;
    tongPhaiNop?: string | undefined;
    tongMienGiam?: string | undefined;
    tongDaNop?: string | undefined;
    tongConPhaiNop?: string | undefined;
}

export class SearchPhieuLienThongThueQuery extends PagingRequest implements ISearchPhieuLienThongThueQuery {
    tuNgayTao?: Date | undefined;
    denNgayTao?: Date | undefined;
    tuNgayChuyenThue?: Date | undefined;
    denNgayChuyenThue?: Date | undefined;
    trangThaiPhieu?: TrangThaiPhieuLienThongThueFilter | undefined;
    loaiHoSoLienThongThue?: LoaiHoSoLienThongThue | undefined;
    dsUserNameCanBoXuLy?: string[] | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    maHoSo?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;

    constructor(data?: ISearchPhieuLienThongThueQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.tuNgayTao = _data["tuNgayTao"] ? new Date(_data["tuNgayTao"].toString()) : <any>undefined;
            this.denNgayTao = _data["denNgayTao"] ? new Date(_data["denNgayTao"].toString()) : <any>undefined;
            this.tuNgayChuyenThue = _data["tuNgayChuyenThue"] ? new Date(_data["tuNgayChuyenThue"].toString()) : <any>undefined;
            this.denNgayChuyenThue = _data["denNgayChuyenThue"] ? new Date(_data["denNgayChuyenThue"].toString()) : <any>undefined;
            this.trangThaiPhieu = _data["trangThaiPhieu"];
            this.loaiHoSoLienThongThue = _data["loaiHoSoLienThongThue"];
            if (Array.isArray(_data["dsUserNameCanBoXuLy"])) {
                this.dsUserNameCanBoXuLy = [] as any;
                for (let item of _data["dsUserNameCanBoXuLy"])
                    this.dsUserNameCanBoXuLy!.push(item);
            }
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.maHoSo = _data["maHoSo"];
            this.orderColumn = _data["orderColumn"];
            this.orderValue = _data["orderValue"];
        }
    }

    static fromJS(data: any): SearchPhieuLienThongThueQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchPhieuLienThongThueQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgayTao"] = this.tuNgayTao ? this.tuNgayTao.toISOString() : <any>undefined;
        data["denNgayTao"] = this.denNgayTao ? this.denNgayTao.toISOString() : <any>undefined;
        data["tuNgayChuyenThue"] = this.tuNgayChuyenThue ? this.tuNgayChuyenThue.toISOString() : <any>undefined;
        data["denNgayChuyenThue"] = this.denNgayChuyenThue ? this.denNgayChuyenThue.toISOString() : <any>undefined;
        data["trangThaiPhieu"] = this.trangThaiPhieu;
        data["loaiHoSoLienThongThue"] = this.loaiHoSoLienThongThue;
        if (Array.isArray(this.dsUserNameCanBoXuLy)) {
            data["dsUserNameCanBoXuLy"] = [];
            for (let item of this.dsUserNameCanBoXuLy)
                data["dsUserNameCanBoXuLy"].push(item);
        }
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["maHoSo"] = this.maHoSo;
        data["orderColumn"] = this.orderColumn;
        data["orderValue"] = this.orderValue;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchPhieuLienThongThueQuery extends IPagingRequest {
    tuNgayTao?: Date | undefined;
    denNgayTao?: Date | undefined;
    tuNgayChuyenThue?: Date | undefined;
    denNgayChuyenThue?: Date | undefined;
    trangThaiPhieu?: TrangThaiPhieuLienThongThueFilter | undefined;
    loaiHoSoLienThongThue?: LoaiHoSoLienThongThue | undefined;
    dsUserNameCanBoXuLy?: string[] | undefined;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    maHoSo?: string | undefined;
    orderColumn?: string | undefined;
    orderValue?: boolean | undefined;
}

export enum TrangThaiPhieuLienThongThueFilter {
    DaChuyenThueChoKetQua = 0,
    DaHoanThanhNvtc = 1,
    ChuaChuyenThue = 2,
    DaChuyenThueBiLoi = 3,
    DaChuyenThueDaCoTB = 4,
    ChuaKy = 5,
    DaChuyenThueQuaHan = 6,
}

export class ApiResultOfLayThongTinHoSoByIdChuSdDto implements IApiResultOfLayThongTinHoSoByIdChuSdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: LayThongTinHoSoByIdChuSdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfLayThongTinHoSoByIdChuSdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? LayThongTinHoSoByIdChuSdDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfLayThongTinHoSoByIdChuSdDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfLayThongTinHoSoByIdChuSdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfLayThongTinHoSoByIdChuSdDto {
    isError?: boolean;
    message?: string | undefined;
    data?: LayThongTinHoSoByIdChuSdDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LayThongTinHoSoByIdChuSdDto implements ILayThongTinHoSoByIdChuSdDto {
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    ngayNop?: Date;
    ngayHenTra?: Date;

    constructor(data?: ILayThongTinHoSoByIdChuSdDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.nguoiNop = _data["nguoiNop"];
            this.ngayNop = _data["ngayNop"] ? new Date(_data["ngayNop"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): LayThongTinHoSoByIdChuSdDto {
        data = typeof data === 'object' ? data : {};
        let result = new LayThongTinHoSoByIdChuSdDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["nguoiNop"] = this.nguoiNop;
        data["ngayNop"] = this.ngayNop ? this.ngayNop.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        return data; 
    }
}

export interface ILayThongTinHoSoByIdChuSdDto {
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    nguoiNop?: string | undefined;
    ngayNop?: Date;
    ngayHenTra?: Date;
}

export class ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto implements IApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto {
    isError?: boolean;
    message?: string | undefined;
    data?: LayThongTinHoSoByDanhSachIdChuSdThuaDatDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LayThongTinHoSoByDanhSachIdChuSdThuaDatDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfListOfLayThongTinHoSoByDanhSachIdChuSdThuaDatDto {
    isError?: boolean;
    message?: string | undefined;
    data?: LayThongTinHoSoByDanhSachIdChuSdThuaDatDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LayThongTinHoSoByDanhSachIdChuSdThuaDatDto implements ILayThongTinHoSoByDanhSachIdChuSdThuaDatDto {
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    soPhieu?: string | undefined;
    maVachGcn?: string | undefined;
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    nguonDangKy?: number;

    constructor(data?: ILayThongTinHoSoByDanhSachIdChuSdThuaDatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.soPhieu = _data["soPhieu"];
            this.maVachGcn = _data["maVachGcn"];
            this.idBienDong = _data["idBienDong"];
            this.idChuSuDungThuaDat = _data["idChuSuDungThuaDat"];
            this.nguonDangKy = _data["nguonDangKy"];
        }
    }

    static fromJS(data: any): LayThongTinHoSoByDanhSachIdChuSdThuaDatDto {
        data = typeof data === 'object' ? data : {};
        let result = new LayThongTinHoSoByDanhSachIdChuSdThuaDatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["soPhieu"] = this.soPhieu;
        data["maVachGcn"] = this.maVachGcn;
        data["idBienDong"] = this.idBienDong;
        data["idChuSuDungThuaDat"] = this.idChuSuDungThuaDat;
        data["nguonDangKy"] = this.nguonDangKy;
        return data; 
    }
}

export interface ILayThongTinHoSoByDanhSachIdChuSdThuaDatDto {
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    soPhieu?: string | undefined;
    maVachGcn?: string | undefined;
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    nguonDangKy?: number;
}

export class LayThongTinHoSoByDanhSachIdChuSdThuaDatQuery implements ILayThongTinHoSoByDanhSachIdChuSdThuaDatQuery {
    dsIdChuSuDungThuaDat?: string | undefined;
    dsIdBienDong?: string | undefined;

    constructor(data?: ILayThongTinHoSoByDanhSachIdChuSdThuaDatQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.dsIdChuSuDungThuaDat = _data["dsIdChuSuDungThuaDat"];
            this.dsIdBienDong = _data["dsIdBienDong"];
        }
    }

    static fromJS(data: any): LayThongTinHoSoByDanhSachIdChuSdThuaDatQuery {
        data = typeof data === 'object' ? data : {};
        let result = new LayThongTinHoSoByDanhSachIdChuSdThuaDatQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["dsIdChuSuDungThuaDat"] = this.dsIdChuSuDungThuaDat;
        data["dsIdBienDong"] = this.dsIdBienDong;
        return data; 
    }
}

export interface ILayThongTinHoSoByDanhSachIdChuSdThuaDatQuery {
    dsIdChuSuDungThuaDat?: string | undefined;
    dsIdBienDong?: string | undefined;
}

export class ApiResultOfIListOfNguoiNopThueDto implements IApiResultOfIListOfNguoiNopThueDto {
    isError?: boolean;
    message?: string | undefined;
    data?: NguoiNopThueDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfNguoiNopThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(NguoiNopThueDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfNguoiNopThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfNguoiNopThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfNguoiNopThueDto {
    isError?: boolean;
    message?: string | undefined;
    data?: NguoiNopThueDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class NguoiNopThueDto implements INguoiNopThueDto {
    nntTen?: string | undefined;
    nntMst?: string | undefined;
    nntCmt?: string | undefined;
    nntDiaChi?: string | undefined;
    tongPhaiNop?: string | undefined;
    tongMienGiam?: string | undefined;
    tongDaNop?: string | undefined;
    tongConPhaiNop?: string | undefined;
    lptbSoThongBao?: string | undefined;
    lptbNgayThongBao?: string | undefined;
    lptbHanNop?: string | undefined;
    lptbSoQdmg?: string | undefined;
    lptbDuLieu?: string | undefined;
    tsddDuLieu?: string | undefined;
    tncnDuLieu?: string | undefined;
    tmdDuLieu?: string | undefined;
    tmnDuLieu?: string | undefined;

    constructor(data?: INguoiNopThueDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.nntTen = _data["nntTen"];
            this.nntMst = _data["nntMst"];
            this.nntCmt = _data["nntCmt"];
            this.nntDiaChi = _data["nntDiaChi"];
            this.tongPhaiNop = _data["tongPhaiNop"];
            this.tongMienGiam = _data["tongMienGiam"];
            this.tongDaNop = _data["tongDaNop"];
            this.tongConPhaiNop = _data["tongConPhaiNop"];
            this.lptbSoThongBao = _data["lptbSoThongBao"];
            this.lptbNgayThongBao = _data["lptbNgayThongBao"];
            this.lptbHanNop = _data["lptbHanNop"];
            this.lptbSoQdmg = _data["lptbSoQdmg"];
            this.lptbDuLieu = _data["lptbDuLieu"];
            this.tsddDuLieu = _data["tsddDuLieu"];
            this.tncnDuLieu = _data["tncnDuLieu"];
            this.tmdDuLieu = _data["tmdDuLieu"];
            this.tmnDuLieu = _data["tmnDuLieu"];
        }
    }

    static fromJS(data: any): NguoiNopThueDto {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiNopThueDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["nntTen"] = this.nntTen;
        data["nntMst"] = this.nntMst;
        data["nntCmt"] = this.nntCmt;
        data["nntDiaChi"] = this.nntDiaChi;
        data["tongPhaiNop"] = this.tongPhaiNop;
        data["tongMienGiam"] = this.tongMienGiam;
        data["tongDaNop"] = this.tongDaNop;
        data["tongConPhaiNop"] = this.tongConPhaiNop;
        data["lptbSoThongBao"] = this.lptbSoThongBao;
        data["lptbNgayThongBao"] = this.lptbNgayThongBao;
        data["lptbHanNop"] = this.lptbHanNop;
        data["lptbSoQdmg"] = this.lptbSoQdmg;
        data["lptbDuLieu"] = this.lptbDuLieu;
        data["tsddDuLieu"] = this.tsddDuLieu;
        data["tncnDuLieu"] = this.tncnDuLieu;
        data["tmdDuLieu"] = this.tmdDuLieu;
        data["tmnDuLieu"] = this.tmnDuLieu;
        return data; 
    }
}

export interface INguoiNopThueDto {
    nntTen?: string | undefined;
    nntMst?: string | undefined;
    nntCmt?: string | undefined;
    nntDiaChi?: string | undefined;
    tongPhaiNop?: string | undefined;
    tongMienGiam?: string | undefined;
    tongDaNop?: string | undefined;
    tongConPhaiNop?: string | undefined;
    lptbSoThongBao?: string | undefined;
    lptbNgayThongBao?: string | undefined;
    lptbHanNop?: string | undefined;
    lptbSoQdmg?: string | undefined;
    lptbDuLieu?: string | undefined;
    tsddDuLieu?: string | undefined;
    tncnDuLieu?: string | undefined;
    tmdDuLieu?: string | undefined;
    tmnDuLieu?: string | undefined;
}

export class ApiResultOfNoiDungPhieuChuyenVm implements IApiResultOfNoiDungPhieuChuyenVm {
    isError?: boolean;
    message?: string | undefined;
    data?: NoiDungPhieuChuyenVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfNoiDungPhieuChuyenVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? NoiDungPhieuChuyenVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfNoiDungPhieuChuyenVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfNoiDungPhieuChuyenVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfNoiDungPhieuChuyenVm {
    isError?: boolean;
    message?: string | undefined;
    data?: NoiDungPhieuChuyenVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class NoiDungPhieuChuyenVm implements INoiDungPhieuChuyenVm {
    noiDungPhieuChuyen?: string | undefined;
    noiDungPhieuChuyenThuCongCanKySo?: string | undefined;
    tenTinh?: string | undefined;
    tenHuyen?: string | undefined;
    tenXa?: string | undefined;
    maTinh?: string | undefined;
    phieuChuyenThueTemplate?: string | undefined;
    duongDanFile?: string | undefined;

    constructor(data?: INoiDungPhieuChuyenVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.noiDungPhieuChuyen = _data["noiDungPhieuChuyen"];
            this.noiDungPhieuChuyenThuCongCanKySo = _data["noiDungPhieuChuyenThuCongCanKySo"];
            this.tenTinh = _data["tenTinh"];
            this.tenHuyen = _data["tenHuyen"];
            this.tenXa = _data["tenXa"];
            this.maTinh = _data["maTinh"];
            this.phieuChuyenThueTemplate = _data["phieuChuyenThueTemplate"];
            this.duongDanFile = _data["duongDanFile"];
        }
    }

    static fromJS(data: any): NoiDungPhieuChuyenVm {
        data = typeof data === 'object' ? data : {};
        let result = new NoiDungPhieuChuyenVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["noiDungPhieuChuyen"] = this.noiDungPhieuChuyen;
        data["noiDungPhieuChuyenThuCongCanKySo"] = this.noiDungPhieuChuyenThuCongCanKySo;
        data["tenTinh"] = this.tenTinh;
        data["tenHuyen"] = this.tenHuyen;
        data["tenXa"] = this.tenXa;
        data["maTinh"] = this.maTinh;
        data["phieuChuyenThueTemplate"] = this.phieuChuyenThueTemplate;
        data["duongDanFile"] = this.duongDanFile;
        return data; 
    }
}

export interface INoiDungPhieuChuyenVm {
    noiDungPhieuChuyen?: string | undefined;
    noiDungPhieuChuyenThuCongCanKySo?: string | undefined;
    tenTinh?: string | undefined;
    tenHuyen?: string | undefined;
    tenXa?: string | undefined;
    maTinh?: string | undefined;
    phieuChuyenThueTemplate?: string | undefined;
    duongDanFile?: string | undefined;
}

export class ApiResultOfPhieuChuyenThueThuCongDto implements IApiResultOfPhieuChuyenThueThuCongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PhieuChuyenThueThuCongDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPhieuChuyenThueThuCongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PhieuChuyenThueThuCongDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPhieuChuyenThueThuCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPhieuChuyenThueThuCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPhieuChuyenThueThuCongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PhieuChuyenThueThuCongDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PhieuChuyenThueThuCongDto extends CreateOrUpdatePhieuChuyenNvtcThuCongCommand implements IPhieuChuyenThueThuCongDto {
    xmlPhieuChuyenGuiThue?: string | undefined;
    maHoSo?: string | undefined;
    ngayNhanHoSo?: Date;

    constructor(data?: IPhieuChuyenThueThuCongDto) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.xmlPhieuChuyenGuiThue = _data["xmlPhieuChuyenGuiThue"];
            this.maHoSo = _data["maHoSo"];
            this.ngayNhanHoSo = _data["ngayNhanHoSo"] ? new Date(_data["ngayNhanHoSo"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): PhieuChuyenThueThuCongDto {
        data = typeof data === 'object' ? data : {};
        let result = new PhieuChuyenThueThuCongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["xmlPhieuChuyenGuiThue"] = this.xmlPhieuChuyenGuiThue;
        data["maHoSo"] = this.maHoSo;
        data["ngayNhanHoSo"] = this.ngayNhanHoSo ? this.ngayNhanHoSo.toISOString() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IPhieuChuyenThueThuCongDto extends ICreateOrUpdatePhieuChuyenNvtcThuCongCommand {
    xmlPhieuChuyenGuiThue?: string | undefined;
    maHoSo?: string | undefined;
    ngayNhanHoSo?: Date;
}

export class ApiResultOfStringOf implements IApiResultOfStringOf {
    isError?: boolean;
    message?: string | undefined;
    data?: string[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfStringOf) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(item);
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfStringOf {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfStringOf();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item);
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfStringOf {
    isError?: boolean;
    message?: string | undefined;
    data?: string[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfPagedListOfPhieuChuyenThueStandard implements IApiResultOfPagedListOfPhieuChuyenThueStandard {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfPhieuChuyenThueStandard | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfPhieuChuyenThueStandard) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfPhieuChuyenThueStandard.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfPhieuChuyenThueStandard {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfPhieuChuyenThueStandard();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfPhieuChuyenThueStandard {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfPhieuChuyenThueStandard | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfPhieuChuyenThueStandard implements IPagedListOfPhieuChuyenThueStandard {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: PhieuChuyenThueStandard[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfPhieuChuyenThueStandard) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(PhieuChuyenThueStandard.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfPhieuChuyenThueStandard {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfPhieuChuyenThueStandard();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfPhieuChuyenThueStandard {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: PhieuChuyenThueStandard[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class PhieuChuyenThueStandard implements IPhieuChuyenThueStandard {
    id?: number | undefined;
    maHoSoGiaoDich?: string | undefined;
    soPhieu?: string | undefined;
    tinhTrangPhieu?: number | undefined;
    maHuyen?: number | undefined;
    ngayLap?: string | undefined;
    maXa?: number | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    ngayTra?: string | undefined;
    nguoiTra?: string | undefined;
    maCoQuanThue?: string | undefined;
    tenTinhTrangPhieu?: string | undefined;
    tenNguoiNop?: string | undefined;
    tongPhaiNop?: number | undefined;
    tongMienGiam?: number | undefined;
    tongDaNop?: number | undefined;
    tongConPhaiNop?: number | undefined;

    constructor(data?: IPhieuChuyenThueStandard) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maHoSoGiaoDich = _data["maHoSoGiaoDich"];
            this.soPhieu = _data["soPhieu"];
            this.tinhTrangPhieu = _data["tinhTrangPhieu"];
            this.maHuyen = _data["maHuyen"];
            this.ngayLap = _data["ngayLap"];
            this.maXa = _data["maXa"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.ngayTra = _data["ngayTra"];
            this.nguoiTra = _data["nguoiTra"];
            this.maCoQuanThue = _data["maCoQuanThue"];
            this.tenTinhTrangPhieu = _data["tenTinhTrangPhieu"];
            this.tenNguoiNop = _data["tenNguoiNop"];
            this.tongPhaiNop = _data["tongPhaiNop"];
            this.tongMienGiam = _data["tongMienGiam"];
            this.tongDaNop = _data["tongDaNop"];
            this.tongConPhaiNop = _data["tongConPhaiNop"];
        }
    }

    static fromJS(data: any): PhieuChuyenThueStandard {
        data = typeof data === 'object' ? data : {};
        let result = new PhieuChuyenThueStandard();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maHoSoGiaoDich"] = this.maHoSoGiaoDich;
        data["soPhieu"] = this.soPhieu;
        data["tinhTrangPhieu"] = this.tinhTrangPhieu;
        data["maHuyen"] = this.maHuyen;
        data["ngayLap"] = this.ngayLap;
        data["maXa"] = this.maXa;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["ngayTra"] = this.ngayTra;
        data["nguoiTra"] = this.nguoiTra;
        data["maCoQuanThue"] = this.maCoQuanThue;
        data["tenTinhTrangPhieu"] = this.tenTinhTrangPhieu;
        data["tenNguoiNop"] = this.tenNguoiNop;
        data["tongPhaiNop"] = this.tongPhaiNop;
        data["tongMienGiam"] = this.tongMienGiam;
        data["tongDaNop"] = this.tongDaNop;
        data["tongConPhaiNop"] = this.tongConPhaiNop;
        return data; 
    }
}

export interface IPhieuChuyenThueStandard {
    id?: number | undefined;
    maHoSoGiaoDich?: string | undefined;
    soPhieu?: string | undefined;
    tinhTrangPhieu?: number | undefined;
    maHuyen?: number | undefined;
    ngayLap?: string | undefined;
    maXa?: number | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    ngayTra?: string | undefined;
    nguoiTra?: string | undefined;
    maCoQuanThue?: string | undefined;
    tenTinhTrangPhieu?: string | undefined;
    tenNguoiNop?: string | undefined;
    tongPhaiNop?: number | undefined;
    tongMienGiam?: number | undefined;
    tongDaNop?: number | undefined;
    tongConPhaiNop?: number | undefined;
}

export class GetPhieuChuyenThueStandardQuery implements IGetPhieuChuyenThueStandardQuery {
    keyword?: string | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    ngayLapTu?: Date | undefined;
    ngayLapDen?: Date | undefined;
    ngayChuyenTu?: Date | undefined;
    ngayChuyenDen?: Date | undefined;
    tinhTrangPhieu?: string | undefined;
    maLoaiHoSo?: string | undefined;
    pNum?: number | undefined;
    pSize?: number | undefined;

    constructor(data?: IGetPhieuChuyenThueStandardQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.keyword = _data["keyword"];
            this.maHuyen = _data["maHuyen"];
            this.maXa = _data["maXa"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.ngayLapTu = _data["ngayLapTu"] ? new Date(_data["ngayLapTu"].toString()) : <any>undefined;
            this.ngayLapDen = _data["ngayLapDen"] ? new Date(_data["ngayLapDen"].toString()) : <any>undefined;
            this.ngayChuyenTu = _data["ngayChuyenTu"] ? new Date(_data["ngayChuyenTu"].toString()) : <any>undefined;
            this.ngayChuyenDen = _data["ngayChuyenDen"] ? new Date(_data["ngayChuyenDen"].toString()) : <any>undefined;
            this.tinhTrangPhieu = _data["tinhTrangPhieu"];
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.pNum = _data["pNum"];
            this.pSize = _data["pSize"];
        }
    }

    static fromJS(data: any): GetPhieuChuyenThueStandardQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetPhieuChuyenThueStandardQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["keyword"] = this.keyword;
        data["maHuyen"] = this.maHuyen;
        data["maXa"] = this.maXa;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["ngayLapTu"] = this.ngayLapTu ? this.ngayLapTu.toISOString() : <any>undefined;
        data["ngayLapDen"] = this.ngayLapDen ? this.ngayLapDen.toISOString() : <any>undefined;
        data["ngayChuyenTu"] = this.ngayChuyenTu ? this.ngayChuyenTu.toISOString() : <any>undefined;
        data["ngayChuyenDen"] = this.ngayChuyenDen ? this.ngayChuyenDen.toISOString() : <any>undefined;
        data["tinhTrangPhieu"] = this.tinhTrangPhieu;
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["pNum"] = this.pNum;
        data["pSize"] = this.pSize;
        return data; 
    }
}

export interface IGetPhieuChuyenThueStandardQuery {
    keyword?: string | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    ngayLapTu?: Date | undefined;
    ngayLapDen?: Date | undefined;
    ngayChuyenTu?: Date | undefined;
    ngayChuyenDen?: Date | undefined;
    tinhTrangPhieu?: string | undefined;
    maLoaiHoSo?: string | undefined;
    pNum?: number | undefined;
    pSize?: number | undefined;
}

export class ApiResultOfIListOfDonViLienThongThueVm implements IApiResultOfIListOfDonViLienThongThueVm {
    isError?: boolean;
    message?: string | undefined;
    data?: DonViLienThongThueVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDonViLienThongThueVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DonViLienThongThueVm.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDonViLienThongThueVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDonViLienThongThueVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDonViLienThongThueVm {
    isError?: boolean;
    message?: string | undefined;
    data?: DonViLienThongThueVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DonViLienThongThueVm implements IDonViLienThongThueVm {
    idDvhc?: string | undefined;
    maDvhc?: string | undefined;
    tenHienThi?: string | undefined;
    donViLienThongThue?: DonViLienThongThue;
    isDefault?: boolean;

    constructor(data?: IDonViLienThongThueVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDvhc = _data["idDvhc"];
            this.maDvhc = _data["maDvhc"];
            this.tenHienThi = _data["tenHienThi"];
            this.donViLienThongThue = _data["donViLienThongThue"];
            this.isDefault = _data["isDefault"];
        }
    }

    static fromJS(data: any): DonViLienThongThueVm {
        data = typeof data === 'object' ? data : {};
        let result = new DonViLienThongThueVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvhc"] = this.idDvhc;
        data["maDvhc"] = this.maDvhc;
        data["tenHienThi"] = this.tenHienThi;
        data["donViLienThongThue"] = this.donViLienThongThue;
        data["isDefault"] = this.isDefault;
        return data; 
    }
}

export interface IDonViLienThongThueVm {
    idDvhc?: string | undefined;
    maDvhc?: string | undefined;
    tenHienThi?: string | undefined;
    donViLienThongThue?: DonViLienThongThue;
    isDefault?: boolean;
}

export enum DonViLienThongThue {
    DonViGui = 0,
    DonViNhan = 1,
}

export class CheckHoanThanhNvtcCommand implements ICheckHoanThanhNvtcCommand {
    idPhieuChuyenThue?: string | undefined;

    constructor(data?: ICheckHoanThanhNvtcCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPhieuChuyenThue = _data["idPhieuChuyenThue"];
        }
    }

    static fromJS(data: any): CheckHoanThanhNvtcCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CheckHoanThanhNvtcCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPhieuChuyenThue"] = this.idPhieuChuyenThue;
        return data; 
    }
}

export interface ICheckHoanThanhNvtcCommand {
    idPhieuChuyenThue?: string | undefined;
}

export class ApiResultOfIListOfFileDinhKemVm implements IApiResultOfIListOfFileDinhKemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: FileDinhKemVm2[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfFileDinhKemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(FileDinhKemVm2.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfFileDinhKemVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfFileDinhKemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfFileDinhKemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: FileDinhKemVm2[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfBaoCaoHoSoLienThongViewModel implements IApiResultOfIListOfBaoCaoHoSoLienThongViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoHoSoLienThongViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBaoCaoHoSoLienThongViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BaoCaoHoSoLienThongViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBaoCaoHoSoLienThongViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBaoCaoHoSoLienThongViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBaoCaoHoSoLienThongViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: BaoCaoHoSoLienThongViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BaoCaoHoSoLienThongViewModel implements IBaoCaoHoSoLienThongViewModel {
    donVi?: string | undefined;
    soPhieuChuyenChuaGui?: number;
    soPhieuChuyenDaGui?: number;
    soPhieuChuyenGuiLoi?: number;
    soPhieuChuyenBiTuChoi?: number;
    soPhieuChuyenDaNhanTBT?: number;
    soPhieuChuyenDaHoanThanhNVTC?: number;

    constructor(data?: IBaoCaoHoSoLienThongViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.donVi = _data["donVi"];
            this.soPhieuChuyenChuaGui = _data["soPhieuChuyenChuaGui"];
            this.soPhieuChuyenDaGui = _data["soPhieuChuyenDaGui"];
            this.soPhieuChuyenGuiLoi = _data["soPhieuChuyenGuiLoi"];
            this.soPhieuChuyenBiTuChoi = _data["soPhieuChuyenBiTuChoi"];
            this.soPhieuChuyenDaNhanTBT = _data["soPhieuChuyenDaNhanTBT"];
            this.soPhieuChuyenDaHoanThanhNVTC = _data["soPhieuChuyenDaHoanThanhNVTC"];
        }
    }

    static fromJS(data: any): BaoCaoHoSoLienThongViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoHoSoLienThongViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["donVi"] = this.donVi;
        data["soPhieuChuyenChuaGui"] = this.soPhieuChuyenChuaGui;
        data["soPhieuChuyenDaGui"] = this.soPhieuChuyenDaGui;
        data["soPhieuChuyenGuiLoi"] = this.soPhieuChuyenGuiLoi;
        data["soPhieuChuyenBiTuChoi"] = this.soPhieuChuyenBiTuChoi;
        data["soPhieuChuyenDaNhanTBT"] = this.soPhieuChuyenDaNhanTBT;
        data["soPhieuChuyenDaHoanThanhNVTC"] = this.soPhieuChuyenDaHoanThanhNVTC;
        return data; 
    }
}

export interface IBaoCaoHoSoLienThongViewModel {
    donVi?: string | undefined;
    soPhieuChuyenChuaGui?: number;
    soPhieuChuyenDaGui?: number;
    soPhieuChuyenGuiLoi?: number;
    soPhieuChuyenBiTuChoi?: number;
    soPhieuChuyenDaNhanTBT?: number;
    soPhieuChuyenDaHoanThanhNVTC?: number;
}

export class BaoCaoHoSoLienThongThueQuery implements IBaoCaoHoSoLienThongThueQuery {
    tuNgayTao?: Date;
    denNgayTao?: Date;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;

    constructor(data?: IBaoCaoHoSoLienThongThueQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tuNgayTao = _data["tuNgayTao"] ? new Date(_data["tuNgayTao"].toString()) : <any>undefined;
            this.denNgayTao = _data["denNgayTao"] ? new Date(_data["denNgayTao"].toString()) : <any>undefined;
            this.idQuanHuyen = _data["idQuanHuyen"];
            this.idPhuongXa = _data["idPhuongXa"];
        }
    }

    static fromJS(data: any): BaoCaoHoSoLienThongThueQuery {
        data = typeof data === 'object' ? data : {};
        let result = new BaoCaoHoSoLienThongThueQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgayTao"] = this.tuNgayTao ? this.tuNgayTao.toISOString() : <any>undefined;
        data["denNgayTao"] = this.denNgayTao ? this.denNgayTao.toISOString() : <any>undefined;
        data["idQuanHuyen"] = this.idQuanHuyen;
        data["idPhuongXa"] = this.idPhuongXa;
        return data; 
    }
}

export interface IBaoCaoHoSoLienThongThueQuery {
    tuNgayTao?: Date;
    denNgayTao?: Date;
    idQuanHuyen?: string | undefined;
    idPhuongXa?: string | undefined;
}

export class CapNhatPhieuChuyenPdfCommand implements ICapNhatPhieuChuyenPdfCommand {
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    linkFilePhieuChuyen?: string | undefined;
    tenFilePhieuChuyen?: string | undefined;

    constructor(data?: ICapNhatPhieuChuyenPdfCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idChuSuDungThuaDat = _data["idChuSuDungThuaDat"];
            this.linkFilePhieuChuyen = _data["linkFilePhieuChuyen"];
            this.tenFilePhieuChuyen = _data["tenFilePhieuChuyen"];
        }
    }

    static fromJS(data: any): CapNhatPhieuChuyenPdfCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatPhieuChuyenPdfCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idChuSuDungThuaDat"] = this.idChuSuDungThuaDat;
        data["linkFilePhieuChuyen"] = this.linkFilePhieuChuyen;
        data["tenFilePhieuChuyen"] = this.tenFilePhieuChuyen;
        return data; 
    }
}

export interface ICapNhatPhieuChuyenPdfCommand {
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    linkFilePhieuChuyen?: string | undefined;
    tenFilePhieuChuyen?: string | undefined;
}

export class CapNhatPhatHanhPhieuChuyenCommand implements ICapNhatPhatHanhPhieuChuyenCommand {
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    soPhieu?: string | undefined;

    constructor(data?: ICapNhatPhatHanhPhieuChuyenCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idChuSuDungThuaDat = _data["idChuSuDungThuaDat"];
            this.soPhieu = _data["soPhieu"];
        }
    }

    static fromJS(data: any): CapNhatPhatHanhPhieuChuyenCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatPhatHanhPhieuChuyenCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idChuSuDungThuaDat"] = this.idChuSuDungThuaDat;
        data["soPhieu"] = this.soPhieu;
        return data; 
    }
}

export interface ICapNhatPhatHanhPhieuChuyenCommand {
    idBienDong?: string | undefined;
    idChuSuDungThuaDat?: string | undefined;
    soPhieu?: string | undefined;
}

export class ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto implements IApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetFileDinhKemByIdBuocXuLyDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetFileDinhKemByIdBuocXuLyDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfListOfGetFileDinhKemByIdBuocXuLyDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetFileDinhKemByIdBuocXuLyDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetFileDinhKemByIdBuocXuLyDto implements IGetFileDinhKemByIdBuocXuLyDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    tenVanBan?: string | undefined;
    maTinh?: string | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: IGetFileDinhKemByIdBuocXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.tenVanBan = _data["tenVanBan"];
            this.maTinh = _data["maTinh"];
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetFileDinhKemByIdBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetFileDinhKemByIdBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["tenVanBan"] = this.tenVanBan;
        data["maTinh"] = this.maTinh;
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetFileDinhKemByIdBuocXuLyDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuocXuLy?: string | undefined;
    tenVanBan?: string | undefined;
    maTinh?: string | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class UpFileSignedToStorageCommand implements IUpFileSignedToStorageCommand {
    pathFileTemp?: string | undefined;
    idHoSo?: string | undefined;

    constructor(data?: IUpFileSignedToStorageCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pathFileTemp = _data["pathFileTemp"];
            this.idHoSo = _data["idHoSo"];
        }
    }

    static fromJS(data: any): UpFileSignedToStorageCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpFileSignedToStorageCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pathFileTemp"] = this.pathFileTemp;
        data["idHoSo"] = this.idHoSo;
        return data; 
    }
}

export interface IUpFileSignedToStorageCommand {
    pathFileTemp?: string | undefined;
    idHoSo?: string | undefined;
}

export class ApiResultOfFileXacNhanNVTCVm implements IApiResultOfFileXacNhanNVTCVm {
    isError?: boolean;
    message?: string | undefined;
    data?: FileXacNhanNVTCVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfFileXacNhanNVTCVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? FileXacNhanNVTCVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfFileXacNhanNVTCVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfFileXacNhanNVTCVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfFileXacNhanNVTCVm {
    isError?: boolean;
    message?: string | undefined;
    data?: FileXacNhanNVTCVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class FileXacNhanNVTCVm implements IFileXacNhanNVTCVm {
    idPhieuChuyen?: string | undefined;
    danhSachKeyLuuFile?: FileDinhKemVm2[] | undefined;

    constructor(data?: IFileXacNhanNVTCVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idPhieuChuyen = _data["idPhieuChuyen"];
            if (Array.isArray(_data["danhSachKeyLuuFile"])) {
                this.danhSachKeyLuuFile = [] as any;
                for (let item of _data["danhSachKeyLuuFile"])
                    this.danhSachKeyLuuFile!.push(FileDinhKemVm2.fromJS(item));
            }
        }
    }

    static fromJS(data: any): FileXacNhanNVTCVm {
        data = typeof data === 'object' ? data : {};
        let result = new FileXacNhanNVTCVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idPhieuChuyen"] = this.idPhieuChuyen;
        if (Array.isArray(this.danhSachKeyLuuFile)) {
            data["danhSachKeyLuuFile"] = [];
            for (let item of this.danhSachKeyLuuFile)
                data["danhSachKeyLuuFile"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IFileXacNhanNVTCVm {
    idPhieuChuyen?: string | undefined;
    danhSachKeyLuuFile?: FileDinhKemVm2[] | undefined;
}

export class UpFileXacNhanNVTCCommand implements IUpFileXacNhanNVTCCommand {
    idHoSo?: string | undefined;
    idPhieuChuyen?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm2[] | undefined;

    constructor(data?: IUpFileXacNhanNVTCCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idPhieuChuyen = _data["idPhieuChuyen"];
            if (Array.isArray(_data["fileDinhKemVms"])) {
                this.fileDinhKemVms = [] as any;
                for (let item of _data["fileDinhKemVms"])
                    this.fileDinhKemVms!.push(FileDinhKemVm2.fromJS(item));
            }
        }
    }

    static fromJS(data: any): UpFileXacNhanNVTCCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpFileXacNhanNVTCCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idPhieuChuyen"] = this.idPhieuChuyen;
        if (Array.isArray(this.fileDinhKemVms)) {
            data["fileDinhKemVms"] = [];
            for (let item of this.fileDinhKemVms)
                data["fileDinhKemVms"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IUpFileXacNhanNVTCCommand {
    idHoSo?: string | undefined;
    idPhieuChuyen?: string | undefined;
    fileDinhKemVms?: FileDinhKemVm2[] | undefined;
}

export class ApiResultOfIListOfHoSoLoaiGiayTo implements IApiResultOfIListOfHoSoLoaiGiayTo {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoLoaiGiayTo[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfHoSoLoaiGiayTo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(HoSoLoaiGiayTo.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfHoSoLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfHoSoLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfHoSoLoaiGiayTo {
    isError?: boolean;
    message?: string | undefined;
    data?: HoSoLoaiGiayTo[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfFileDinhKem implements IApiResultOfIListOfFileDinhKem {
    isError?: boolean;
    message?: string | undefined;
    data?: FileDinhKem[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfFileDinhKem) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(FileDinhKem.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfFileDinhKem {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfFileDinhKem();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfFileDinhKem {
    isError?: boolean;
    message?: string | undefined;
    data?: FileDinhKem[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfGetHoSoQuetByIdHoSoDto implements IApiResultOfIListOfGetHoSoQuetByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetHoSoQuetByIdHoSoDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetHoSoQuetByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetHoSoQuetByIdHoSoDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetHoSoQuetByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetHoSoQuetByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetHoSoQuetByIdHoSoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetHoSoQuetByIdHoSoDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetHoSoQuetByIdHoSoDto implements IGetHoSoQuetByIdHoSoDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    maHoSoQuet?: string | undefined;
    tenHoSoQuet?: string | undefined;
    idLinhVucCadas?: string | undefined;
    tenLinhVucCadas?: string | undefined;
    noiDung?: string | undefined;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    nguoiTao?: string | undefined;
    idNguoiTao?: string | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiCapNhat?: string | undefined;
    idNguoiCapNhat?: string | undefined;
    hinhThuc?: LuuHoSoQuetCadas;
    tenHinhThuc?: string | undefined;
    hsfilehoso?: FileHoSoCadas[] | undefined;
    listthuadat?: ThuaDatCadas[] | undefined;

    constructor(data?: IGetHoSoQuetByIdHoSoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.maHoSoQuet = _data["maHoSoQuet"];
            this.tenHoSoQuet = _data["tenHoSoQuet"];
            this.idLinhVucCadas = _data["idLinhVucCadas"];
            this.tenLinhVucCadas = _data["tenLinhVucCadas"];
            this.noiDung = _data["noiDung"];
            this.maTinh = _data["maTinh"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.nguoiTao = _data["nguoiTao"];
            this.idNguoiTao = _data["idNguoiTao"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.idNguoiCapNhat = _data["idNguoiCapNhat"];
            this.hinhThuc = _data["hinhThuc"];
            this.tenHinhThuc = _data["tenHinhThuc"];
            if (Array.isArray(_data["hsfilehoso"])) {
                this.hsfilehoso = [] as any;
                for (let item of _data["hsfilehoso"])
                    this.hsfilehoso!.push(FileHoSoCadas.fromJS(item));
            }
            if (Array.isArray(_data["listthuadat"])) {
                this.listthuadat = [] as any;
                for (let item of _data["listthuadat"])
                    this.listthuadat!.push(ThuaDatCadas.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetHoSoQuetByIdHoSoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetHoSoQuetByIdHoSoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["maHoSoQuet"] = this.maHoSoQuet;
        data["tenHoSoQuet"] = this.tenHoSoQuet;
        data["idLinhVucCadas"] = this.idLinhVucCadas;
        data["tenLinhVucCadas"] = this.tenLinhVucCadas;
        data["noiDung"] = this.noiDung;
        data["maTinh"] = this.maTinh;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["nguoiTao"] = this.nguoiTao;
        data["idNguoiTao"] = this.idNguoiTao;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["idNguoiCapNhat"] = this.idNguoiCapNhat;
        data["hinhThuc"] = this.hinhThuc;
        data["tenHinhThuc"] = this.tenHinhThuc;
        if (Array.isArray(this.hsfilehoso)) {
            data["hsfilehoso"] = [];
            for (let item of this.hsfilehoso)
                data["hsfilehoso"].push(item.toJSON());
        }
        if (Array.isArray(this.listthuadat)) {
            data["listthuadat"] = [];
            for (let item of this.listthuadat)
                data["listthuadat"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetHoSoQuetByIdHoSoDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    maHoSoQuet?: string | undefined;
    tenHoSoQuet?: string | undefined;
    idLinhVucCadas?: string | undefined;
    tenLinhVucCadas?: string | undefined;
    noiDung?: string | undefined;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    nguoiTao?: string | undefined;
    idNguoiTao?: string | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiCapNhat?: string | undefined;
    idNguoiCapNhat?: string | undefined;
    hinhThuc?: LuuHoSoQuetCadas;
    tenHinhThuc?: string | undefined;
    hsfilehoso?: FileHoSoCadas[] | undefined;
    listthuadat?: ThuaDatCadas[] | undefined;
}

export class FileHoSoCadas implements IFileHoSoCadas {
    idfilehoso?: string | undefined;
    tenfile?: string | undefined;
    url?: string | undefined;
    idhoso?: string | undefined;
    idloaitailieu?: string | undefined;
    loaitailieu?: string | undefined;
    kichthuoc?: number | undefined;
    idnguoidung?: string | undefined;
    ngaynhap?: Date | undefined;
    parmatinh?: string | undefined;
    idhsmuontra?: string | undefined;
    trangthaimuontra?: number | undefined;
    duongdanftp?: string | undefined;
    idhosocsdtd?: string | undefined;

    constructor(data?: IFileHoSoCadas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idfilehoso = _data["idfilehoso"];
            this.tenfile = _data["tenfile"];
            this.url = _data["url"];
            this.idhoso = _data["idhoso"];
            this.idloaitailieu = _data["idloaitailieu"];
            this.loaitailieu = _data["loaitailieu"];
            this.kichthuoc = _data["kichthuoc"];
            this.idnguoidung = _data["idnguoidung"];
            this.ngaynhap = _data["ngaynhap"] ? new Date(_data["ngaynhap"].toString()) : <any>undefined;
            this.parmatinh = _data["parmatinh"];
            this.idhsmuontra = _data["idhsmuontra"];
            this.trangthaimuontra = _data["trangthaimuontra"];
            this.duongdanftp = _data["duongdanftp"];
            this.idhosocsdtd = _data["idhosocsdtd"];
        }
    }

    static fromJS(data: any): FileHoSoCadas {
        data = typeof data === 'object' ? data : {};
        let result = new FileHoSoCadas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idfilehoso"] = this.idfilehoso;
        data["tenfile"] = this.tenfile;
        data["url"] = this.url;
        data["idhoso"] = this.idhoso;
        data["idloaitailieu"] = this.idloaitailieu;
        data["loaitailieu"] = this.loaitailieu;
        data["kichthuoc"] = this.kichthuoc;
        data["idnguoidung"] = this.idnguoidung;
        data["ngaynhap"] = this.ngaynhap ? this.ngaynhap.toISOString() : <any>undefined;
        data["parmatinh"] = this.parmatinh;
        data["idhsmuontra"] = this.idhsmuontra;
        data["trangthaimuontra"] = this.trangthaimuontra;
        data["duongdanftp"] = this.duongdanftp;
        data["idhosocsdtd"] = this.idhosocsdtd;
        return data; 
    }
}

export interface IFileHoSoCadas {
    idfilehoso?: string | undefined;
    tenfile?: string | undefined;
    url?: string | undefined;
    idhoso?: string | undefined;
    idloaitailieu?: string | undefined;
    loaitailieu?: string | undefined;
    kichthuoc?: number | undefined;
    idnguoidung?: string | undefined;
    ngaynhap?: Date | undefined;
    parmatinh?: string | undefined;
    idhsmuontra?: string | undefined;
    trangthaimuontra?: number | undefined;
    duongdanftp?: string | undefined;
    idhosocsdtd?: string | undefined;
}

export class ThuaDatCadas implements IThuaDatCadas {
    idthuadathsquet?: string | undefined;
    idhoso?: string | undefined;
    sotodaidien?: string | undefined;
    sothuadaidien?: string | undefined;
    idtobando?: string | undefined;

    constructor(data?: IThuaDatCadas) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idthuadathsquet = _data["idthuadathsquet"];
            this.idhoso = _data["idhoso"];
            this.sotodaidien = _data["sotodaidien"];
            this.sothuadaidien = _data["sothuadaidien"];
            this.idtobando = _data["idtobando"];
        }
    }

    static fromJS(data: any): ThuaDatCadas {
        data = typeof data === 'object' ? data : {};
        let result = new ThuaDatCadas();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idthuadathsquet"] = this.idthuadathsquet;
        data["idhoso"] = this.idhoso;
        data["sotodaidien"] = this.sotodaidien;
        data["sothuadaidien"] = this.sothuadaidien;
        data["idtobando"] = this.idtobando;
        return data; 
    }
}

export interface IThuaDatCadas {
    idthuadathsquet?: string | undefined;
    idhoso?: string | undefined;
    sotodaidien?: string | undefined;
    sothuadaidien?: string | undefined;
    idtobando?: string | undefined;
}

export class ApiResultOfIListOfLoaiNgayNghiViewModel implements IApiResultOfIListOfLoaiNgayNghiViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiNgayNghiViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLoaiNgayNghiViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LoaiNgayNghiViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLoaiNgayNghiViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLoaiNgayNghiViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLoaiNgayNghiViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiNgayNghiViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LoaiNgayNghiViewModel implements ILoaiNgayNghiViewModel {
    id?: number;
    maNgay?: string | undefined;
    thoiGianLamViec?: number;
    moTa?: string | undefined;
    loaiNgayEnum?: LoaiNgayEnum;

    constructor(data?: ILoaiNgayNghiViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maNgay = _data["maNgay"];
            this.thoiGianLamViec = _data["thoiGianLamViec"];
            this.moTa = _data["moTa"];
            this.loaiNgayEnum = _data["loaiNgayEnum"];
        }
    }

    static fromJS(data: any): LoaiNgayNghiViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiNgayNghiViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maNgay"] = this.maNgay;
        data["thoiGianLamViec"] = this.thoiGianLamViec;
        data["moTa"] = this.moTa;
        data["loaiNgayEnum"] = this.loaiNgayEnum;
        return data; 
    }
}

export interface ILoaiNgayNghiViewModel {
    id?: number;
    maNgay?: string | undefined;
    thoiGianLamViec?: number;
    moTa?: string | undefined;
    loaiNgayEnum?: LoaiNgayEnum;
}

export enum LoaiNgayEnum {
    LamCaNgay = 1,
    LamBuoiSang = 2,
    LamBuoiChieu = 3,
    CuoiTuan = 4,
    NghiLeTet = 5,
}

export class ApiResultOfLichLamViecViewModel implements IApiResultOfLichLamViecViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LichLamViecViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfLichLamViecViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? LichLamViecViewModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfLichLamViecViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfLichLamViecViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfLichLamViecViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LichLamViecViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LichLamViecViewModel implements ILichLamViecViewModel {
    ngayHienTai?: Date;
    ngayNghis?: NgayNghiViewModel[] | undefined;

    constructor(data?: ILichLamViecViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ngayHienTai = _data["ngayHienTai"] ? new Date(_data["ngayHienTai"].toString()) : <any>undefined;
            if (Array.isArray(_data["ngayNghis"])) {
                this.ngayNghis = [] as any;
                for (let item of _data["ngayNghis"])
                    this.ngayNghis!.push(NgayNghiViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): LichLamViecViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LichLamViecViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ngayHienTai"] = this.ngayHienTai ? this.ngayHienTai.toISOString() : <any>undefined;
        if (Array.isArray(this.ngayNghis)) {
            data["ngayNghis"] = [];
            for (let item of this.ngayNghis)
                data["ngayNghis"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ILichLamViecViewModel {
    ngayHienTai?: Date;
    ngayNghis?: NgayNghiViewModel[] | undefined;
}

export class NgayNghiViewModel implements INgayNghiViewModel {
    id?: string | undefined;
    ngay?: Date;
    maNgay?: string | undefined;
    thoiGianLamViec?: number;
    moTa?: string | undefined;
    idLoaiNgay?: number;

    constructor(data?: INgayNghiViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.ngay = _data["ngay"] ? new Date(_data["ngay"].toString()) : <any>undefined;
            this.maNgay = _data["maNgay"];
            this.thoiGianLamViec = _data["thoiGianLamViec"];
            this.moTa = _data["moTa"];
            this.idLoaiNgay = _data["idLoaiNgay"];
        }
    }

    static fromJS(data: any): NgayNghiViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new NgayNghiViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["ngay"] = this.ngay ? this.ngay.toISOString() : <any>undefined;
        data["maNgay"] = this.maNgay;
        data["thoiGianLamViec"] = this.thoiGianLamViec;
        data["moTa"] = this.moTa;
        data["idLoaiNgay"] = this.idLoaiNgay;
        return data; 
    }
}

export interface INgayNghiViewModel {
    id?: string | undefined;
    ngay?: Date;
    maNgay?: string | undefined;
    thoiGianLamViec?: number;
    moTa?: string | undefined;
    idLoaiNgay?: number;
}

export class ApiResultOfIListOfLichSuPhieuChuyenThueViewModel implements IApiResultOfIListOfLichSuPhieuChuyenThueViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LichSuPhieuChuyenThueViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLichSuPhieuChuyenThueViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LichSuPhieuChuyenThueViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLichSuPhieuChuyenThueViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLichSuPhieuChuyenThueViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLichSuPhieuChuyenThueViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: LichSuPhieuChuyenThueViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LichSuPhieuChuyenThueViewModel implements ILichSuPhieuChuyenThueViewModel {
    id?: number;
    idPhieuChuyenThue?: string | undefined;
    tieuDe?: string | undefined;
    trangThaiPhieu?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThaiLichSuPhieuChuyen;
    maTinh?: string | undefined;
    action?: string | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiCapNhat?: string | undefined;
    soPhieu?: string | undefined;
    soBienNhan?: string | undefined;
    maVachGcn?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    tinhTrangPhieuChuyenText?: string | undefined;

    constructor(data?: ILichSuPhieuChuyenThueViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idPhieuChuyenThue = _data["idPhieuChuyenThue"];
            this.tieuDe = _data["tieuDe"];
            this.trangThaiPhieu = _data["trangThaiPhieu"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.maTinh = _data["maTinh"];
            this.action = _data["action"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.soPhieu = _data["soPhieu"];
            this.soBienNhan = _data["soBienNhan"];
            this.maVachGcn = _data["maVachGcn"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.tinhTrangPhieuChuyen = _data["tinhTrangPhieuChuyen"];
            this.tinhTrangPhieuChuyenText = _data["tinhTrangPhieuChuyenText"];
        }
    }

    static fromJS(data: any): LichSuPhieuChuyenThueViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LichSuPhieuChuyenThueViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idPhieuChuyenThue"] = this.idPhieuChuyenThue;
        data["tieuDe"] = this.tieuDe;
        data["trangThaiPhieu"] = this.trangThaiPhieu;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["maTinh"] = this.maTinh;
        data["action"] = this.action;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["soPhieu"] = this.soPhieu;
        data["soBienNhan"] = this.soBienNhan;
        data["maVachGcn"] = this.maVachGcn;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["tinhTrangPhieuChuyen"] = this.tinhTrangPhieuChuyen;
        data["tinhTrangPhieuChuyenText"] = this.tinhTrangPhieuChuyenText;
        return data; 
    }
}

export interface ILichSuPhieuChuyenThueViewModel {
    id?: number;
    idPhieuChuyenThue?: string | undefined;
    tieuDe?: string | undefined;
    trangThaiPhieu?: string | undefined;
    moTa?: string | undefined;
    trangThai?: TrangThaiLichSuPhieuChuyen;
    maTinh?: string | undefined;
    action?: string | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiCapNhat?: string | undefined;
    soPhieu?: string | undefined;
    soBienNhan?: string | undefined;
    maVachGcn?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    tinhTrangPhieuChuyen?: TinhTrangPhieuChuyen;
    tinhTrangPhieuChuyenText?: string | undefined;
}

export class ApiResultOfIListOfLinhVuc implements IApiResultOfIListOfLinhVuc {
    isError?: boolean;
    message?: string | undefined;
    data?: LinhVuc[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLinhVuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LinhVuc.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLinhVuc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLinhVuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLinhVuc {
    isError?: boolean;
    message?: string | undefined;
    data?: LinhVuc[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfLoaiGiayTo implements IApiResultOfIListOfLoaiGiayTo {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiGiayTo[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLoaiGiayTo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LoaiGiayTo.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLoaiGiayTo {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiGiayTo[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LoaiGiayToViewModel implements ILoaiGiayToViewModel {
    id?: number;
    maLoaiGiayTo?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    moTa?: string | undefined;
    laGiayToTuyThan?: number;
    trangThai?: number;

    constructor(data?: ILoaiGiayToViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maLoaiGiayTo = _data["maLoaiGiayTo"];
            this.tenLoaiGiayTo = _data["tenLoaiGiayTo"];
            this.moTa = _data["moTa"];
            this.laGiayToTuyThan = _data["laGiayToTuyThan"];
            this.trangThai = _data["trangThai"];
        }
    }

    static fromJS(data: any): LoaiGiayToViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiGiayToViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maLoaiGiayTo"] = this.maLoaiGiayTo;
        data["tenLoaiGiayTo"] = this.tenLoaiGiayTo;
        data["moTa"] = this.moTa;
        data["laGiayToTuyThan"] = this.laGiayToTuyThan;
        data["trangThai"] = this.trangThai;
        return data; 
    }
}

export interface ILoaiGiayToViewModel {
    id?: number;
    maLoaiGiayTo?: string | undefined;
    tenLoaiGiayTo?: string | undefined;
    moTa?: string | undefined;
    laGiayToTuyThan?: number;
    trangThai?: number;
}

export class ApiResultOfPagedListOfLoaiGiayTo implements IApiResultOfPagedListOfLoaiGiayTo {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfLoaiGiayTo | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfLoaiGiayTo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfLoaiGiayTo.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfLoaiGiayTo {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfLoaiGiayTo | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfLoaiGiayTo implements IPagedListOfLoaiGiayTo {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: LoaiGiayTo[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfLoaiGiayTo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(LoaiGiayTo.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfLoaiGiayTo {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfLoaiGiayTo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfLoaiGiayTo {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: LoaiGiayTo[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class LoaiGiayToRequest extends PagingRequest implements ILoaiGiayToRequest {
    isDisableFillterActive?: boolean;

    constructor(data?: ILoaiGiayToRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.isDisableFillterActive = _data["isDisableFillterActive"];
        }
    }

    static fromJS(data: any): LoaiGiayToRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiGiayToRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isDisableFillterActive"] = this.isDisableFillterActive;
        super.toJSON(data);
        return data; 
    }
}

export interface ILoaiGiayToRequest extends IPagingRequest {
    isDisableFillterActive?: boolean;
}

export class ApiResultOfIListOfLoaiHoSo implements IApiResultOfIListOfLoaiHoSo {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiHoSo[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLoaiHoSo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LoaiHoSo.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLoaiHoSo {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLoaiHoSo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLoaiHoSo {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiHoSo[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LoaiHoSoViewModel implements ILoaiHoSoViewModel {
    id?: number;
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;

    constructor(data?: ILoaiHoSoViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maLoaiHoSo = _data["maLoaiHoSo"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
        }
    }

    static fromJS(data: any): LoaiHoSoViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiHoSoViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maLoaiHoSo"] = this.maLoaiHoSo;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        return data; 
    }
}

export interface ILoaiHoSoViewModel {
    id?: number;
    maLoaiHoSo?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
}

export class ApiResultOfPagedListOfLoaiHoSo implements IApiResultOfPagedListOfLoaiHoSo {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfLoaiHoSo | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfLoaiHoSo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfLoaiHoSo.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfLoaiHoSo {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfLoaiHoSo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfLoaiHoSo {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfLoaiHoSo | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfLoaiHoSo implements IPagedListOfLoaiHoSo {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: LoaiHoSo[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfLoaiHoSo) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(LoaiHoSo.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfLoaiHoSo {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfLoaiHoSo();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfLoaiHoSo {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: LoaiHoSo[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class LoaiHoSoRequest extends PagingRequest implements ILoaiHoSoRequest {
    isDisableFillterActive?: boolean;

    constructor(data?: ILoaiHoSoRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.isDisableFillterActive = _data["isDisableFillterActive"];
        }
    }

    static fromJS(data: any): LoaiHoSoRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiHoSoRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isDisableFillterActive"] = this.isDisableFillterActive;
        super.toJSON(data);
        return data; 
    }
}

export interface ILoaiHoSoRequest extends IPagingRequest {
    isDisableFillterActive?: boolean;
}

export class ApiResultOfIListOfGetLuongXuLyTiepTheoDto implements IApiResultOfIListOfGetLuongXuLyTiepTheoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetLuongXuLyTiepTheoDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetLuongXuLyTiepTheoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetLuongXuLyTiepTheoDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetLuongXuLyTiepTheoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetLuongXuLyTiepTheoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetLuongXuLyTiepTheoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetLuongXuLyTiepTheoDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetLuongXuLyTiepTheoDto implements IGetLuongXuLyTiepTheoDto {
    id?: string | undefined;
    idNghiepVu?: number;
    idTrangThaiXuLyHienTai?: number;
    idTrangThaiXuLyTiepTheo?: number;

    constructor(data?: IGetLuongXuLyTiepTheoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.idTrangThaiXuLyHienTai = _data["idTrangThaiXuLyHienTai"];
            this.idTrangThaiXuLyTiepTheo = _data["idTrangThaiXuLyTiepTheo"];
        }
    }

    static fromJS(data: any): GetLuongXuLyTiepTheoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetLuongXuLyTiepTheoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idNghiepVu"] = this.idNghiepVu;
        data["idTrangThaiXuLyHienTai"] = this.idTrangThaiXuLyHienTai;
        data["idTrangThaiXuLyTiepTheo"] = this.idTrangThaiXuLyTiepTheo;
        return data; 
    }
}

export interface IGetLuongXuLyTiepTheoDto {
    id?: string | undefined;
    idNghiepVu?: number;
    idTrangThaiXuLyHienTai?: number;
    idTrangThaiXuLyTiepTheo?: number;
}

export class ApiResultOfIListOfGetLyDoTheoNghiepVuDto implements IApiResultOfIListOfGetLyDoTheoNghiepVuDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetLyDoTheoNghiepVuDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetLyDoTheoNghiepVuDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetLyDoTheoNghiepVuDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetLyDoTheoNghiepVuDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetLyDoTheoNghiepVuDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetLyDoTheoNghiepVuDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetLyDoTheoNghiepVuDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetLyDoTheoNghiepVuDto implements IGetLyDoTheoNghiepVuDto {
    id?: string | undefined;
    maLyDo?: string | undefined;
    tenLyDo?: string | undefined;

    constructor(data?: IGetLyDoTheoNghiepVuDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maLyDo = _data["maLyDo"];
            this.tenLyDo = _data["tenLyDo"];
        }
    }

    static fromJS(data: any): GetLyDoTheoNghiepVuDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetLyDoTheoNghiepVuDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maLyDo"] = this.maLyDo;
        data["tenLyDo"] = this.tenLyDo;
        return data; 
    }
}

export interface IGetLyDoTheoNghiepVuDto {
    id?: string | undefined;
    maLyDo?: string | undefined;
    tenLyDo?: string | undefined;
}

export class ApiResultOfMailSetting implements IApiResultOfMailSetting {
    isError?: boolean;
    message?: string | undefined;
    data?: MailSetting | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfMailSetting) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? MailSetting.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfMailSetting {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfMailSetting();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfMailSetting {
    isError?: boolean;
    message?: string | undefined;
    data?: MailSetting | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class MailSettingViewModel implements IMailSettingViewModel {
    id?: number;
    mail?: string | undefined;
    tenHienThi?: string | undefined;
    password?: string | undefined;
    host?: string | undefined;
    port?: number;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: number;
    baoMat?: number;

    constructor(data?: IMailSettingViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.mail = _data["mail"];
            this.tenHienThi = _data["tenHienThi"];
            this.password = _data["password"];
            this.host = _data["host"];
            this.port = _data["port"];
            this.moTa = _data["moTa"];
            this.maTinh = _data["maTinh"];
            this.trangThai = _data["trangThai"];
            this.baoMat = _data["baoMat"];
        }
    }

    static fromJS(data: any): MailSettingViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new MailSettingViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["mail"] = this.mail;
        data["tenHienThi"] = this.tenHienThi;
        data["password"] = this.password;
        data["host"] = this.host;
        data["port"] = this.port;
        data["moTa"] = this.moTa;
        data["maTinh"] = this.maTinh;
        data["trangThai"] = this.trangThai;
        data["baoMat"] = this.baoMat;
        return data; 
    }
}

export interface IMailSettingViewModel {
    id?: number;
    mail?: string | undefined;
    tenHienThi?: string | undefined;
    password?: string | undefined;
    host?: string | undefined;
    port?: number;
    moTa?: string | undefined;
    maTinh?: string | undefined;
    trangThai?: number;
    baoMat?: number;
}

export class ApiResultOfPagedListOfMailSetting implements IApiResultOfPagedListOfMailSetting {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfMailSetting | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfMailSetting) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfMailSetting.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfMailSetting {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfMailSetting();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfMailSetting {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfMailSetting | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfMailSetting implements IPagedListOfMailSetting {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: MailSetting[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfMailSetting) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(MailSetting.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfMailSetting {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfMailSetting();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfMailSetting {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: MailSetting[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class MailSettingRequest extends PagingRequest implements IMailSettingRequest {

    constructor(data?: IMailSettingRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): MailSettingRequest {
        data = typeof data === 'object' ? data : {};
        let result = new MailSettingRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IMailSettingRequest extends IPagingRequest {
}

export class ApiResultOfMailMau implements IApiResultOfMailMau {
    isError?: boolean;
    message?: string | undefined;
    data?: MailMau | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfMailMau) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? MailMau.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfMailMau {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfMailMau();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfMailMau {
    isError?: boolean;
    message?: string | undefined;
    data?: MailMau | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class MailMauViewModel implements IMailMauViewModel {
    id?: string | undefined;
    maMailMau?: string | undefined;
    tieuDe?: string | undefined;
    noiDung?: string | undefined;
    idMailSetting?: number;
    maTinh?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;

    constructor(data?: IMailMauViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maMailMau = _data["maMailMau"];
            this.tieuDe = _data["tieuDe"];
            this.noiDung = _data["noiDung"];
            this.idMailSetting = _data["idMailSetting"];
            this.maTinh = _data["maTinh"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
        }
    }

    static fromJS(data: any): MailMauViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new MailMauViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maMailMau"] = this.maMailMau;
        data["tieuDe"] = this.tieuDe;
        data["noiDung"] = this.noiDung;
        data["idMailSetting"] = this.idMailSetting;
        data["maTinh"] = this.maTinh;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        return data; 
    }
}

export interface IMailMauViewModel {
    id?: string | undefined;
    maMailMau?: string | undefined;
    tieuDe?: string | undefined;
    noiDung?: string | undefined;
    idMailSetting?: number;
    maTinh?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
}

export class ApiResultOfPagedListOfMailMau implements IApiResultOfPagedListOfMailMau {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfMailMau | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfMailMau) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfMailMau.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfMailMau {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfMailMau();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfMailMau {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfMailMau | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfMailMau implements IPagedListOfMailMau {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: MailMau[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfMailMau) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(MailMau.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfMailMau {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfMailMau();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfMailMau {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: MailMau[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class MailMauRequest extends PagingRequest implements IMailMauRequest {

    constructor(data?: IMailMauRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): MailMauRequest {
        data = typeof data === 'object' ? data : {};
        let result = new MailMauRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IMailMauRequest extends IPagingRequest {
}

export class ApiResultOfMapDanhMucDvc implements IApiResultOfMapDanhMucDvc {
    isError?: boolean;
    message?: string | undefined;
    data?: MapDanhMucDvc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfMapDanhMucDvc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? MapDanhMucDvc.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfMapDanhMucDvc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfMapDanhMucDvc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfMapDanhMucDvc {
    isError?: boolean;
    message?: string | undefined;
    data?: MapDanhMucDvc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class MapDanhMucDvcViewModel implements IMapDanhMucDvcViewModel {
    id?: number;
    loaiDanhMuc?: string | undefined;
    mapGiaTri?: string | undefined;
    apiDvc?: string | undefined;
    thamChieuLpm?: string | undefined;
    moTa?: string | undefined;

    constructor(data?: IMapDanhMucDvcViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.loaiDanhMuc = _data["loaiDanhMuc"];
            this.mapGiaTri = _data["mapGiaTri"];
            this.apiDvc = _data["apiDvc"];
            this.thamChieuLpm = _data["thamChieuLpm"];
            this.moTa = _data["moTa"];
        }
    }

    static fromJS(data: any): MapDanhMucDvcViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new MapDanhMucDvcViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["loaiDanhMuc"] = this.loaiDanhMuc;
        data["mapGiaTri"] = this.mapGiaTri;
        data["apiDvc"] = this.apiDvc;
        data["thamChieuLpm"] = this.thamChieuLpm;
        data["moTa"] = this.moTa;
        return data; 
    }
}

export interface IMapDanhMucDvcViewModel {
    id?: number;
    loaiDanhMuc?: string | undefined;
    mapGiaTri?: string | undefined;
    apiDvc?: string | undefined;
    thamChieuLpm?: string | undefined;
    moTa?: string | undefined;
}

export class ApiResultOfIListOfNghiepVuPublicViewModel implements IApiResultOfIListOfNghiepVuPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: NghiepVuPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfNghiepVuPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(NghiepVuPublicViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfNghiepVuPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfNghiepVuPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfNghiepVuPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: NghiepVuPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class NghiepVuPublicViewModel implements INghiepVuPublicViewModel {
    id?: number;
    maNghiepVu?: string | undefined;
    tenNghiepVu?: string | undefined;

    constructor(data?: INghiepVuPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maNghiepVu = _data["maNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
        }
    }

    static fromJS(data: any): NghiepVuPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new NghiepVuPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maNghiepVu"] = this.maNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        return data; 
    }
}

export interface INghiepVuPublicViewModel {
    id?: number;
    maNghiepVu?: string | undefined;
    tenNghiepVu?: string | undefined;
}

export class ApiResultOfIListOfCurrentUserNotificationsDto implements IApiResultOfIListOfCurrentUserNotificationsDto {
    isError?: boolean;
    message?: string | undefined;
    data?: CurrentUserNotificationsDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfCurrentUserNotificationsDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(CurrentUserNotificationsDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfCurrentUserNotificationsDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfCurrentUserNotificationsDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfCurrentUserNotificationsDto {
    isError?: boolean;
    message?: string | undefined;
    data?: CurrentUserNotificationsDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CurrentUserNotificationsDto implements ICurrentUserNotificationsDto {
    id?: string | undefined;
    title?: string | undefined;
    message?: string | undefined;
    isRead?: number;
    isReminder?: number;
    ngayTao?: Date | undefined;
    notificationType?: NotificationType;

    constructor(data?: ICurrentUserNotificationsDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.title = _data["title"];
            this.message = _data["message"];
            this.isRead = _data["isRead"];
            this.isReminder = _data["isReminder"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.notificationType = _data["notificationType"];
        }
    }

    static fromJS(data: any): CurrentUserNotificationsDto {
        data = typeof data === 'object' ? data : {};
        let result = new CurrentUserNotificationsDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["title"] = this.title;
        data["message"] = this.message;
        data["isRead"] = this.isRead;
        data["isReminder"] = this.isReminder;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["notificationType"] = this.notificationType;
        return data; 
    }
}

export interface ICurrentUserNotificationsDto {
    id?: string | undefined;
    title?: string | undefined;
    message?: string | undefined;
    isRead?: number;
    isReminder?: number;
    ngayTao?: Date | undefined;
    notificationType?: NotificationType;
}

export enum NotificationType {
    ChuyenBuoc = 1,
}

export class ApiResultOfIListOfQthtUserViewModel implements IApiResultOfIListOfQthtUserViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: QthtUserViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfQthtUserViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(QthtUserViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfQthtUserViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfQthtUserViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfQthtUserViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: QthtUserViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class QthtUserViewModel implements IQthtUserViewModel {
    userId?: string | undefined;
    userName?: string | undefined;
    userCode?: string | undefined;
    userLevelName?: string | undefined;
    fullName?: string | undefined;
    phone?: string | undefined;
    email?: string | undefined;
    deptId?: string | undefined;
    deptLevel?: number;
    deptCode?: string | undefined;
    deptName?: string | undefined;
    customerId?: number;
    statusName?: string | undefined;
    dept?: PhongBanModel | undefined;

    constructor(data?: IQthtUserViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.userId = _data["userId"];
            this.userName = _data["userName"];
            this.userCode = _data["userCode"];
            this.userLevelName = _data["userLevelName"];
            this.fullName = _data["fullName"];
            this.phone = _data["phone"];
            this.email = _data["email"];
            this.deptId = _data["deptId"];
            this.deptLevel = _data["deptLevel"];
            this.deptCode = _data["deptCode"];
            this.deptName = _data["deptName"];
            this.customerId = _data["customerId"];
            this.statusName = _data["statusName"];
            this.dept = _data["dept"] ? PhongBanModel.fromJS(_data["dept"]) : <any>undefined;
        }
    }

    static fromJS(data: any): QthtUserViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new QthtUserViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["userName"] = this.userName;
        data["userCode"] = this.userCode;
        data["userLevelName"] = this.userLevelName;
        data["fullName"] = this.fullName;
        data["phone"] = this.phone;
        data["email"] = this.email;
        data["deptId"] = this.deptId;
        data["deptLevel"] = this.deptLevel;
        data["deptCode"] = this.deptCode;
        data["deptName"] = this.deptName;
        data["customerId"] = this.customerId;
        data["statusName"] = this.statusName;
        data["dept"] = this.dept ? this.dept.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IQthtUserViewModel {
    userId?: string | undefined;
    userName?: string | undefined;
    userCode?: string | undefined;
    userLevelName?: string | undefined;
    fullName?: string | undefined;
    phone?: string | undefined;
    email?: string | undefined;
    deptId?: string | undefined;
    deptLevel?: number;
    deptCode?: string | undefined;
    deptName?: string | undefined;
    customerId?: number;
    statusName?: string | undefined;
    dept?: PhongBanModel | undefined;
}

export class PhongBanModel implements IPhongBanModel {
    scopeId?: string | undefined;
    scopeName?: string | undefined;
    scopeCode?: string | undefined;
    scopeType?: number;
    scopeLevel?: number;
    parentScopeId?: string | undefined;
    customerId?: number;

    constructor(data?: IPhongBanModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.scopeId = _data["scopeId"];
            this.scopeName = _data["scopeName"];
            this.scopeCode = _data["scopeCode"];
            this.scopeType = _data["scopeType"];
            this.scopeLevel = _data["scopeLevel"];
            this.parentScopeId = _data["parentScopeId"];
            this.customerId = _data["customerId"];
        }
    }

    static fromJS(data: any): PhongBanModel {
        data = typeof data === 'object' ? data : {};
        let result = new PhongBanModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["scopeId"] = this.scopeId;
        data["scopeName"] = this.scopeName;
        data["scopeCode"] = this.scopeCode;
        data["scopeType"] = this.scopeType;
        data["scopeLevel"] = this.scopeLevel;
        data["parentScopeId"] = this.parentScopeId;
        data["customerId"] = this.customerId;
        return data; 
    }
}

export interface IPhongBanModel {
    scopeId?: string | undefined;
    scopeName?: string | undefined;
    scopeCode?: string | undefined;
    scopeType?: number;
    scopeLevel?: number;
    parentScopeId?: string | undefined;
    customerId?: number;
}

export class ApiResultOfCustomerConfigViewModel implements IApiResultOfCustomerConfigViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CustomerConfigViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfCustomerConfigViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? CustomerConfigViewModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfCustomerConfigViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfCustomerConfigViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfCustomerConfigViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: CustomerConfigViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CustomerConfigViewModel implements ICustomerConfigViewModel {
    customerConfigId?: number;
    maTinh?: string | undefined;
    appId?: number;
    giaTri?: string | undefined;

    constructor(data?: ICustomerConfigViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.customerConfigId = _data["customerConfigId"];
            this.maTinh = _data["maTinh"];
            this.appId = _data["appId"];
            this.giaTri = _data["giaTri"];
        }
    }

    static fromJS(data: any): CustomerConfigViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new CustomerConfigViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["customerConfigId"] = this.customerConfigId;
        data["maTinh"] = this.maTinh;
        data["appId"] = this.appId;
        data["giaTri"] = this.giaTri;
        return data; 
    }
}

export interface ICustomerConfigViewModel {
    customerConfigId?: number;
    maTinh?: string | undefined;
    appId?: number;
    giaTri?: string | undefined;
}

export class ApiResultOfListOfString implements IApiResultOfListOfString {
    isError?: boolean;
    message?: string | undefined;
    data?: string[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfListOfString) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(item);
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfListOfString {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfListOfString();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item);
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfListOfString {
    isError?: boolean;
    message?: string | undefined;
    data?: string[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfUserInfoQtht implements IApiResultOfUserInfoQtht {
    isError?: boolean;
    message?: string | undefined;
    data?: UserInfoQtht | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfUserInfoQtht) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? UserInfoQtht.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfUserInfoQtht {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfUserInfoQtht();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfUserInfoQtht {
    isError?: boolean;
    message?: string | undefined;
    data?: UserInfoQtht | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class UserInfoQtht implements IUserInfoQtht {
    userId?: string | undefined;
    userNameOrTechId?: string | undefined;
    userLevel?: UserLevelQtht;
    userTitle?: UserTitleQtht;
    status?: StatusQtht;
    maTinh?: string | undefined;
    dsMaTinh?: string[] | undefined;
    dvhcScopes?: AuthorizeSimpleDvhcScopeViewModel[] | undefined;

    constructor(data?: IUserInfoQtht) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.userId = _data["userId"];
            this.userNameOrTechId = _data["userNameOrTechId"];
            this.userLevel = _data["userLevel"];
            this.userTitle = _data["userTitle"];
            this.status = _data["status"];
            this.maTinh = _data["maTinh"];
            if (Array.isArray(_data["dsMaTinh"])) {
                this.dsMaTinh = [] as any;
                for (let item of _data["dsMaTinh"])
                    this.dsMaTinh!.push(item);
            }
            if (Array.isArray(_data["dvhcScopes"])) {
                this.dvhcScopes = [] as any;
                for (let item of _data["dvhcScopes"])
                    this.dvhcScopes!.push(AuthorizeSimpleDvhcScopeViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): UserInfoQtht {
        data = typeof data === 'object' ? data : {};
        let result = new UserInfoQtht();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["userNameOrTechId"] = this.userNameOrTechId;
        data["userLevel"] = this.userLevel;
        data["userTitle"] = this.userTitle;
        data["status"] = this.status;
        data["maTinh"] = this.maTinh;
        if (Array.isArray(this.dsMaTinh)) {
            data["dsMaTinh"] = [];
            for (let item of this.dsMaTinh)
                data["dsMaTinh"].push(item);
        }
        if (Array.isArray(this.dvhcScopes)) {
            data["dvhcScopes"] = [];
            for (let item of this.dvhcScopes)
                data["dvhcScopes"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IUserInfoQtht {
    userId?: string | undefined;
    userNameOrTechId?: string | undefined;
    userLevel?: UserLevelQtht;
    userTitle?: UserTitleQtht;
    status?: StatusQtht;
    maTinh?: string | undefined;
    dsMaTinh?: string[] | undefined;
    dvhcScopes?: AuthorizeSimpleDvhcScopeViewModel[] | undefined;
}

export enum UserLevelQtht {
    Normal = 0,
    SubAdmin = 100,
    Admin = 200,
    SubSystem = 800,
    System = 900,
}

export enum UserTitleQtht {
    ChuyenVien = 0,
    LanhDaoChiNhanh = 1,
    ChuyenVienVpdkTinh = 2,
    LanhDaoPhongDangKyCapGcn = 3,
    LanhDaoVpdk = 4,
    LanhDaoSo = 5,
    LanhDaoUBND = 6,
    LanhDaoTNMT = 7,
    Khac = 20,
}

export enum StatusQtht {
    Active = 0,
    Deactive = 1,
    Deleted = 2,
}

export class AuthorizeSimpleDvhcScopeViewModel implements IAuthorizeSimpleDvhcScopeViewModel {
    maTinh?: string | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    scopeId?: string | undefined;
    scopeName?: string | undefined;
    scopeCode?: string | undefined;
    parentScopeId?: string | undefined;
    scopeLevel?: number;

    constructor(data?: IAuthorizeSimpleDvhcScopeViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maTinh = _data["maTinh"];
            this.maHuyen = _data["maHuyen"];
            this.maXa = _data["maXa"];
            this.scopeId = _data["scopeId"];
            this.scopeName = _data["scopeName"];
            this.scopeCode = _data["scopeCode"];
            this.parentScopeId = _data["parentScopeId"];
            this.scopeLevel = _data["scopeLevel"];
        }
    }

    static fromJS(data: any): AuthorizeSimpleDvhcScopeViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new AuthorizeSimpleDvhcScopeViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maTinh"] = this.maTinh;
        data["maHuyen"] = this.maHuyen;
        data["maXa"] = this.maXa;
        data["scopeId"] = this.scopeId;
        data["scopeName"] = this.scopeName;
        data["scopeCode"] = this.scopeCode;
        data["parentScopeId"] = this.parentScopeId;
        data["scopeLevel"] = this.scopeLevel;
        return data; 
    }
}

export interface IAuthorizeSimpleDvhcScopeViewModel {
    maTinh?: string | undefined;
    maHuyen?: string | undefined;
    maXa?: string | undefined;
    scopeId?: string | undefined;
    scopeName?: string | undefined;
    scopeCode?: string | undefined;
    parentScopeId?: string | undefined;
    scopeLevel?: number;
}

export class ApiResultOfQthtLogBusinessModel implements IApiResultOfQthtLogBusinessModel {
    isError?: boolean;
    message?: string | undefined;
    data?: QthtLogBusinessModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfQthtLogBusinessModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? QthtLogBusinessModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfQthtLogBusinessModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfQthtLogBusinessModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfQthtLogBusinessModel {
    isError?: boolean;
    message?: string | undefined;
    data?: QthtLogBusinessModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class QthtLogBusinessModel implements IQthtLogBusinessModel {
    logger?: string | undefined;
    host?: string | undefined;
    level?: string | undefined;
    path?: string | undefined;
    moduleCode?: string | undefined;
    subModule?: string | undefined;
    newValue?: string | undefined;
    oldValue?: string | undefined;
    user?: string | undefined;
    actionName?: string | undefined;
    actionType?: string | undefined;
    entryDate?: Date;

    constructor(data?: IQthtLogBusinessModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.logger = _data["logger"];
            this.host = _data["host"];
            this.level = _data["level"];
            this.path = _data["path"];
            this.moduleCode = _data["moduleCode"];
            this.subModule = _data["subModule"];
            this.newValue = _data["newValue"];
            this.oldValue = _data["oldValue"];
            this.user = _data["user"];
            this.actionName = _data["actionName"];
            this.actionType = _data["actionType"];
            this.entryDate = _data["entryDate"] ? new Date(_data["entryDate"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): QthtLogBusinessModel {
        data = typeof data === 'object' ? data : {};
        let result = new QthtLogBusinessModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["logger"] = this.logger;
        data["host"] = this.host;
        data["level"] = this.level;
        data["path"] = this.path;
        data["moduleCode"] = this.moduleCode;
        data["subModule"] = this.subModule;
        data["newValue"] = this.newValue;
        data["oldValue"] = this.oldValue;
        data["user"] = this.user;
        data["actionName"] = this.actionName;
        data["actionType"] = this.actionType;
        data["entryDate"] = this.entryDate ? this.entryDate.toISOString() : <any>undefined;
        return data; 
    }
}

export interface IQthtLogBusinessModel {
    logger?: string | undefined;
    host?: string | undefined;
    level?: string | undefined;
    path?: string | undefined;
    moduleCode?: string | undefined;
    subModule?: string | undefined;
    newValue?: string | undefined;
    oldValue?: string | undefined;
    user?: string | undefined;
    actionName?: string | undefined;
    actionType?: string | undefined;
    entryDate?: Date;
}

export class QthtSearchLogBusinessRequest implements IQthtSearchLogBusinessRequest {
    path?: string | undefined;
    user?: string | undefined;
    actionName?: string | undefined;
    actionType?: string | undefined;
    moduleCode?: string | undefined;

    constructor(data?: IQthtSearchLogBusinessRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.path = _data["path"];
            this.user = _data["user"];
            this.actionName = _data["actionName"];
            this.actionType = _data["actionType"];
            this.moduleCode = _data["moduleCode"];
        }
    }

    static fromJS(data: any): QthtSearchLogBusinessRequest {
        data = typeof data === 'object' ? data : {};
        let result = new QthtSearchLogBusinessRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["path"] = this.path;
        data["user"] = this.user;
        data["actionName"] = this.actionName;
        data["actionType"] = this.actionType;
        data["moduleCode"] = this.moduleCode;
        return data; 
    }
}

export interface IQthtSearchLogBusinessRequest {
    path?: string | undefined;
    user?: string | undefined;
    actionName?: string | undefined;
    actionType?: string | undefined;
    moduleCode?: string | undefined;
}

export class ApiResultOfIListOfQTHTPhongBanViewModel implements IApiResultOfIListOfQTHTPhongBanViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: QTHTPhongBanViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfQTHTPhongBanViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(QTHTPhongBanViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfQTHTPhongBanViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfQTHTPhongBanViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfQTHTPhongBanViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: QTHTPhongBanViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class QTHTPhongBanViewModel implements IQTHTPhongBanViewModel {
    userId?: string | undefined;
    parentScopeId?: string | undefined;
    scopeLevel?: number;
    deparments?: PhongBanModel[] | undefined;

    constructor(data?: IQTHTPhongBanViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.userId = _data["userId"];
            this.parentScopeId = _data["parentScopeId"];
            this.scopeLevel = _data["scopeLevel"];
            if (Array.isArray(_data["deparments"])) {
                this.deparments = [] as any;
                for (let item of _data["deparments"])
                    this.deparments!.push(PhongBanModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): QTHTPhongBanViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new QTHTPhongBanViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["userId"] = this.userId;
        data["parentScopeId"] = this.parentScopeId;
        data["scopeLevel"] = this.scopeLevel;
        if (Array.isArray(this.deparments)) {
            data["deparments"] = [];
            for (let item of this.deparments)
                data["deparments"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IQTHTPhongBanViewModel {
    userId?: string | undefined;
    parentScopeId?: string | undefined;
    scopeLevel?: number;
    deparments?: PhongBanModel[] | undefined;
}

export class ApiResultOfQuyTrinh implements IApiResultOfQuyTrinh {
    isError?: boolean;
    message?: string | undefined;
    data?: QuyTrinh | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfQuyTrinh) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? QuyTrinh.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfQuyTrinh {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfQuyTrinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfQuyTrinh {
    isError?: boolean;
    message?: string | undefined;
    data?: QuyTrinh | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfQuyTrinh implements IApiResultOfIListOfQuyTrinh {
    isError?: boolean;
    message?: string | undefined;
    data?: QuyTrinh[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfQuyTrinh) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(QuyTrinh.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfQuyTrinh {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfQuyTrinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfQuyTrinh {
    isError?: boolean;
    message?: string | undefined;
    data?: QuyTrinh[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfShortUrlVM implements IApiResultOfShortUrlVM {
    isError?: boolean;
    message?: string | undefined;
    data?: ShortUrlVM | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfShortUrlVM) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? ShortUrlVM.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfShortUrlVM {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfShortUrlVM();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfShortUrlVM {
    isError?: boolean;
    message?: string | undefined;
    data?: ShortUrlVM | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ShortUrlVM implements IShortUrlVM {
    key?: string | undefined;
    shortUrl?: string | undefined;
    expires?: Date | undefined;

    constructor(data?: IShortUrlVM) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.key = _data["key"];
            this.shortUrl = _data["shortUrl"];
            this.expires = _data["expires"] ? new Date(_data["expires"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): ShortUrlVM {
        data = typeof data === 'object' ? data : {};
        let result = new ShortUrlVM();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["key"] = this.key;
        data["shortUrl"] = this.shortUrl;
        data["expires"] = this.expires ? this.expires.toISOString() : <any>undefined;
        return data; 
    }
}

export interface IShortUrlVM {
    key?: string | undefined;
    shortUrl?: string | undefined;
    expires?: Date | undefined;
}

export class CreateShortUrlCommand implements ICreateShortUrlCommand {
    url?: string | undefined;
    expires?: Date | undefined;
    metadata?: string | undefined;
    lengthKey?: number | undefined;

    constructor(data?: ICreateShortUrlCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.url = _data["url"];
            this.expires = _data["expires"] ? new Date(_data["expires"].toString()) : <any>undefined;
            this.metadata = _data["metadata"];
            this.lengthKey = _data["lengthKey"];
        }
    }

    static fromJS(data: any): CreateShortUrlCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CreateShortUrlCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["url"] = this.url;
        data["expires"] = this.expires ? this.expires.toISOString() : <any>undefined;
        data["metadata"] = this.metadata;
        data["lengthKey"] = this.lengthKey;
        return data; 
    }
}

export interface ICreateShortUrlCommand {
    url?: string | undefined;
    expires?: Date | undefined;
    metadata?: string | undefined;
    lengthKey?: number | undefined;
}

export class ApiResultOfThongKeCongViecDto implements IApiResultOfThongKeCongViecDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ThongKeCongViecDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfThongKeCongViecDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? ThongKeCongViecDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfThongKeCongViecDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfThongKeCongViecDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfThongKeCongViecDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ThongKeCongViecDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ThongKeCongViecDto implements IThongKeCongViecDto {
    soLuongCongViecChuaXuLy?: number;
    soLuongCongViecDangXuLy?: number;
    soLuongCongViecDaXuLy?: number;

    constructor(data?: IThongKeCongViecDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soLuongCongViecChuaXuLy = _data["soLuongCongViecChuaXuLy"];
            this.soLuongCongViecDangXuLy = _data["soLuongCongViecDangXuLy"];
            this.soLuongCongViecDaXuLy = _data["soLuongCongViecDaXuLy"];
        }
    }

    static fromJS(data: any): ThongKeCongViecDto {
        data = typeof data === 'object' ? data : {};
        let result = new ThongKeCongViecDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soLuongCongViecChuaXuLy"] = this.soLuongCongViecChuaXuLy;
        data["soLuongCongViecDangXuLy"] = this.soLuongCongViecDangXuLy;
        data["soLuongCongViecDaXuLy"] = this.soLuongCongViecDaXuLy;
        return data; 
    }
}

export interface IThongKeCongViecDto {
    soLuongCongViecChuaXuLy?: number;
    soLuongCongViecDangXuLy?: number;
    soLuongCongViecDaXuLy?: number;
}

export class ApiResultOfThongKeCongViecChoLanhDaoDto implements IApiResultOfThongKeCongViecChoLanhDaoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ThongKeCongViecChoLanhDaoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfThongKeCongViecChoLanhDaoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? ThongKeCongViecChoLanhDaoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfThongKeCongViecChoLanhDaoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfThongKeCongViecChoLanhDaoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfThongKeCongViecChoLanhDaoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ThongKeCongViecChoLanhDaoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ThongKeCongViecChoLanhDaoDto implements IThongKeCongViecChoLanhDaoDto {
    soLuongCongViecTrongHan?: number;
    soLuongCongViecSapHetHan?: number;
    soLuongCongViecQuaHan?: number;
    soLuongCongViecHoanThanh?: number;
    soLuongCongViecDangXuLyQuaHan?: number;

    constructor(data?: IThongKeCongViecChoLanhDaoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soLuongCongViecTrongHan = _data["soLuongCongViecTrongHan"];
            this.soLuongCongViecSapHetHan = _data["soLuongCongViecSapHetHan"];
            this.soLuongCongViecQuaHan = _data["soLuongCongViecQuaHan"];
            this.soLuongCongViecHoanThanh = _data["soLuongCongViecHoanThanh"];
            this.soLuongCongViecDangXuLyQuaHan = _data["soLuongCongViecDangXuLyQuaHan"];
        }
    }

    static fromJS(data: any): ThongKeCongViecChoLanhDaoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ThongKeCongViecChoLanhDaoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soLuongCongViecTrongHan"] = this.soLuongCongViecTrongHan;
        data["soLuongCongViecSapHetHan"] = this.soLuongCongViecSapHetHan;
        data["soLuongCongViecQuaHan"] = this.soLuongCongViecQuaHan;
        data["soLuongCongViecHoanThanh"] = this.soLuongCongViecHoanThanh;
        data["soLuongCongViecDangXuLyQuaHan"] = this.soLuongCongViecDangXuLyQuaHan;
        return data; 
    }
}

export interface IThongKeCongViecChoLanhDaoDto {
    soLuongCongViecTrongHan?: number;
    soLuongCongViecSapHetHan?: number;
    soLuongCongViecQuaHan?: number;
    soLuongCongViecHoanThanh?: number;
    soLuongCongViecDangXuLyQuaHan?: number;
}

export class ApiResultOfIListOfThuTuc implements IApiResultOfIListOfThuTuc {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTuc[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfThuTuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(ThuTuc.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfThuTuc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfThuTuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfThuTuc {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTuc[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfThuTucDvhcViewModel implements IApiResultOfIListOfThuTucDvhcViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTucDvhcViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfThuTucDvhcViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(ThuTucDvhcViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfThuTucDvhcViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfThuTucDvhcViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfThuTucDvhcViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTucDvhcViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfThuTucLoaiGiayToViewModel implements IApiResultOfIListOfThuTucLoaiGiayToViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTucLoaiGiayToViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfThuTucLoaiGiayToViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(ThuTucLoaiGiayToViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfThuTucLoaiGiayToViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfThuTucLoaiGiayToViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfThuTucLoaiGiayToViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTucLoaiGiayToViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto implements IApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetTienTrinhXuLyByIdBuocXuLyDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetTienTrinhXuLyByIdBuocXuLyDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetTienTrinhXuLyByIdBuocXuLyDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetTienTrinhXuLyByIdBuocXuLyDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetTienTrinhXuLyByIdBuocXuLyDto implements IGetTienTrinhXuLyByIdBuocXuLyDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idBuocXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: IGetTienTrinhXuLyByIdBuocXuLyDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.maTinh = _data["maTinh"];
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetTienTrinhXuLyByIdBuocXuLyDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetTienTrinhXuLyByIdBuocXuLyDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["maTinh"] = this.maTinh;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetTienTrinhXuLyByIdBuocXuLyDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    idBuocXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    maTinh?: string | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class ApiResultOfPagedListOfTienTrinhXuLySearchingDto implements IApiResultOfPagedListOfTienTrinhXuLySearchingDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfTienTrinhXuLySearchingDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfTienTrinhXuLySearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfTienTrinhXuLySearchingDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfTienTrinhXuLySearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfTienTrinhXuLySearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfTienTrinhXuLySearchingDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfTienTrinhXuLySearchingDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfTienTrinhXuLySearchingDto implements IPagedListOfTienTrinhXuLySearchingDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: TienTrinhXuLySearchingDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfTienTrinhXuLySearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(TienTrinhXuLySearchingDto.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfTienTrinhXuLySearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfTienTrinhXuLySearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfTienTrinhXuLySearchingDto {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: TienTrinhXuLySearchingDto[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class TienTrinhXuLySearchingDto implements ITienTrinhXuLySearchingDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    tenBuoc?: string | undefined;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;

    constructor(data?: ITienTrinhXuLySearchingDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.tenNghiepVu = _data["tenNghiepVu"];
            this.tenBuoc = _data["tenBuoc"];
            this.maTinh = _data["maTinh"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.nguoiTao = _data["nguoiTao"];
            this.nguoiCapNhat = _data["nguoiCapNhat"];
        }
    }

    static fromJS(data: any): TienTrinhXuLySearchingDto {
        data = typeof data === 'object' ? data : {};
        let result = new TienTrinhXuLySearchingDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["idNghiepVu"] = this.idNghiepVu;
        data["tenNghiepVu"] = this.tenNghiepVu;
        data["tenBuoc"] = this.tenBuoc;
        data["maTinh"] = this.maTinh;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["nguoiTao"] = this.nguoiTao;
        data["nguoiCapNhat"] = this.nguoiCapNhat;
        return data; 
    }
}

export interface ITienTrinhXuLySearchingDto {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idNghiepVu?: number;
    tenNghiepVu?: string | undefined;
    tenBuoc?: string | undefined;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    ngayCapNhat?: Date | undefined;
    nguoiTao?: string | undefined;
    nguoiCapNhat?: string | undefined;
}

export class SearchTienTrinhXuLyListQuery extends PagingRequest implements ISearchTienTrinhXuLyListQuery {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idNghiepVu?: number | undefined;
    noiDungXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    maTinh?: string | undefined;

    constructor(data?: ISearchTienTrinhXuLyListQuery) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.tenBuoc = _data["tenBuoc"];
            this.maTinh = _data["maTinh"];
        }
    }

    static fromJS(data: any): SearchTienTrinhXuLyListQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchTienTrinhXuLyListQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idNghiepVu"] = this.idNghiepVu;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["tenBuoc"] = this.tenBuoc;
        data["maTinh"] = this.maTinh;
        super.toJSON(data);
        return data; 
    }
}

export interface ISearchTienTrinhXuLyListQuery extends IPagingRequest {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idNghiepVu?: number | undefined;
    noiDungXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    maTinh?: string | undefined;
}

export class ApiResultOfPagedListOfSearchViewDangKyItemVm implements IApiResultOfPagedListOfSearchViewDangKyItemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchViewDangKyItemVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchViewDangKyItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchViewDangKyItemVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchViewDangKyItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchViewDangKyItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchViewDangKyItemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchViewDangKyItemVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchViewDangKyItemVm implements IPagedListOfSearchViewDangKyItemVm {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchViewDangKyItemVm[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchViewDangKyItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchViewDangKyItemVm.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchViewDangKyItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchViewDangKyItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchViewDangKyItemVm {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchViewDangKyItemVm[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchViewDangKyItemVm implements ISearchViewDangKyItemVm {
    idchusdthuadat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idbiendong?: string | undefined;
    sophathanh?: string | undefined;
    sovaoso?: string | undefined;
    hoten?: string | undefined;
    loaichu?: string | undefined;
    tentochuc?: string | undefined;
    sodinhdanh?: string | undefined;
    ngaycap?: Date | undefined;
    nguoiky?: string | undefined;
    ngayky?: Date | undefined;
    noicap?: string | undefined;
    diachi?: string | undefined;
    tenloainganchan?: string | undefined;
    dientich?: string | undefined;
    dientichrieng?: string | undefined;
    dientichchung?: string | undefined;
    sothututhua?: string | undefined;
    soto?: string | undefined;
    tenmdsdd?: string | undefined;
    tentrangthai?: string | undefined;
    idhoso?: string | undefined;
    ngaysinh?: string | undefined;
    iddvhc?: string | undefined;
    tendvhc?: string | undefined;
    dangkymdng?: DangkymdngVm[] | undefined;

    constructor(data?: ISearchViewDangKyItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idchusdthuadat = _data["idchusdthuadat"];
            this.idthuadat = _data["idthuadat"];
            this.idchusudung = _data["idchusudung"];
            this.idbiendong = _data["idbiendong"];
            this.sophathanh = _data["sophathanh"];
            this.sovaoso = _data["sovaoso"];
            this.hoten = _data["hoten"];
            this.loaichu = _data["loaichu"];
            this.tentochuc = _data["tentochuc"];
            this.sodinhdanh = _data["sodinhdanh"];
            this.ngaycap = _data["ngaycap"] ? new Date(_data["ngaycap"].toString()) : <any>undefined;
            this.nguoiky = _data["nguoiky"];
            this.ngayky = _data["ngayky"] ? new Date(_data["ngayky"].toString()) : <any>undefined;
            this.noicap = _data["noicap"];
            this.diachi = _data["diachi"];
            this.tenloainganchan = _data["tenloainganchan"];
            this.dientich = _data["dientich"];
            this.dientichrieng = _data["dientichrieng"];
            this.dientichchung = _data["dientichchung"];
            this.sothututhua = _data["sothututhua"];
            this.soto = _data["soto"];
            this.tenmdsdd = _data["tenmdsdd"];
            this.tentrangthai = _data["tentrangthai"];
            this.idhoso = _data["idhoso"];
            this.ngaysinh = _data["ngaysinh"];
            this.iddvhc = _data["iddvhc"];
            this.tendvhc = _data["tendvhc"];
            if (Array.isArray(_data["dangkymdng"])) {
                this.dangkymdng = [] as any;
                for (let item of _data["dangkymdng"])
                    this.dangkymdng!.push(DangkymdngVm.fromJS(item));
            }
        }
    }

    static fromJS(data: any): SearchViewDangKyItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new SearchViewDangKyItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idchusdthuadat"] = this.idchusdthuadat;
        data["idthuadat"] = this.idthuadat;
        data["idchusudung"] = this.idchusudung;
        data["idbiendong"] = this.idbiendong;
        data["sophathanh"] = this.sophathanh;
        data["sovaoso"] = this.sovaoso;
        data["hoten"] = this.hoten;
        data["loaichu"] = this.loaichu;
        data["tentochuc"] = this.tentochuc;
        data["sodinhdanh"] = this.sodinhdanh;
        data["ngaycap"] = this.ngaycap ? this.ngaycap.toISOString() : <any>undefined;
        data["nguoiky"] = this.nguoiky;
        data["ngayky"] = this.ngayky ? this.ngayky.toISOString() : <any>undefined;
        data["noicap"] = this.noicap;
        data["diachi"] = this.diachi;
        data["tenloainganchan"] = this.tenloainganchan;
        data["dientich"] = this.dientich;
        data["dientichrieng"] = this.dientichrieng;
        data["dientichchung"] = this.dientichchung;
        data["sothututhua"] = this.sothututhua;
        data["soto"] = this.soto;
        data["tenmdsdd"] = this.tenmdsdd;
        data["tentrangthai"] = this.tentrangthai;
        data["idhoso"] = this.idhoso;
        data["ngaysinh"] = this.ngaysinh;
        data["iddvhc"] = this.iddvhc;
        data["tendvhc"] = this.tendvhc;
        if (Array.isArray(this.dangkymdng)) {
            data["dangkymdng"] = [];
            for (let item of this.dangkymdng)
                data["dangkymdng"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ISearchViewDangKyItemVm {
    idchusdthuadat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    idbiendong?: string | undefined;
    sophathanh?: string | undefined;
    sovaoso?: string | undefined;
    hoten?: string | undefined;
    loaichu?: string | undefined;
    tentochuc?: string | undefined;
    sodinhdanh?: string | undefined;
    ngaycap?: Date | undefined;
    nguoiky?: string | undefined;
    ngayky?: Date | undefined;
    noicap?: string | undefined;
    diachi?: string | undefined;
    tenloainganchan?: string | undefined;
    dientich?: string | undefined;
    dientichrieng?: string | undefined;
    dientichchung?: string | undefined;
    sothututhua?: string | undefined;
    soto?: string | undefined;
    tenmdsdd?: string | undefined;
    tentrangthai?: string | undefined;
    idhoso?: string | undefined;
    ngaysinh?: string | undefined;
    iddvhc?: string | undefined;
    tendvhc?: string | undefined;
    dangkymdng?: DangkymdngVm[] | undefined;
}

export class DangkymdngVm implements IDangkymdngVm {
    iddangkymdsdd?: string | undefined;
    idchusdthuadat?: string | undefined;
    idmucdichsdd?: string | undefined;
    tenmdsdd?: string | undefined;
    tendaydu?: string | undefined;
    tennguongoc?: string | undefined;
    thoihan?: string | undefined;
    loaidat?: string | undefined;
    dientichrieng?: number;
    dientichchung?: number;
    dientich?: number;
    nguongoc?: string | undefined;

    constructor(data?: IDangkymdngVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.iddangkymdsdd = _data["iddangkymdsdd"];
            this.idchusdthuadat = _data["idchusdthuadat"];
            this.idmucdichsdd = _data["idmucdichsdd"];
            this.tenmdsdd = _data["tenmdsdd"];
            this.tendaydu = _data["tendaydu"];
            this.tennguongoc = _data["tennguongoc"];
            this.thoihan = _data["thoihan"];
            this.loaidat = _data["loaidat"];
            this.dientichrieng = _data["dientichrieng"];
            this.dientichchung = _data["dientichchung"];
            this.dientich = _data["dientich"];
            this.nguongoc = _data["nguongoc"];
        }
    }

    static fromJS(data: any): DangkymdngVm {
        data = typeof data === 'object' ? data : {};
        let result = new DangkymdngVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["iddangkymdsdd"] = this.iddangkymdsdd;
        data["idchusdthuadat"] = this.idchusdthuadat;
        data["idmucdichsdd"] = this.idmucdichsdd;
        data["tenmdsdd"] = this.tenmdsdd;
        data["tendaydu"] = this.tendaydu;
        data["tennguongoc"] = this.tennguongoc;
        data["thoihan"] = this.thoihan;
        data["loaidat"] = this.loaidat;
        data["dientichrieng"] = this.dientichrieng;
        data["dientichchung"] = this.dientichchung;
        data["dientich"] = this.dientich;
        data["nguongoc"] = this.nguongoc;
        return data; 
    }
}

export interface IDangkymdngVm {
    iddangkymdsdd?: string | undefined;
    idchusdthuadat?: string | undefined;
    idmucdichsdd?: string | undefined;
    tenmdsdd?: string | undefined;
    tendaydu?: string | undefined;
    tennguongoc?: string | undefined;
    thoihan?: string | undefined;
    loaidat?: string | undefined;
    dientichrieng?: number;
    dientichchung?: number;
    dientich?: number;
    nguongoc?: string | undefined;
}

export class SearchViewDangKyQuery implements ISearchViewDangKyQuery {
    tukhoa?: string | undefined;
    idDvhc?: string | undefined;
    idToBanDo?: string | undefined;
    idDoiTuongSD?: string | undefined;
    hinhThucSD?: string | undefined;
    idTrangThai?: string | undefined;
    soThuaTu?: string | undefined;
    dienTichTu?: string | undefined;
    dienTichDen?: string | undefined;
    soDinhDanh?: string | undefined;
    soGCN?: string | undefined;
    namCap?: string | undefined;
    idMucDichSuDung?: string | undefined;
    pageSize?: number;
    curentPage?: number;
    sortColumn?: string | undefined;
    searchExactly?: boolean;
    thuaDatIds?: string | undefined;
    sotocu?: string | undefined;
    sothuacu?: string | undefined;
    soThuTuThua?: string | undefined;

    constructor(data?: ISearchViewDangKyQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tukhoa = _data["tukhoa"];
            this.idDvhc = _data["idDvhc"];
            this.idToBanDo = _data["idToBanDo"];
            this.idDoiTuongSD = _data["idDoiTuongSD"];
            this.hinhThucSD = _data["hinhThucSD"];
            this.idTrangThai = _data["idTrangThai"];
            this.soThuaTu = _data["soThuaTu"];
            this.dienTichTu = _data["dienTichTu"];
            this.dienTichDen = _data["dienTichDen"];
            this.soDinhDanh = _data["soDinhDanh"];
            this.soGCN = _data["soGCN"];
            this.namCap = _data["namCap"];
            this.idMucDichSuDung = _data["idMucDichSuDung"];
            this.pageSize = _data["pageSize"];
            this.curentPage = _data["curentPage"];
            this.sortColumn = _data["sortColumn"];
            this.searchExactly = _data["searchExactly"];
            this.thuaDatIds = _data["thuaDatIds"];
            this.sotocu = _data["sotocu"];
            this.sothuacu = _data["sothuacu"];
            this.soThuTuThua = _data["soThuTuThua"];
        }
    }

    static fromJS(data: any): SearchViewDangKyQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchViewDangKyQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tukhoa"] = this.tukhoa;
        data["idDvhc"] = this.idDvhc;
        data["idToBanDo"] = this.idToBanDo;
        data["idDoiTuongSD"] = this.idDoiTuongSD;
        data["hinhThucSD"] = this.hinhThucSD;
        data["idTrangThai"] = this.idTrangThai;
        data["soThuaTu"] = this.soThuaTu;
        data["dienTichTu"] = this.dienTichTu;
        data["dienTichDen"] = this.dienTichDen;
        data["soDinhDanh"] = this.soDinhDanh;
        data["soGCN"] = this.soGCN;
        data["namCap"] = this.namCap;
        data["idMucDichSuDung"] = this.idMucDichSuDung;
        data["pageSize"] = this.pageSize;
        data["curentPage"] = this.curentPage;
        data["sortColumn"] = this.sortColumn;
        data["searchExactly"] = this.searchExactly;
        data["thuaDatIds"] = this.thuaDatIds;
        data["sotocu"] = this.sotocu;
        data["sothuacu"] = this.sothuacu;
        data["soThuTuThua"] = this.soThuTuThua;
        return data; 
    }
}

export interface ISearchViewDangKyQuery {
    tukhoa?: string | undefined;
    idDvhc?: string | undefined;
    idToBanDo?: string | undefined;
    idDoiTuongSD?: string | undefined;
    hinhThucSD?: string | undefined;
    idTrangThai?: string | undefined;
    soThuaTu?: string | undefined;
    dienTichTu?: string | undefined;
    dienTichDen?: string | undefined;
    soDinhDanh?: string | undefined;
    soGCN?: string | undefined;
    namCap?: string | undefined;
    idMucDichSuDung?: string | undefined;
    pageSize?: number;
    curentPage?: number;
    sortColumn?: string | undefined;
    searchExactly?: boolean;
    thuaDatIds?: string | undefined;
    sotocu?: string | undefined;
    sothuacu?: string | undefined;
    soThuTuThua?: string | undefined;
}

export class ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm implements IApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchViewDangKyNangCaoItemVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchViewDangKyNangCaoItemVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchViewDangKyNangCaoItemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchViewDangKyNangCaoItemVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchViewDangKyNangCaoItemVm implements IPagedListOfSearchViewDangKyNangCaoItemVm {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchViewDangKyNangCaoItemVm[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchViewDangKyNangCaoItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchViewDangKyNangCaoItemVm.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchViewDangKyNangCaoItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchViewDangKyNangCaoItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchViewDangKyNangCaoItemVm {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchViewDangKyNangCaoItemVm[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchViewDangKyNangCaoItemVm implements ISearchViewDangKyNangCaoItemVm {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    idDvhc?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    thoiGian?: Date | undefined;
    ngayDangKy?: Date | undefined;
    ngayBienDong?: number;
    sortTime?: number;
    capGiaiQuyet?: string | undefined;
    noiGiaiQuyet?: string | undefined;
    noiDungDdSdc?: string | undefined;
    noiDungBdSmk?: string | undefined;
    noiDungBdSbd?: string | undefined;
    noiDungBdScg?: string | undefined;
    lyDoBd?: string | undefined;
    soQuyetDinh?: string | undefined;
    ngayQuyetDinh?: Date | undefined;
    nguoiKy?: string | undefined;
    thoiHan?: number | undefined;
    maHoSo?: string | undefined;
    maTraCuu?: string | undefined;
    coChinhLyBanDo?: number | undefined;
    noiDungGhiGCN?: string | undefined;
    tenDangNhap?: string | undefined;
    ngayKyTrang4?: Date | undefined;
    nguoiKyTrang4?: string | undefined;
    status?: number | undefined;
    sysDtime?: Date | undefined;
    paraTinh?: string | undefined;
    idHoSo?: string | undefined;
    benNhan?: string | undefined;
    dangKyTruocBienDong?: HSDKQSDDDto[] | undefined;
    dangKySauBienDong?: HSDKQSDDDto[] | undefined;
    thuaDatTruocBienDong?: ViewThuadatDto[] | undefined;
    thuaDatSauBienDong?: ViewThuadatDto[] | undefined;
    soToSbd?: string | undefined;
    soThuaSbd?: string | undefined;

    constructor(data?: ISearchViewDangKyNangCaoItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.tenLoaiBienDong = _data["tenLoaiBienDong"];
            this.idDvhc = _data["idDvhc"];
            this.idHuyen = _data["idHuyen"];
            this.idTinh = _data["idTinh"];
            this.thoiGian = _data["thoiGian"] ? new Date(_data["thoiGian"].toString()) : <any>undefined;
            this.ngayDangKy = _data["ngayDangKy"] ? new Date(_data["ngayDangKy"].toString()) : <any>undefined;
            this.ngayBienDong = _data["ngayBienDong"];
            this.sortTime = _data["sortTime"];
            this.capGiaiQuyet = _data["capGiaiQuyet"];
            this.noiGiaiQuyet = _data["noiGiaiQuyet"];
            this.noiDungDdSdc = _data["noiDungDdSdc"];
            this.noiDungBdSmk = _data["noiDungBdSmk"];
            this.noiDungBdSbd = _data["noiDungBdSbd"];
            this.noiDungBdScg = _data["noiDungBdScg"];
            this.lyDoBd = _data["lyDoBd"];
            this.soQuyetDinh = _data["soQuyetDinh"];
            this.ngayQuyetDinh = _data["ngayQuyetDinh"] ? new Date(_data["ngayQuyetDinh"].toString()) : <any>undefined;
            this.nguoiKy = _data["nguoiKy"];
            this.thoiHan = _data["thoiHan"];
            this.maHoSo = _data["maHoSo"];
            this.maTraCuu = _data["maTraCuu"];
            this.coChinhLyBanDo = _data["coChinhLyBanDo"];
            this.noiDungGhiGCN = _data["noiDungGhiGCN"];
            this.tenDangNhap = _data["tenDangNhap"];
            this.ngayKyTrang4 = _data["ngayKyTrang4"] ? new Date(_data["ngayKyTrang4"].toString()) : <any>undefined;
            this.nguoiKyTrang4 = _data["nguoiKyTrang4"];
            this.status = _data["status"];
            this.sysDtime = _data["sysDtime"] ? new Date(_data["sysDtime"].toString()) : <any>undefined;
            this.paraTinh = _data["paraTinh"];
            this.idHoSo = _data["idHoSo"];
            this.benNhan = _data["benNhan"];
            if (Array.isArray(_data["dangKyTruocBienDong"])) {
                this.dangKyTruocBienDong = [] as any;
                for (let item of _data["dangKyTruocBienDong"])
                    this.dangKyTruocBienDong!.push(HSDKQSDDDto.fromJS(item));
            }
            if (Array.isArray(_data["dangKySauBienDong"])) {
                this.dangKySauBienDong = [] as any;
                for (let item of _data["dangKySauBienDong"])
                    this.dangKySauBienDong!.push(HSDKQSDDDto.fromJS(item));
            }
            if (Array.isArray(_data["thuaDatTruocBienDong"])) {
                this.thuaDatTruocBienDong = [] as any;
                for (let item of _data["thuaDatTruocBienDong"])
                    this.thuaDatTruocBienDong!.push(ViewThuadatDto.fromJS(item));
            }
            if (Array.isArray(_data["thuaDatSauBienDong"])) {
                this.thuaDatSauBienDong = [] as any;
                for (let item of _data["thuaDatSauBienDong"])
                    this.thuaDatSauBienDong!.push(ViewThuadatDto.fromJS(item));
            }
            this.soToSbd = _data["soToSbd"];
            this.soThuaSbd = _data["soThuaSbd"];
        }
    }

    static fromJS(data: any): SearchViewDangKyNangCaoItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new SearchViewDangKyNangCaoItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["tenLoaiBienDong"] = this.tenLoaiBienDong;
        data["idDvhc"] = this.idDvhc;
        data["idHuyen"] = this.idHuyen;
        data["idTinh"] = this.idTinh;
        data["thoiGian"] = this.thoiGian ? this.thoiGian.toISOString() : <any>undefined;
        data["ngayDangKy"] = this.ngayDangKy ? this.ngayDangKy.toISOString() : <any>undefined;
        data["ngayBienDong"] = this.ngayBienDong;
        data["sortTime"] = this.sortTime;
        data["capGiaiQuyet"] = this.capGiaiQuyet;
        data["noiGiaiQuyet"] = this.noiGiaiQuyet;
        data["noiDungDdSdc"] = this.noiDungDdSdc;
        data["noiDungBdSmk"] = this.noiDungBdSmk;
        data["noiDungBdSbd"] = this.noiDungBdSbd;
        data["noiDungBdScg"] = this.noiDungBdScg;
        data["lyDoBd"] = this.lyDoBd;
        data["soQuyetDinh"] = this.soQuyetDinh;
        data["ngayQuyetDinh"] = this.ngayQuyetDinh ? this.ngayQuyetDinh.toISOString() : <any>undefined;
        data["nguoiKy"] = this.nguoiKy;
        data["thoiHan"] = this.thoiHan;
        data["maHoSo"] = this.maHoSo;
        data["maTraCuu"] = this.maTraCuu;
        data["coChinhLyBanDo"] = this.coChinhLyBanDo;
        data["noiDungGhiGCN"] = this.noiDungGhiGCN;
        data["tenDangNhap"] = this.tenDangNhap;
        data["ngayKyTrang4"] = this.ngayKyTrang4 ? this.ngayKyTrang4.toISOString() : <any>undefined;
        data["nguoiKyTrang4"] = this.nguoiKyTrang4;
        data["status"] = this.status;
        data["sysDtime"] = this.sysDtime ? this.sysDtime.toISOString() : <any>undefined;
        data["paraTinh"] = this.paraTinh;
        data["idHoSo"] = this.idHoSo;
        data["benNhan"] = this.benNhan;
        if (Array.isArray(this.dangKyTruocBienDong)) {
            data["dangKyTruocBienDong"] = [];
            for (let item of this.dangKyTruocBienDong)
                data["dangKyTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.dangKySauBienDong)) {
            data["dangKySauBienDong"] = [];
            for (let item of this.dangKySauBienDong)
                data["dangKySauBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.thuaDatTruocBienDong)) {
            data["thuaDatTruocBienDong"] = [];
            for (let item of this.thuaDatTruocBienDong)
                data["thuaDatTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.thuaDatSauBienDong)) {
            data["thuaDatSauBienDong"] = [];
            for (let item of this.thuaDatSauBienDong)
                data["thuaDatSauBienDong"].push(item.toJSON());
        }
        data["soToSbd"] = this.soToSbd;
        data["soThuaSbd"] = this.soThuaSbd;
        return data; 
    }
}

export interface ISearchViewDangKyNangCaoItemVm {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    idDvhc?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    thoiGian?: Date | undefined;
    ngayDangKy?: Date | undefined;
    ngayBienDong?: number;
    sortTime?: number;
    capGiaiQuyet?: string | undefined;
    noiGiaiQuyet?: string | undefined;
    noiDungDdSdc?: string | undefined;
    noiDungBdSmk?: string | undefined;
    noiDungBdSbd?: string | undefined;
    noiDungBdScg?: string | undefined;
    lyDoBd?: string | undefined;
    soQuyetDinh?: string | undefined;
    ngayQuyetDinh?: Date | undefined;
    nguoiKy?: string | undefined;
    thoiHan?: number | undefined;
    maHoSo?: string | undefined;
    maTraCuu?: string | undefined;
    coChinhLyBanDo?: number | undefined;
    noiDungGhiGCN?: string | undefined;
    tenDangNhap?: string | undefined;
    ngayKyTrang4?: Date | undefined;
    nguoiKyTrang4?: string | undefined;
    status?: number | undefined;
    sysDtime?: Date | undefined;
    paraTinh?: string | undefined;
    idHoSo?: string | undefined;
    benNhan?: string | undefined;
    dangKyTruocBienDong?: HSDKQSDDDto[] | undefined;
    dangKySauBienDong?: HSDKQSDDDto[] | undefined;
    thuaDatTruocBienDong?: ViewThuadatDto[] | undefined;
    thuaDatSauBienDong?: ViewThuadatDto[] | undefined;
    soToSbd?: string | undefined;
    soThuaSbd?: string | undefined;
}

export class HSDKQSDDDto implements IHSDKQSDDDto {
    chuSuDung?: ViewChuSuDungDto | undefined;
    dsNguoiLienQuan?: ViewnguoilienquanDto[] | undefined;
    dsdkThuaDat?: DKThuaDat[] | undefined;
    dsChuDongSuDung?: ViewChuSuDungDto[] | undefined;

    constructor(data?: IHSDKQSDDDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.chuSuDung = _data["chuSuDung"] ? ViewChuSuDungDto.fromJS(_data["chuSuDung"]) : <any>undefined;
            if (Array.isArray(_data["dsNguoiLienQuan"])) {
                this.dsNguoiLienQuan = [] as any;
                for (let item of _data["dsNguoiLienQuan"])
                    this.dsNguoiLienQuan!.push(ViewnguoilienquanDto.fromJS(item));
            }
            if (Array.isArray(_data["dsdkThuaDat"])) {
                this.dsdkThuaDat = [] as any;
                for (let item of _data["dsdkThuaDat"])
                    this.dsdkThuaDat!.push(DKThuaDat.fromJS(item));
            }
            if (Array.isArray(_data["dsChuDongSuDung"])) {
                this.dsChuDongSuDung = [] as any;
                for (let item of _data["dsChuDongSuDung"])
                    this.dsChuDongSuDung!.push(ViewChuSuDungDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): HSDKQSDDDto {
        data = typeof data === 'object' ? data : {};
        let result = new HSDKQSDDDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["chuSuDung"] = this.chuSuDung ? this.chuSuDung.toJSON() : <any>undefined;
        if (Array.isArray(this.dsNguoiLienQuan)) {
            data["dsNguoiLienQuan"] = [];
            for (let item of this.dsNguoiLienQuan)
                data["dsNguoiLienQuan"].push(item.toJSON());
        }
        if (Array.isArray(this.dsdkThuaDat)) {
            data["dsdkThuaDat"] = [];
            for (let item of this.dsdkThuaDat)
                data["dsdkThuaDat"].push(item.toJSON());
        }
        if (Array.isArray(this.dsChuDongSuDung)) {
            data["dsChuDongSuDung"] = [];
            for (let item of this.dsChuDongSuDung)
                data["dsChuDongSuDung"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IHSDKQSDDDto {
    chuSuDung?: ViewChuSuDungDto | undefined;
    dsNguoiLienQuan?: ViewnguoilienquanDto[] | undefined;
    dsdkThuaDat?: DKThuaDat[] | undefined;
    dsChuDongSuDung?: ViewChuSuDungDto[] | undefined;
}

export class ViewChuSuDungDto implements IViewChuSuDungDto {
    idchusudung?: string | undefined;
    hoten?: string | undefined;
    ngaycap?: Date | undefined;
    noicap?: string | undefined;
    loaigiayto?: string | undefined;
    idquocgia?: string | undefined;
    quoctich1ta?: string | undefined;
    quoctich1tv?: string | undefined;
    diachi?: string | undefined;
    duongpho?: string | undefined;
    idthonxom?: string | undefined;
    tenthonxom?: string | undefined;
    iddvhc?: string | undefined;
    tendvhc?: string | undefined;
    gioitinh?: number | undefined;
    sodinhdanh?: string | undefined;
    iddantoc?: string | undefined;
    tendantoc?: string | undefined;
    iddoituongsd?: string | undefined;
    madoituong?: string | undefined;
    tendoituong?: string | undefined;
    ngaysinh?: string | undefined;
    parmatinh?: string | undefined;
    masothue?: string | undefined;
    sodienthoai?: string | undefined;
    loaichu?: string | undefined;
    idquoctich2?: string | undefined;
    quoctich2ta?: string | undefined;
    quoctich2tv?: string | undefined;
    tentochuc?: string | undefined;
    tenviettat?: string | undefined;
    tentochucta?: string | undefined;
    soquyetdinh?: string | undefined;
    ngayquyetdinh?: Date | undefined;
    loaiquyetdinhthanhlap?: string | undefined;
    madoanhnghiep?: string | undefined;
    masothuetc?: string | undefined;
    diachitc?: string | undefined;
    idhuyen?: string | undefined;
    tenhuyen?: string | undefined;
    idtinh?: string | undefined;
    tentinh?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    email?: string | undefined;
    quanhe?: string | undefined;
    idnguoilienquan?: string | undefined;
    lstNguoiLienQuanKkhac?: ViewChuSuDungDto[] | undefined;

    constructor(data?: IViewChuSuDungDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idchusudung = _data["idchusudung"];
            this.hoten = _data["hoten"];
            this.ngaycap = _data["ngaycap"] ? new Date(_data["ngaycap"].toString()) : <any>undefined;
            this.noicap = _data["noicap"];
            this.loaigiayto = _data["loaigiayto"];
            this.idquocgia = _data["idquocgia"];
            this.quoctich1ta = _data["quoctich1ta"];
            this.quoctich1tv = _data["quoctich1tv"];
            this.diachi = _data["diachi"];
            this.duongpho = _data["duongpho"];
            this.idthonxom = _data["idthonxom"];
            this.tenthonxom = _data["tenthonxom"];
            this.iddvhc = _data["iddvhc"];
            this.tendvhc = _data["tendvhc"];
            this.gioitinh = _data["gioitinh"];
            this.sodinhdanh = _data["sodinhdanh"];
            this.iddantoc = _data["iddantoc"];
            this.tendantoc = _data["tendantoc"];
            this.iddoituongsd = _data["iddoituongsd"];
            this.madoituong = _data["madoituong"];
            this.tendoituong = _data["tendoituong"];
            this.ngaysinh = _data["ngaysinh"];
            this.parmatinh = _data["parmatinh"];
            this.masothue = _data["masothue"];
            this.sodienthoai = _data["sodienthoai"];
            this.loaichu = _data["loaichu"];
            this.idquoctich2 = _data["idquoctich2"];
            this.quoctich2ta = _data["quoctich2ta"];
            this.quoctich2tv = _data["quoctich2tv"];
            this.tentochuc = _data["tentochuc"];
            this.tenviettat = _data["tenviettat"];
            this.tentochucta = _data["tentochucta"];
            this.soquyetdinh = _data["soquyetdinh"];
            this.ngayquyetdinh = _data["ngayquyetdinh"] ? new Date(_data["ngayquyetdinh"].toString()) : <any>undefined;
            this.loaiquyetdinhthanhlap = _data["loaiquyetdinhthanhlap"];
            this.madoanhnghiep = _data["madoanhnghiep"];
            this.masothuetc = _data["masothuetc"];
            this.diachitc = _data["diachitc"];
            this.idhuyen = _data["idhuyen"];
            this.tenhuyen = _data["tenhuyen"];
            this.idtinh = _data["idtinh"];
            this.tentinh = _data["tentinh"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
            this.email = _data["email"];
            this.quanhe = _data["quanhe"];
            this.idnguoilienquan = _data["idnguoilienquan"];
            if (Array.isArray(_data["lstNguoiLienQuanKkhac"])) {
                this.lstNguoiLienQuanKkhac = [] as any;
                for (let item of _data["lstNguoiLienQuanKkhac"])
                    this.lstNguoiLienQuanKkhac!.push(ViewChuSuDungDto.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ViewChuSuDungDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewChuSuDungDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idchusudung"] = this.idchusudung;
        data["hoten"] = this.hoten;
        data["ngaycap"] = this.ngaycap ? this.ngaycap.toISOString() : <any>undefined;
        data["noicap"] = this.noicap;
        data["loaigiayto"] = this.loaigiayto;
        data["idquocgia"] = this.idquocgia;
        data["quoctich1ta"] = this.quoctich1ta;
        data["quoctich1tv"] = this.quoctich1tv;
        data["diachi"] = this.diachi;
        data["duongpho"] = this.duongpho;
        data["idthonxom"] = this.idthonxom;
        data["tenthonxom"] = this.tenthonxom;
        data["iddvhc"] = this.iddvhc;
        data["tendvhc"] = this.tendvhc;
        data["gioitinh"] = this.gioitinh;
        data["sodinhdanh"] = this.sodinhdanh;
        data["iddantoc"] = this.iddantoc;
        data["tendantoc"] = this.tendantoc;
        data["iddoituongsd"] = this.iddoituongsd;
        data["madoituong"] = this.madoituong;
        data["tendoituong"] = this.tendoituong;
        data["ngaysinh"] = this.ngaysinh;
        data["parmatinh"] = this.parmatinh;
        data["masothue"] = this.masothue;
        data["sodienthoai"] = this.sodienthoai;
        data["loaichu"] = this.loaichu;
        data["idquoctich2"] = this.idquoctich2;
        data["quoctich2ta"] = this.quoctich2ta;
        data["quoctich2tv"] = this.quoctich2tv;
        data["tentochuc"] = this.tentochuc;
        data["tenviettat"] = this.tenviettat;
        data["tentochucta"] = this.tentochucta;
        data["soquyetdinh"] = this.soquyetdinh;
        data["ngayquyetdinh"] = this.ngayquyetdinh ? this.ngayquyetdinh.toISOString() : <any>undefined;
        data["loaiquyetdinhthanhlap"] = this.loaiquyetdinhthanhlap;
        data["madoanhnghiep"] = this.madoanhnghiep;
        data["masothuetc"] = this.masothuetc;
        data["diachitc"] = this.diachitc;
        data["idhuyen"] = this.idhuyen;
        data["tenhuyen"] = this.tenhuyen;
        data["idtinh"] = this.idtinh;
        data["tentinh"] = this.tentinh;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        data["email"] = this.email;
        data["quanhe"] = this.quanhe;
        data["idnguoilienquan"] = this.idnguoilienquan;
        if (Array.isArray(this.lstNguoiLienQuanKkhac)) {
            data["lstNguoiLienQuanKkhac"] = [];
            for (let item of this.lstNguoiLienQuanKkhac)
                data["lstNguoiLienQuanKkhac"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IViewChuSuDungDto {
    idchusudung?: string | undefined;
    hoten?: string | undefined;
    ngaycap?: Date | undefined;
    noicap?: string | undefined;
    loaigiayto?: string | undefined;
    idquocgia?: string | undefined;
    quoctich1ta?: string | undefined;
    quoctich1tv?: string | undefined;
    diachi?: string | undefined;
    duongpho?: string | undefined;
    idthonxom?: string | undefined;
    tenthonxom?: string | undefined;
    iddvhc?: string | undefined;
    tendvhc?: string | undefined;
    gioitinh?: number | undefined;
    sodinhdanh?: string | undefined;
    iddantoc?: string | undefined;
    tendantoc?: string | undefined;
    iddoituongsd?: string | undefined;
    madoituong?: string | undefined;
    tendoituong?: string | undefined;
    ngaysinh?: string | undefined;
    parmatinh?: string | undefined;
    masothue?: string | undefined;
    sodienthoai?: string | undefined;
    loaichu?: string | undefined;
    idquoctich2?: string | undefined;
    quoctich2ta?: string | undefined;
    quoctich2tv?: string | undefined;
    tentochuc?: string | undefined;
    tenviettat?: string | undefined;
    tentochucta?: string | undefined;
    soquyetdinh?: string | undefined;
    ngayquyetdinh?: Date | undefined;
    loaiquyetdinhthanhlap?: string | undefined;
    madoanhnghiep?: string | undefined;
    masothuetc?: string | undefined;
    diachitc?: string | undefined;
    idhuyen?: string | undefined;
    tenhuyen?: string | undefined;
    idtinh?: string | undefined;
    tentinh?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    email?: string | undefined;
    quanhe?: string | undefined;
    idnguoilienquan?: string | undefined;
    lstNguoiLienQuanKkhac?: ViewChuSuDungDto[] | undefined;
}

export class ViewnguoilienquanDto implements IViewnguoilienquanDto {
    idnguoilienquan?: string | undefined;
    idchusdthuadat?: string | undefined;
    quanhe?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    idchudaidien?: string | undefined;
    hoten?: string | undefined;
    ngaycap?: Date | undefined;
    noicap?: string | undefined;
    loaigiayto?: string | undefined;
    idquocgia?: string | undefined;
    quoctich1ta?: string | undefined;
    quoctich1tv?: string | undefined;
    diachi?: string | undefined;
    idthonxom?: string | undefined;
    tenthonxom?: string | undefined;
    iddvhc?: string | undefined;
    tendvhc?: string | undefined;
    idhuyen?: string | undefined;
    tenhuyen?: string | undefined;
    idtinh?: string | undefined;
    tentinh?: string | undefined;
    gioitinh?: number | undefined;
    ghichu?: string | undefined;
    sodinhdanh?: string | undefined;
    iddantoc?: string | undefined;
    tendantoc?: string | undefined;
    iddoituongsd?: string | undefined;
    madoituong?: string | undefined;
    tendoituong?: string | undefined;
    sysDate?: Date | undefined;
    ngaysinh?: string | undefined;
    parmatinh?: string | undefined;
    masothue?: string | undefined;
    loaichu?: string | undefined;
    idquoctich2?: string | undefined;
    quoctich2ta?: string | undefined;
    quoctich2tv?: string | undefined;
    ten?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    tinhtrang?: string | undefined;

    constructor(data?: IViewnguoilienquanDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idnguoilienquan = _data["idnguoilienquan"];
            this.idchusdthuadat = _data["idchusdthuadat"];
            this.quanhe = _data["quanhe"];
            this.idchusudung = _data["idchusudung"];
            this.idhoso = _data["idhoso"];
            this.idchudaidien = _data["idchudaidien"];
            this.hoten = _data["hoten"];
            this.ngaycap = _data["ngaycap"] ? new Date(_data["ngaycap"].toString()) : <any>undefined;
            this.noicap = _data["noicap"];
            this.loaigiayto = _data["loaigiayto"];
            this.idquocgia = _data["idquocgia"];
            this.quoctich1ta = _data["quoctich1ta"];
            this.quoctich1tv = _data["quoctich1tv"];
            this.diachi = _data["diachi"];
            this.idthonxom = _data["idthonxom"];
            this.tenthonxom = _data["tenthonxom"];
            this.iddvhc = _data["iddvhc"];
            this.tendvhc = _data["tendvhc"];
            this.idhuyen = _data["idhuyen"];
            this.tenhuyen = _data["tenhuyen"];
            this.idtinh = _data["idtinh"];
            this.tentinh = _data["tentinh"];
            this.gioitinh = _data["gioitinh"];
            this.ghichu = _data["ghichu"];
            this.sodinhdanh = _data["sodinhdanh"];
            this.iddantoc = _data["iddantoc"];
            this.tendantoc = _data["tendantoc"];
            this.iddoituongsd = _data["iddoituongsd"];
            this.madoituong = _data["madoituong"];
            this.tendoituong = _data["tendoituong"];
            this.sysDate = _data["sysDate"] ? new Date(_data["sysDate"].toString()) : <any>undefined;
            this.ngaysinh = _data["ngaysinh"];
            this.parmatinh = _data["parmatinh"];
            this.masothue = _data["masothue"];
            this.loaichu = _data["loaichu"];
            this.idquoctich2 = _data["idquoctich2"];
            this.quoctich2ta = _data["quoctich2ta"];
            this.quoctich2tv = _data["quoctich2tv"];
            this.ten = _data["ten"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
            this.tinhtrang = _data["tinhtrang"];
        }
    }

    static fromJS(data: any): ViewnguoilienquanDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewnguoilienquanDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idnguoilienquan"] = this.idnguoilienquan;
        data["idchusdthuadat"] = this.idchusdthuadat;
        data["quanhe"] = this.quanhe;
        data["idchusudung"] = this.idchusudung;
        data["idhoso"] = this.idhoso;
        data["idchudaidien"] = this.idchudaidien;
        data["hoten"] = this.hoten;
        data["ngaycap"] = this.ngaycap ? this.ngaycap.toISOString() : <any>undefined;
        data["noicap"] = this.noicap;
        data["loaigiayto"] = this.loaigiayto;
        data["idquocgia"] = this.idquocgia;
        data["quoctich1ta"] = this.quoctich1ta;
        data["quoctich1tv"] = this.quoctich1tv;
        data["diachi"] = this.diachi;
        data["idthonxom"] = this.idthonxom;
        data["tenthonxom"] = this.tenthonxom;
        data["iddvhc"] = this.iddvhc;
        data["tendvhc"] = this.tendvhc;
        data["idhuyen"] = this.idhuyen;
        data["tenhuyen"] = this.tenhuyen;
        data["idtinh"] = this.idtinh;
        data["tentinh"] = this.tentinh;
        data["gioitinh"] = this.gioitinh;
        data["ghichu"] = this.ghichu;
        data["sodinhdanh"] = this.sodinhdanh;
        data["iddantoc"] = this.iddantoc;
        data["tendantoc"] = this.tendantoc;
        data["iddoituongsd"] = this.iddoituongsd;
        data["madoituong"] = this.madoituong;
        data["tendoituong"] = this.tendoituong;
        data["sysDate"] = this.sysDate ? this.sysDate.toISOString() : <any>undefined;
        data["ngaysinh"] = this.ngaysinh;
        data["parmatinh"] = this.parmatinh;
        data["masothue"] = this.masothue;
        data["loaichu"] = this.loaichu;
        data["idquoctich2"] = this.idquoctich2;
        data["quoctich2ta"] = this.quoctich2ta;
        data["quoctich2tv"] = this.quoctich2tv;
        data["ten"] = this.ten;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        data["tinhtrang"] = this.tinhtrang;
        return data; 
    }
}

export interface IViewnguoilienquanDto {
    idnguoilienquan?: string | undefined;
    idchusdthuadat?: string | undefined;
    quanhe?: string | undefined;
    idchusudung?: string | undefined;
    idhoso?: string | undefined;
    idchudaidien?: string | undefined;
    hoten?: string | undefined;
    ngaycap?: Date | undefined;
    noicap?: string | undefined;
    loaigiayto?: string | undefined;
    idquocgia?: string | undefined;
    quoctich1ta?: string | undefined;
    quoctich1tv?: string | undefined;
    diachi?: string | undefined;
    idthonxom?: string | undefined;
    tenthonxom?: string | undefined;
    iddvhc?: string | undefined;
    tendvhc?: string | undefined;
    idhuyen?: string | undefined;
    tenhuyen?: string | undefined;
    idtinh?: string | undefined;
    tentinh?: string | undefined;
    gioitinh?: number | undefined;
    ghichu?: string | undefined;
    sodinhdanh?: string | undefined;
    iddantoc?: string | undefined;
    tendantoc?: string | undefined;
    iddoituongsd?: string | undefined;
    madoituong?: string | undefined;
    tendoituong?: string | undefined;
    sysDate?: Date | undefined;
    ngaysinh?: string | undefined;
    parmatinh?: string | undefined;
    masothue?: string | undefined;
    loaichu?: string | undefined;
    idquoctich2?: string | undefined;
    quoctich2ta?: string | undefined;
    quoctich2tv?: string | undefined;
    ten?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    tinhtrang?: string | undefined;
}

export class DKThuaDat implements IDKThuaDat {
    chuSDThuaDat?: ViewChuSDThuaDat | undefined;
    thuaDat?: ViewThuadatDto | undefined;
    dsDangKyMDNG?: ViewdangkymdngDto[] | undefined;
    dsHanCheQuyenSDD?: ViewHanchequyensddDto[] | undefined;
    dsThuaDatCu?: ViewthuadatcuDto[] | undefined;
    dsdkTaiSan?: DKTaiSan[] | undefined;

    constructor(data?: IDKThuaDat) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.chuSDThuaDat = _data["chuSDThuaDat"] ? ViewChuSDThuaDat.fromJS(_data["chuSDThuaDat"]) : <any>undefined;
            this.thuaDat = _data["thuaDat"] ? ViewThuadatDto.fromJS(_data["thuaDat"]) : <any>undefined;
            if (Array.isArray(_data["dsDangKyMDNG"])) {
                this.dsDangKyMDNG = [] as any;
                for (let item of _data["dsDangKyMDNG"])
                    this.dsDangKyMDNG!.push(ViewdangkymdngDto.fromJS(item));
            }
            if (Array.isArray(_data["dsHanCheQuyenSDD"])) {
                this.dsHanCheQuyenSDD = [] as any;
                for (let item of _data["dsHanCheQuyenSDD"])
                    this.dsHanCheQuyenSDD!.push(ViewHanchequyensddDto.fromJS(item));
            }
            if (Array.isArray(_data["dsThuaDatCu"])) {
                this.dsThuaDatCu = [] as any;
                for (let item of _data["dsThuaDatCu"])
                    this.dsThuaDatCu!.push(ViewthuadatcuDto.fromJS(item));
            }
            if (Array.isArray(_data["dsdkTaiSan"])) {
                this.dsdkTaiSan = [] as any;
                for (let item of _data["dsdkTaiSan"])
                    this.dsdkTaiSan!.push(DKTaiSan.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DKThuaDat {
        data = typeof data === 'object' ? data : {};
        let result = new DKThuaDat();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["chuSDThuaDat"] = this.chuSDThuaDat ? this.chuSDThuaDat.toJSON() : <any>undefined;
        data["thuaDat"] = this.thuaDat ? this.thuaDat.toJSON() : <any>undefined;
        if (Array.isArray(this.dsDangKyMDNG)) {
            data["dsDangKyMDNG"] = [];
            for (let item of this.dsDangKyMDNG)
                data["dsDangKyMDNG"].push(item.toJSON());
        }
        if (Array.isArray(this.dsHanCheQuyenSDD)) {
            data["dsHanCheQuyenSDD"] = [];
            for (let item of this.dsHanCheQuyenSDD)
                data["dsHanCheQuyenSDD"].push(item.toJSON());
        }
        if (Array.isArray(this.dsThuaDatCu)) {
            data["dsThuaDatCu"] = [];
            for (let item of this.dsThuaDatCu)
                data["dsThuaDatCu"].push(item.toJSON());
        }
        if (Array.isArray(this.dsdkTaiSan)) {
            data["dsdkTaiSan"] = [];
            for (let item of this.dsdkTaiSan)
                data["dsdkTaiSan"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDKThuaDat {
    chuSDThuaDat?: ViewChuSDThuaDat | undefined;
    thuaDat?: ViewThuadatDto | undefined;
    dsDangKyMDNG?: ViewdangkymdngDto[] | undefined;
    dsHanCheQuyenSDD?: ViewHanchequyensddDto[] | undefined;
    dsThuaDatCu?: ViewthuadatcuDto[] | undefined;
    dsdkTaiSan?: DKTaiSan[] | undefined;
}

export class ViewChuSDThuaDat implements IViewChuSDThuaDat {
    idchusdthuadat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    hinhthucsd?: number;
    ngaydkdau?: Date | undefined;
    ngaykt?: Date | undefined;
    sothuaphu?: string | undefined;
    idhoso?: string | undefined;
    idqldotcap?: string | undefined;
    idtrangthai?: string | undefined;
    cochinhly?: number | undefined;
    loaicap?: number | undefined;
    capchunggiay?: number | undefined;
    sophathanh?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    mahosogoc?: string | undefined;
    mavach?: string | undefined;
    ngaycap?: string | undefined;
    thangcap?: string | undefined;
    namcap?: string | undefined;
    dudieukiencapgiay?: number | undefined;
    lydokhongdudk?: string | undefined;
    ngayvaoso?: Date | undefined;
    thutudangky?: number | undefined;
    jsongcn?: string | undefined;
    nguoiky?: string | undefined;
    parmatinh?: string | undefined;
    ngayky?: Date | undefined;
    sysdatetime?: Date | undefined;
    ngaynhan?: Date | undefined;
    nguoinhan?: string | undefined;
    dientichrieng?: number | undefined;
    dientichchung?: number | undefined;
    luotcap?: string | undefined;
    jsontrichluc?: string | undefined;
    jsontrichlucthuadat?: string | undefined;
    jsonketquadodac?: string | undefined;
    jsonketquadodacthuadat?: string | undefined;
    jsonxacnhanranhgioi?: string | undefined;
    jsonxacnhanranhgioithuadat?: string | undefined;
    idbiendong?: string | undefined;
    ghichugcn2?: string | undefined;
    ghichugcn1?: string | undefined;
    versionimport?: number | undefined;

    constructor(data?: IViewChuSDThuaDat) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idchusdthuadat = _data["idchusdthuadat"];
            this.idthuadat = _data["idthuadat"];
            this.idchusudung = _data["idchusudung"];
            this.hinhthucsd = _data["hinhthucsd"];
            this.ngaydkdau = _data["ngaydkdau"] ? new Date(_data["ngaydkdau"].toString()) : <any>undefined;
            this.ngaykt = _data["ngaykt"] ? new Date(_data["ngaykt"].toString()) : <any>undefined;
            this.sothuaphu = _data["sothuaphu"];
            this.idhoso = _data["idhoso"];
            this.idqldotcap = _data["idqldotcap"];
            this.idtrangthai = _data["idtrangthai"];
            this.cochinhly = _data["cochinhly"];
            this.loaicap = _data["loaicap"];
            this.capchunggiay = _data["capchunggiay"];
            this.sophathanh = _data["sophathanh"];
            this.sovaoso1 = _data["sovaoso1"];
            this.sovaoso2 = _data["sovaoso2"];
            this.mahosogoc = _data["mahosogoc"];
            this.mavach = _data["mavach"];
            this.ngaycap = _data["ngaycap"];
            this.thangcap = _data["thangcap"];
            this.namcap = _data["namcap"];
            this.dudieukiencapgiay = _data["dudieukiencapgiay"];
            this.lydokhongdudk = _data["lydokhongdudk"];
            this.ngayvaoso = _data["ngayvaoso"] ? new Date(_data["ngayvaoso"].toString()) : <any>undefined;
            this.thutudangky = _data["thutudangky"];
            this.jsongcn = _data["jsongcn"];
            this.nguoiky = _data["nguoiky"];
            this.parmatinh = _data["parmatinh"];
            this.ngayky = _data["ngayky"] ? new Date(_data["ngayky"].toString()) : <any>undefined;
            this.sysdatetime = _data["sysdatetime"] ? new Date(_data["sysdatetime"].toString()) : <any>undefined;
            this.ngaynhan = _data["ngaynhan"] ? new Date(_data["ngaynhan"].toString()) : <any>undefined;
            this.nguoinhan = _data["nguoinhan"];
            this.dientichrieng = _data["dientichrieng"];
            this.dientichchung = _data["dientichchung"];
            this.luotcap = _data["luotcap"];
            this.jsontrichluc = _data["jsontrichluc"];
            this.jsontrichlucthuadat = _data["jsontrichlucthuadat"];
            this.jsonketquadodac = _data["jsonketquadodac"];
            this.jsonketquadodacthuadat = _data["jsonketquadodacthuadat"];
            this.jsonxacnhanranhgioi = _data["jsonxacnhanranhgioi"];
            this.jsonxacnhanranhgioithuadat = _data["jsonxacnhanranhgioithuadat"];
            this.idbiendong = _data["idbiendong"];
            this.ghichugcn2 = _data["ghichugcn2"];
            this.ghichugcn1 = _data["ghichugcn1"];
            this.versionimport = _data["versionimport"];
        }
    }

    static fromJS(data: any): ViewChuSDThuaDat {
        data = typeof data === 'object' ? data : {};
        let result = new ViewChuSDThuaDat();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idchusdthuadat"] = this.idchusdthuadat;
        data["idthuadat"] = this.idthuadat;
        data["idchusudung"] = this.idchusudung;
        data["hinhthucsd"] = this.hinhthucsd;
        data["ngaydkdau"] = this.ngaydkdau ? this.ngaydkdau.toISOString() : <any>undefined;
        data["ngaykt"] = this.ngaykt ? this.ngaykt.toISOString() : <any>undefined;
        data["sothuaphu"] = this.sothuaphu;
        data["idhoso"] = this.idhoso;
        data["idqldotcap"] = this.idqldotcap;
        data["idtrangthai"] = this.idtrangthai;
        data["cochinhly"] = this.cochinhly;
        data["loaicap"] = this.loaicap;
        data["capchunggiay"] = this.capchunggiay;
        data["sophathanh"] = this.sophathanh;
        data["sovaoso1"] = this.sovaoso1;
        data["sovaoso2"] = this.sovaoso2;
        data["mahosogoc"] = this.mahosogoc;
        data["mavach"] = this.mavach;
        data["ngaycap"] = this.ngaycap;
        data["thangcap"] = this.thangcap;
        data["namcap"] = this.namcap;
        data["dudieukiencapgiay"] = this.dudieukiencapgiay;
        data["lydokhongdudk"] = this.lydokhongdudk;
        data["ngayvaoso"] = this.ngayvaoso ? this.ngayvaoso.toISOString() : <any>undefined;
        data["thutudangky"] = this.thutudangky;
        data["jsongcn"] = this.jsongcn;
        data["nguoiky"] = this.nguoiky;
        data["parmatinh"] = this.parmatinh;
        data["ngayky"] = this.ngayky ? this.ngayky.toISOString() : <any>undefined;
        data["sysdatetime"] = this.sysdatetime ? this.sysdatetime.toISOString() : <any>undefined;
        data["ngaynhan"] = this.ngaynhan ? this.ngaynhan.toISOString() : <any>undefined;
        data["nguoinhan"] = this.nguoinhan;
        data["dientichrieng"] = this.dientichrieng;
        data["dientichchung"] = this.dientichchung;
        data["luotcap"] = this.luotcap;
        data["jsontrichluc"] = this.jsontrichluc;
        data["jsontrichlucthuadat"] = this.jsontrichlucthuadat;
        data["jsonketquadodac"] = this.jsonketquadodac;
        data["jsonketquadodacthuadat"] = this.jsonketquadodacthuadat;
        data["jsonxacnhanranhgioi"] = this.jsonxacnhanranhgioi;
        data["jsonxacnhanranhgioithuadat"] = this.jsonxacnhanranhgioithuadat;
        data["idbiendong"] = this.idbiendong;
        data["ghichugcn2"] = this.ghichugcn2;
        data["ghichugcn1"] = this.ghichugcn1;
        data["versionimport"] = this.versionimport;
        return data; 
    }
}

export interface IViewChuSDThuaDat {
    idchusdthuadat?: string | undefined;
    idthuadat?: string | undefined;
    idchusudung?: string | undefined;
    hinhthucsd?: number;
    ngaydkdau?: Date | undefined;
    ngaykt?: Date | undefined;
    sothuaphu?: string | undefined;
    idhoso?: string | undefined;
    idqldotcap?: string | undefined;
    idtrangthai?: string | undefined;
    cochinhly?: number | undefined;
    loaicap?: number | undefined;
    capchunggiay?: number | undefined;
    sophathanh?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    mahosogoc?: string | undefined;
    mavach?: string | undefined;
    ngaycap?: string | undefined;
    thangcap?: string | undefined;
    namcap?: string | undefined;
    dudieukiencapgiay?: number | undefined;
    lydokhongdudk?: string | undefined;
    ngayvaoso?: Date | undefined;
    thutudangky?: number | undefined;
    jsongcn?: string | undefined;
    nguoiky?: string | undefined;
    parmatinh?: string | undefined;
    ngayky?: Date | undefined;
    sysdatetime?: Date | undefined;
    ngaynhan?: Date | undefined;
    nguoinhan?: string | undefined;
    dientichrieng?: number | undefined;
    dientichchung?: number | undefined;
    luotcap?: string | undefined;
    jsontrichluc?: string | undefined;
    jsontrichlucthuadat?: string | undefined;
    jsonketquadodac?: string | undefined;
    jsonketquadodacthuadat?: string | undefined;
    jsonxacnhanranhgioi?: string | undefined;
    jsonxacnhanranhgioithuadat?: string | undefined;
    idbiendong?: string | undefined;
    ghichugcn2?: string | undefined;
    ghichugcn1?: string | undefined;
    versionimport?: number | undefined;
}

export class ViewThuadatDto implements IViewThuadatDto {
    idthuadat?: string | undefined;
    idtobando?: string | undefined;
    sothututhua?: string | undefined;
    dientichpl?: number | undefined;
    khuvuc?: string | undefined;
    diachithua?: string | undefined;
    ghichu?: string | undefined;
    ttquyhoach?: string | undefined;
    parmatinh?: string | undefined;
    sysdtime?: Date | undefined;
    geojson?: string | undefined;
    dientich?: number | undefined;
    ladoituongchiemdat?: number | undefined;
    sonha?: string | undefined;
    tenduong?: string | undefined;
    caylichsu?: string | undefined;
    lanbiendong?: number | undefined;
    dientichhlgt?: number | undefined;
    dientichhlld?: number | undefined;
    dientichhlsongsuoi?: number | undefined;
    dientichhlduongsat?: number | undefined;
    loaidatbd?: string | undefined;
    soto?: string | undefined;
    tyle?: number | undefined;
    objectid?: number | undefined;
    madvhc?: string | undefined;
    sothututhuaSX?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    lichsuthuadats?: LichsuDto[] | undefined;
    idDvhc?: string | undefined;
    idTinh?: string | undefined;
    idHuyen?: string | undefined;

    constructor(data?: IViewThuadatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idthuadat = _data["idthuadat"];
            this.idtobando = _data["idtobando"];
            this.sothututhua = _data["sothututhua"];
            this.dientichpl = _data["dientichpl"];
            this.khuvuc = _data["khuvuc"];
            this.diachithua = _data["diachithua"];
            this.ghichu = _data["ghichu"];
            this.ttquyhoach = _data["ttquyhoach"];
            this.parmatinh = _data["parmatinh"];
            this.sysdtime = _data["sysdtime"] ? new Date(_data["sysdtime"].toString()) : <any>undefined;
            this.geojson = _data["geojson"];
            this.dientich = _data["dientich"];
            this.ladoituongchiemdat = _data["ladoituongchiemdat"];
            this.sonha = _data["sonha"];
            this.tenduong = _data["tenduong"];
            this.caylichsu = _data["caylichsu"];
            this.lanbiendong = _data["lanbiendong"];
            this.dientichhlgt = _data["dientichhlgt"];
            this.dientichhlld = _data["dientichhlld"];
            this.dientichhlsongsuoi = _data["dientichhlsongsuoi"];
            this.dientichhlduongsat = _data["dientichhlduongsat"];
            this.loaidatbd = _data["loaidatbd"];
            this.soto = _data["soto"];
            this.tyle = _data["tyle"];
            this.objectid = _data["objectid"];
            this.madvhc = _data["madvhc"];
            this.sothututhuaSX = _data["sothututhuaSX"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
            if (Array.isArray(_data["lichsuthuadats"])) {
                this.lichsuthuadats = [] as any;
                for (let item of _data["lichsuthuadats"])
                    this.lichsuthuadats!.push(LichsuDto.fromJS(item));
            }
            this.idDvhc = _data["idDvhc"];
            this.idTinh = _data["idTinh"];
            this.idHuyen = _data["idHuyen"];
        }
    }

    static fromJS(data: any): ViewThuadatDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewThuadatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idthuadat"] = this.idthuadat;
        data["idtobando"] = this.idtobando;
        data["sothututhua"] = this.sothututhua;
        data["dientichpl"] = this.dientichpl;
        data["khuvuc"] = this.khuvuc;
        data["diachithua"] = this.diachithua;
        data["ghichu"] = this.ghichu;
        data["ttquyhoach"] = this.ttquyhoach;
        data["parmatinh"] = this.parmatinh;
        data["sysdtime"] = this.sysdtime ? this.sysdtime.toISOString() : <any>undefined;
        data["geojson"] = this.geojson;
        data["dientich"] = this.dientich;
        data["ladoituongchiemdat"] = this.ladoituongchiemdat;
        data["sonha"] = this.sonha;
        data["tenduong"] = this.tenduong;
        data["caylichsu"] = this.caylichsu;
        data["lanbiendong"] = this.lanbiendong;
        data["dientichhlgt"] = this.dientichhlgt;
        data["dientichhlld"] = this.dientichhlld;
        data["dientichhlsongsuoi"] = this.dientichhlsongsuoi;
        data["dientichhlduongsat"] = this.dientichhlduongsat;
        data["loaidatbd"] = this.loaidatbd;
        data["soto"] = this.soto;
        data["tyle"] = this.tyle;
        data["objectid"] = this.objectid;
        data["madvhc"] = this.madvhc;
        data["sothututhuaSX"] = this.sothututhuaSX;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        if (Array.isArray(this.lichsuthuadats)) {
            data["lichsuthuadats"] = [];
            for (let item of this.lichsuthuadats)
                data["lichsuthuadats"].push(item.toJSON());
        }
        data["idDvhc"] = this.idDvhc;
        data["idTinh"] = this.idTinh;
        data["idHuyen"] = this.idHuyen;
        return data; 
    }
}

export interface IViewThuadatDto {
    idthuadat?: string | undefined;
    idtobando?: string | undefined;
    sothututhua?: string | undefined;
    dientichpl?: number | undefined;
    khuvuc?: string | undefined;
    diachithua?: string | undefined;
    ghichu?: string | undefined;
    ttquyhoach?: string | undefined;
    parmatinh?: string | undefined;
    sysdtime?: Date | undefined;
    geojson?: string | undefined;
    dientich?: number | undefined;
    ladoituongchiemdat?: number | undefined;
    sonha?: string | undefined;
    tenduong?: string | undefined;
    caylichsu?: string | undefined;
    lanbiendong?: number | undefined;
    dientichhlgt?: number | undefined;
    dientichhlld?: number | undefined;
    dientichhlsongsuoi?: number | undefined;
    dientichhlduongsat?: number | undefined;
    loaidatbd?: string | undefined;
    soto?: string | undefined;
    tyle?: number | undefined;
    objectid?: number | undefined;
    madvhc?: string | undefined;
    sothututhuaSX?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    lichsuthuadats?: LichsuDto[] | undefined;
    idDvhc?: string | undefined;
    idTinh?: string | undefined;
    idHuyen?: string | undefined;
}

export class LichsuDto implements ILichsuDto {
    key?: string | undefined;
    text?: string | undefined;
    to?: string | undefined;
    loaibiendong?: string | undefined;
    idLoaibiendong?: string | undefined;
    idbiendong?: string | undefined;
    idthuadat?: string | undefined;
    parmatinh?: string | undefined;
    viewdangky?: string | undefined;
    cayLichsu?: LichsuDto | undefined;
    noidungbdsdc?: string | undefined;
    ngaydangky?: string | undefined;
    ngaydk?: Date | undefined;
    orderNumberLichSu?: number;
    seThuaDatId?: number;
    seThuaAnhEmId?: number;
    seMaBienDong?: number;
    isThuaDatHienTai?: boolean;
    seParentThuaDatIds?: number[] | undefined;
    cadasParentIdThuaDat?: number;

    constructor(data?: ILichsuDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.key = _data["key"];
            this.text = _data["text"];
            this.to = _data["to"];
            this.loaibiendong = _data["loaibiendong"];
            this.idLoaibiendong = _data["idLoaibiendong"];
            this.idbiendong = _data["idbiendong"];
            this.idthuadat = _data["idthuadat"];
            this.parmatinh = _data["parmatinh"];
            this.viewdangky = _data["viewdangky"];
            this.cayLichsu = _data["cayLichsu"] ? LichsuDto.fromJS(_data["cayLichsu"]) : <any>undefined;
            this.noidungbdsdc = _data["noidungbdsdc"];
            this.ngaydangky = _data["ngaydangky"];
            this.ngaydk = _data["ngaydk"] ? new Date(_data["ngaydk"].toString()) : <any>undefined;
            this.orderNumberLichSu = _data["orderNumberLichSu"];
            this.seThuaDatId = _data["seThuaDatId"];
            this.seThuaAnhEmId = _data["seThuaAnhEmId"];
            this.seMaBienDong = _data["seMaBienDong"];
            this.isThuaDatHienTai = _data["isThuaDatHienTai"];
            if (Array.isArray(_data["seParentThuaDatIds"])) {
                this.seParentThuaDatIds = [] as any;
                for (let item of _data["seParentThuaDatIds"])
                    this.seParentThuaDatIds!.push(item);
            }
            this.cadasParentIdThuaDat = _data["cadasParentIdThuaDat"];
        }
    }

    static fromJS(data: any): LichsuDto {
        data = typeof data === 'object' ? data : {};
        let result = new LichsuDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["key"] = this.key;
        data["text"] = this.text;
        data["to"] = this.to;
        data["loaibiendong"] = this.loaibiendong;
        data["idLoaibiendong"] = this.idLoaibiendong;
        data["idbiendong"] = this.idbiendong;
        data["idthuadat"] = this.idthuadat;
        data["parmatinh"] = this.parmatinh;
        data["viewdangky"] = this.viewdangky;
        data["cayLichsu"] = this.cayLichsu ? this.cayLichsu.toJSON() : <any>undefined;
        data["noidungbdsdc"] = this.noidungbdsdc;
        data["ngaydangky"] = this.ngaydangky;
        data["ngaydk"] = this.ngaydk ? this.ngaydk.toISOString() : <any>undefined;
        data["orderNumberLichSu"] = this.orderNumberLichSu;
        data["seThuaDatId"] = this.seThuaDatId;
        data["seThuaAnhEmId"] = this.seThuaAnhEmId;
        data["seMaBienDong"] = this.seMaBienDong;
        data["isThuaDatHienTai"] = this.isThuaDatHienTai;
        if (Array.isArray(this.seParentThuaDatIds)) {
            data["seParentThuaDatIds"] = [];
            for (let item of this.seParentThuaDatIds)
                data["seParentThuaDatIds"].push(item);
        }
        data["cadasParentIdThuaDat"] = this.cadasParentIdThuaDat;
        return data; 
    }
}

export interface ILichsuDto {
    key?: string | undefined;
    text?: string | undefined;
    to?: string | undefined;
    loaibiendong?: string | undefined;
    idLoaibiendong?: string | undefined;
    idbiendong?: string | undefined;
    idthuadat?: string | undefined;
    parmatinh?: string | undefined;
    viewdangky?: string | undefined;
    cayLichsu?: LichsuDto | undefined;
    noidungbdsdc?: string | undefined;
    ngaydangky?: string | undefined;
    ngaydk?: Date | undefined;
    orderNumberLichSu?: number;
    seThuaDatId?: number;
    seThuaAnhEmId?: number;
    seMaBienDong?: number;
    isThuaDatHienTai?: boolean;
    seParentThuaDatIds?: number[] | undefined;
    cadasParentIdThuaDat?: number;
}

export class ViewdangkymdngDto implements IViewdangkymdngDto {
    iddangkymdsdd?: string | undefined;
    idchusdthuadat?: string | undefined;
    idmucdichsdd?: string | undefined;
    loaidat?: string | undefined;
    tenmdsdd?: string | undefined;
    tendaydu?: string | undefined;
    cha?: string | undefined;
    mamau?: string | undefined;
    chitiet?: string | undefined;
    dientichrieng?: number | undefined;
    dientichchung?: number | undefined;
    thoihan?: string | undefined;
    ghichu?: string | undefined;
    dientich?: number | undefined;
    thutumdsd?: number | undefined;
    idnguongocsdd?: string | undefined;
    nguongoc?: string | undefined;
    tennguongoc?: string | undefined;
    cocapgiay?: number | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    thutuhienthi?: number;

    constructor(data?: IViewdangkymdngDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.iddangkymdsdd = _data["iddangkymdsdd"];
            this.idchusdthuadat = _data["idchusdthuadat"];
            this.idmucdichsdd = _data["idmucdichsdd"];
            this.loaidat = _data["loaidat"];
            this.tenmdsdd = _data["tenmdsdd"];
            this.tendaydu = _data["tendaydu"];
            this.cha = _data["cha"];
            this.mamau = _data["mamau"];
            this.chitiet = _data["chitiet"];
            this.dientichrieng = _data["dientichrieng"];
            this.dientichchung = _data["dientichchung"];
            this.thoihan = _data["thoihan"];
            this.ghichu = _data["ghichu"];
            this.dientich = _data["dientich"];
            this.thutumdsd = _data["thutumdsd"];
            this.idnguongocsdd = _data["idnguongocsdd"];
            this.nguongoc = _data["nguongoc"];
            this.tennguongoc = _data["tennguongoc"];
            this.cocapgiay = _data["cocapgiay"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
            this.thutuhienthi = _data["thutuhienthi"];
        }
    }

    static fromJS(data: any): ViewdangkymdngDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewdangkymdngDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["iddangkymdsdd"] = this.iddangkymdsdd;
        data["idchusdthuadat"] = this.idchusdthuadat;
        data["idmucdichsdd"] = this.idmucdichsdd;
        data["loaidat"] = this.loaidat;
        data["tenmdsdd"] = this.tenmdsdd;
        data["tendaydu"] = this.tendaydu;
        data["cha"] = this.cha;
        data["mamau"] = this.mamau;
        data["chitiet"] = this.chitiet;
        data["dientichrieng"] = this.dientichrieng;
        data["dientichchung"] = this.dientichchung;
        data["thoihan"] = this.thoihan;
        data["ghichu"] = this.ghichu;
        data["dientich"] = this.dientich;
        data["thutumdsd"] = this.thutumdsd;
        data["idnguongocsdd"] = this.idnguongocsdd;
        data["nguongoc"] = this.nguongoc;
        data["tennguongoc"] = this.tennguongoc;
        data["cocapgiay"] = this.cocapgiay;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        data["thutuhienthi"] = this.thutuhienthi;
        return data; 
    }
}

export interface IViewdangkymdngDto {
    iddangkymdsdd?: string | undefined;
    idchusdthuadat?: string | undefined;
    idmucdichsdd?: string | undefined;
    loaidat?: string | undefined;
    tenmdsdd?: string | undefined;
    tendaydu?: string | undefined;
    cha?: string | undefined;
    mamau?: string | undefined;
    chitiet?: string | undefined;
    dientichrieng?: number | undefined;
    dientichchung?: number | undefined;
    thoihan?: string | undefined;
    ghichu?: string | undefined;
    dientich?: number | undefined;
    thutumdsd?: number | undefined;
    idnguongocsdd?: string | undefined;
    nguongoc?: string | undefined;
    tennguongoc?: string | undefined;
    cocapgiay?: number | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    thutuhienthi?: number;
}

export class ViewHanchequyensddDto implements IViewHanchequyensddDto {
    idhanchesdd?: string | undefined;
    idloaihanche?: string | undefined;
    dientich?: number | undefined;
    sovanbanphaply?: string | undefined;
    ngaybanhanh?: Date | undefined;
    coquanbanhanh?: string | undefined;
    idchusdthuadat?: string | undefined;
    noidunghanche?: string | undefined;
    phamvi?: number | undefined;
    loaihanche?: number | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;

    constructor(data?: IViewHanchequyensddDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idhanchesdd = _data["idhanchesdd"];
            this.idloaihanche = _data["idloaihanche"];
            this.dientich = _data["dientich"];
            this.sovanbanphaply = _data["sovanbanphaply"];
            this.ngaybanhanh = _data["ngaybanhanh"] ? new Date(_data["ngaybanhanh"].toString()) : <any>undefined;
            this.coquanbanhanh = _data["coquanbanhanh"];
            this.idchusdthuadat = _data["idchusdthuadat"];
            this.noidunghanche = _data["noidunghanche"];
            this.phamvi = _data["phamvi"];
            this.loaihanche = _data["loaihanche"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
        }
    }

    static fromJS(data: any): ViewHanchequyensddDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewHanchequyensddDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idhanchesdd"] = this.idhanchesdd;
        data["idloaihanche"] = this.idloaihanche;
        data["dientich"] = this.dientich;
        data["sovanbanphaply"] = this.sovanbanphaply;
        data["ngaybanhanh"] = this.ngaybanhanh ? this.ngaybanhanh.toISOString() : <any>undefined;
        data["coquanbanhanh"] = this.coquanbanhanh;
        data["idchusdthuadat"] = this.idchusdthuadat;
        data["noidunghanche"] = this.noidunghanche;
        data["phamvi"] = this.phamvi;
        data["loaihanche"] = this.loaihanche;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        return data; 
    }
}

export interface IViewHanchequyensddDto {
    idhanchesdd?: string | undefined;
    idloaihanche?: string | undefined;
    dientich?: number | undefined;
    sovanbanphaply?: string | undefined;
    ngaybanhanh?: Date | undefined;
    coquanbanhanh?: string | undefined;
    idchusdthuadat?: string | undefined;
    noidunghanche?: string | undefined;
    phamvi?: number | undefined;
    loaihanche?: number | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
}

export class ViewthuadatcuDto implements IViewthuadatcuDto {
    idthuacu?: string | undefined;
    idthuadat?: string | undefined;
    tocu?: string | undefined;
    thuacu?: string | undefined;
    dientichcu?: string | undefined;
    dientichdatocu?: string | undefined;
    mdsdcu?: string | undefined;
    nguongoccu?: string | undefined;
    thoihancu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;

    constructor(data?: IViewthuadatcuDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idthuacu = _data["idthuacu"];
            this.idthuadat = _data["idthuadat"];
            this.tocu = _data["tocu"];
            this.thuacu = _data["thuacu"];
            this.dientichcu = _data["dientichcu"];
            this.dientichdatocu = _data["dientichdatocu"];
            this.mdsdcu = _data["mdsdcu"];
            this.nguongoccu = _data["nguongoccu"];
            this.thoihancu = _data["thoihancu"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
        }
    }

    static fromJS(data: any): ViewthuadatcuDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewthuadatcuDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idthuacu"] = this.idthuacu;
        data["idthuadat"] = this.idthuadat;
        data["tocu"] = this.tocu;
        data["thuacu"] = this.thuacu;
        data["dientichcu"] = this.dientichcu;
        data["dientichdatocu"] = this.dientichdatocu;
        data["mdsdcu"] = this.mdsdcu;
        data["nguongoccu"] = this.nguongoccu;
        data["thoihancu"] = this.thoihancu;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        return data; 
    }
}

export interface IViewthuadatcuDto {
    idthuacu?: string | undefined;
    idthuadat?: string | undefined;
    tocu?: string | undefined;
    thuacu?: string | undefined;
    dientichcu?: string | undefined;
    dientichdatocu?: string | undefined;
    mdsdcu?: string | undefined;
    nguongoccu?: string | undefined;
    thoihancu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
}

export class DKTaiSan implements IDKTaiSan {
    dangKyTaiSan?: ViewTSDangkytaisanDto[] | undefined;
    nha?: ViewNhaDto | undefined;
    hangMucCongTrinh?: ViewHangmuccongtrinhDto | undefined;
    rung?: ViewRungDto | undefined;
    cayLauNam?: ViewCaylaunamDto | undefined;

    constructor(data?: IDKTaiSan) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["dangKyTaiSan"])) {
                this.dangKyTaiSan = [] as any;
                for (let item of _data["dangKyTaiSan"])
                    this.dangKyTaiSan!.push(ViewTSDangkytaisanDto.fromJS(item));
            }
            this.nha = _data["nha"] ? ViewNhaDto.fromJS(_data["nha"]) : <any>undefined;
            this.hangMucCongTrinh = _data["hangMucCongTrinh"] ? ViewHangmuccongtrinhDto.fromJS(_data["hangMucCongTrinh"]) : <any>undefined;
            this.rung = _data["rung"] ? ViewRungDto.fromJS(_data["rung"]) : <any>undefined;
            this.cayLauNam = _data["cayLauNam"] ? ViewCaylaunamDto.fromJS(_data["cayLauNam"]) : <any>undefined;
        }
    }

    static fromJS(data: any): DKTaiSan {
        data = typeof data === 'object' ? data : {};
        let result = new DKTaiSan();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dangKyTaiSan)) {
            data["dangKyTaiSan"] = [];
            for (let item of this.dangKyTaiSan)
                data["dangKyTaiSan"].push(item.toJSON());
        }
        data["nha"] = this.nha ? this.nha.toJSON() : <any>undefined;
        data["hangMucCongTrinh"] = this.hangMucCongTrinh ? this.hangMucCongTrinh.toJSON() : <any>undefined;
        data["rung"] = this.rung ? this.rung.toJSON() : <any>undefined;
        data["cayLauNam"] = this.cayLauNam ? this.cayLauNam.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IDKTaiSan {
    dangKyTaiSan?: ViewTSDangkytaisanDto[] | undefined;
    nha?: ViewNhaDto | undefined;
    hangMucCongTrinh?: ViewHangmuccongtrinhDto | undefined;
    rung?: ViewRungDto | undefined;
    cayLauNam?: ViewCaylaunamDto | undefined;
}

export class ViewTSDangkytaisanDto implements IViewTSDangkytaisanDto {
    iddangkytaisan?: string | undefined;
    idtdtaisan?: string | undefined;
    tentaisan?: string | undefined;
    dientichtaisan?: number | undefined;
    dtxdtaisan?: number | undefined;
    loaitaisan?: number | undefined;
    idchusohuu?: string | undefined;
    dgnfile?: string | undefined;
    jsoncayls?: string | undefined;
    parmatinh?: string | undefined;
    hinhthucsohuu?: number | undefined;
    thoihansohuu?: string | undefined;
    dientich?: number | undefined;
    tendientich?: string | undefined;
    ghichu?: string | undefined;
    idhoso?: string | undefined;
    loaidangky?: number | undefined;
    idgcntaisan?: string | undefined;
    mahsgoc?: string | undefined;
    trangthai?: number | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    orderTempId?: string | undefined;

    constructor(data?: IViewTSDangkytaisanDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.iddangkytaisan = _data["iddangkytaisan"];
            this.idtdtaisan = _data["idtdtaisan"];
            this.tentaisan = _data["tentaisan"];
            this.dientichtaisan = _data["dientichtaisan"];
            this.dtxdtaisan = _data["dtxdtaisan"];
            this.loaitaisan = _data["loaitaisan"];
            this.idchusohuu = _data["idchusohuu"];
            this.dgnfile = _data["dgnfile"];
            this.jsoncayls = _data["jsoncayls"];
            this.parmatinh = _data["parmatinh"];
            this.hinhthucsohuu = _data["hinhthucsohuu"];
            this.thoihansohuu = _data["thoihansohuu"];
            this.dientich = _data["dientich"];
            this.tendientich = _data["tendientich"];
            this.ghichu = _data["ghichu"];
            this.idhoso = _data["idhoso"];
            this.loaidangky = _data["loaidangky"];
            this.idgcntaisan = _data["idgcntaisan"];
            this.mahsgoc = _data["mahsgoc"];
            this.trangthai = _data["trangthai"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
            this.orderTempId = _data["orderTempId"];
        }
    }

    static fromJS(data: any): ViewTSDangkytaisanDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewTSDangkytaisanDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["iddangkytaisan"] = this.iddangkytaisan;
        data["idtdtaisan"] = this.idtdtaisan;
        data["tentaisan"] = this.tentaisan;
        data["dientichtaisan"] = this.dientichtaisan;
        data["dtxdtaisan"] = this.dtxdtaisan;
        data["loaitaisan"] = this.loaitaisan;
        data["idchusohuu"] = this.idchusohuu;
        data["dgnfile"] = this.dgnfile;
        data["jsoncayls"] = this.jsoncayls;
        data["parmatinh"] = this.parmatinh;
        data["hinhthucsohuu"] = this.hinhthucsohuu;
        data["thoihansohuu"] = this.thoihansohuu;
        data["dientich"] = this.dientich;
        data["tendientich"] = this.tendientich;
        data["ghichu"] = this.ghichu;
        data["idhoso"] = this.idhoso;
        data["loaidangky"] = this.loaidangky;
        data["idgcntaisan"] = this.idgcntaisan;
        data["mahsgoc"] = this.mahsgoc;
        data["trangthai"] = this.trangthai;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        data["orderTempId"] = this.orderTempId;
        return data; 
    }
}

export interface IViewTSDangkytaisanDto {
    iddangkytaisan?: string | undefined;
    idtdtaisan?: string | undefined;
    tentaisan?: string | undefined;
    dientichtaisan?: number | undefined;
    dtxdtaisan?: number | undefined;
    loaitaisan?: number | undefined;
    idchusohuu?: string | undefined;
    dgnfile?: string | undefined;
    jsoncayls?: string | undefined;
    parmatinh?: string | undefined;
    hinhthucsohuu?: number | undefined;
    thoihansohuu?: string | undefined;
    dientich?: number | undefined;
    tendientich?: string | undefined;
    ghichu?: string | undefined;
    idhoso?: string | undefined;
    loaidangky?: number | undefined;
    idgcntaisan?: string | undefined;
    mahsgoc?: string | undefined;
    trangthai?: number | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
    orderTempId?: string | undefined;
}

export class ViewNhaDto implements IViewNhaDto {
    idnha?: string | undefined;
    idloainha?: string | undefined;
    tenloainha?: string | undefined;
    idcaphangnha?: string | undefined;
    tencaphangnha?: string | undefined;
    diachi?: string | undefined;
    ten?: string | undefined;
    dtxaydung?: number | undefined;
    sotang?: string | undefined;
    dtsan?: number | undefined;
    namxd?: string | undefined;
    ketcau?: string | undefined;
    sotangham?: number | undefined;
    sophong?: number | undefined;
    sysDate?: Date | undefined;
    ghichu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;

    constructor(data?: IViewNhaDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idnha = _data["idnha"];
            this.idloainha = _data["idloainha"];
            this.tenloainha = _data["tenloainha"];
            this.idcaphangnha = _data["idcaphangnha"];
            this.tencaphangnha = _data["tencaphangnha"];
            this.diachi = _data["diachi"];
            this.ten = _data["ten"];
            this.dtxaydung = _data["dtxaydung"];
            this.sotang = _data["sotang"];
            this.dtsan = _data["dtsan"];
            this.namxd = _data["namxd"];
            this.ketcau = _data["ketcau"];
            this.sotangham = _data["sotangham"];
            this.sophong = _data["sophong"];
            this.sysDate = _data["sysDate"] ? new Date(_data["sysDate"].toString()) : <any>undefined;
            this.ghichu = _data["ghichu"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
        }
    }

    static fromJS(data: any): ViewNhaDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewNhaDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idnha"] = this.idnha;
        data["idloainha"] = this.idloainha;
        data["tenloainha"] = this.tenloainha;
        data["idcaphangnha"] = this.idcaphangnha;
        data["tencaphangnha"] = this.tencaphangnha;
        data["diachi"] = this.diachi;
        data["ten"] = this.ten;
        data["dtxaydung"] = this.dtxaydung;
        data["sotang"] = this.sotang;
        data["dtsan"] = this.dtsan;
        data["namxd"] = this.namxd;
        data["ketcau"] = this.ketcau;
        data["sotangham"] = this.sotangham;
        data["sophong"] = this.sophong;
        data["sysDate"] = this.sysDate ? this.sysDate.toISOString() : <any>undefined;
        data["ghichu"] = this.ghichu;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        return data; 
    }
}

export interface IViewNhaDto {
    idnha?: string | undefined;
    idloainha?: string | undefined;
    tenloainha?: string | undefined;
    idcaphangnha?: string | undefined;
    tencaphangnha?: string | undefined;
    diachi?: string | undefined;
    ten?: string | undefined;
    dtxaydung?: number | undefined;
    sotang?: string | undefined;
    dtsan?: number | undefined;
    namxd?: string | undefined;
    ketcau?: string | undefined;
    sotangham?: number | undefined;
    sophong?: number | undefined;
    sysDate?: Date | undefined;
    ghichu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
}

export class ViewHangmuccongtrinhDto implements IViewHangmuccongtrinhDto {
    idhangmucct?: string | undefined;
    idcongtrinh?: string | undefined;
    tencongtrinh?: string | undefined;
    diaChicongtrinh?: string | undefined;
    tenhangmuc?: string | undefined;
    congnang?: string | undefined;
    dtxaydung?: number | undefined;
    dtcongsuat?: number | undefined;
    sotang?: number | undefined;
    sotangham?: number | undefined;
    namxaydung?: string | undefined;
    namhoanthanh?: string | undefined;
    ketcau?: string | undefined;
    thoihansohuu?: string | undefined;
    hinhthucsohuu?: string | undefined;
    caphang?: string | undefined;
    donvi?: string | undefined;
    diachi?: string | undefined;
    ghichu?: string | undefined;
    sysDate?: Date | undefined;
    idcapcongtrinh?: string | undefined;
    tencapcongtrinh?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;

    constructor(data?: IViewHangmuccongtrinhDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idhangmucct = _data["idhangmucct"];
            this.idcongtrinh = _data["idcongtrinh"];
            this.tencongtrinh = _data["tencongtrinh"];
            this.diaChicongtrinh = _data["diaChicongtrinh"];
            this.tenhangmuc = _data["tenhangmuc"];
            this.congnang = _data["congnang"];
            this.dtxaydung = _data["dtxaydung"];
            this.dtcongsuat = _data["dtcongsuat"];
            this.sotang = _data["sotang"];
            this.sotangham = _data["sotangham"];
            this.namxaydung = _data["namxaydung"];
            this.namhoanthanh = _data["namhoanthanh"];
            this.ketcau = _data["ketcau"];
            this.thoihansohuu = _data["thoihansohuu"];
            this.hinhthucsohuu = _data["hinhthucsohuu"];
            this.caphang = _data["caphang"];
            this.donvi = _data["donvi"];
            this.diachi = _data["diachi"];
            this.ghichu = _data["ghichu"];
            this.sysDate = _data["sysDate"] ? new Date(_data["sysDate"].toString()) : <any>undefined;
            this.idcapcongtrinh = _data["idcapcongtrinh"];
            this.tencapcongtrinh = _data["tencapcongtrinh"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
        }
    }

    static fromJS(data: any): ViewHangmuccongtrinhDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewHangmuccongtrinhDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idhangmucct"] = this.idhangmucct;
        data["idcongtrinh"] = this.idcongtrinh;
        data["tencongtrinh"] = this.tencongtrinh;
        data["diaChicongtrinh"] = this.diaChicongtrinh;
        data["tenhangmuc"] = this.tenhangmuc;
        data["congnang"] = this.congnang;
        data["dtxaydung"] = this.dtxaydung;
        data["dtcongsuat"] = this.dtcongsuat;
        data["sotang"] = this.sotang;
        data["sotangham"] = this.sotangham;
        data["namxaydung"] = this.namxaydung;
        data["namhoanthanh"] = this.namhoanthanh;
        data["ketcau"] = this.ketcau;
        data["thoihansohuu"] = this.thoihansohuu;
        data["hinhthucsohuu"] = this.hinhthucsohuu;
        data["caphang"] = this.caphang;
        data["donvi"] = this.donvi;
        data["diachi"] = this.diachi;
        data["ghichu"] = this.ghichu;
        data["sysDate"] = this.sysDate ? this.sysDate.toISOString() : <any>undefined;
        data["idcapcongtrinh"] = this.idcapcongtrinh;
        data["tencapcongtrinh"] = this.tencapcongtrinh;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        return data; 
    }
}

export interface IViewHangmuccongtrinhDto {
    idhangmucct?: string | undefined;
    idcongtrinh?: string | undefined;
    tencongtrinh?: string | undefined;
    diaChicongtrinh?: string | undefined;
    tenhangmuc?: string | undefined;
    congnang?: string | undefined;
    dtxaydung?: number | undefined;
    dtcongsuat?: number | undefined;
    sotang?: number | undefined;
    sotangham?: number | undefined;
    namxaydung?: string | undefined;
    namhoanthanh?: string | undefined;
    ketcau?: string | undefined;
    thoihansohuu?: string | undefined;
    hinhthucsohuu?: string | undefined;
    caphang?: string | undefined;
    donvi?: string | undefined;
    diachi?: string | undefined;
    ghichu?: string | undefined;
    sysDate?: Date | undefined;
    idcapcongtrinh?: string | undefined;
    tencapcongtrinh?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
}

export class ViewRungDto implements IViewRungDto {
    idrung?: string | undefined;
    loaicayrung?: string | undefined;
    dientich?: number | undefined;
    idngtaolap?: string | undefined;
    tennguongoctaolap?: string | undefined;
    sysDate?: Date | undefined;
    ghichu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;

    constructor(data?: IViewRungDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idrung = _data["idrung"];
            this.loaicayrung = _data["loaicayrung"];
            this.dientich = _data["dientich"];
            this.idngtaolap = _data["idngtaolap"];
            this.tennguongoctaolap = _data["tennguongoctaolap"];
            this.sysDate = _data["sysDate"] ? new Date(_data["sysDate"].toString()) : <any>undefined;
            this.ghichu = _data["ghichu"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
        }
    }

    static fromJS(data: any): ViewRungDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewRungDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idrung"] = this.idrung;
        data["loaicayrung"] = this.loaicayrung;
        data["dientich"] = this.dientich;
        data["idngtaolap"] = this.idngtaolap;
        data["tennguongoctaolap"] = this.tennguongoctaolap;
        data["sysDate"] = this.sysDate ? this.sysDate.toISOString() : <any>undefined;
        data["ghichu"] = this.ghichu;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        return data; 
    }
}

export interface IViewRungDto {
    idrung?: string | undefined;
    loaicayrung?: string | undefined;
    dientich?: number | undefined;
    idngtaolap?: string | undefined;
    tennguongoctaolap?: string | undefined;
    sysDate?: Date | undefined;
    ghichu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
}

export class ViewCaylaunamDto implements IViewCaylaunamDto {
    idcaylaunam?: string | undefined;
    loaicaylaunam?: string | undefined;
    dientich?: number | undefined;
    sysDate?: Date | undefined;
    ghichu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;

    constructor(data?: IViewCaylaunamDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idcaylaunam = _data["idcaylaunam"];
            this.loaicaylaunam = _data["loaicaylaunam"];
            this.dientich = _data["dientich"];
            this.sysDate = _data["sysDate"] ? new Date(_data["sysDate"].toString()) : <any>undefined;
            this.ghichu = _data["ghichu"];
            this.daxoa = _data["daxoa"];
            this.capNhat = _data["capNhat"];
        }
    }

    static fromJS(data: any): ViewCaylaunamDto {
        data = typeof data === 'object' ? data : {};
        let result = new ViewCaylaunamDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idcaylaunam"] = this.idcaylaunam;
        data["loaicaylaunam"] = this.loaicaylaunam;
        data["dientich"] = this.dientich;
        data["sysDate"] = this.sysDate ? this.sysDate.toISOString() : <any>undefined;
        data["ghichu"] = this.ghichu;
        data["daxoa"] = this.daxoa;
        data["capNhat"] = this.capNhat;
        return data; 
    }
}

export interface IViewCaylaunamDto {
    idcaylaunam?: string | undefined;
    loaicaylaunam?: string | undefined;
    dientich?: number | undefined;
    sysDate?: Date | undefined;
    ghichu?: string | undefined;
    daxoa?: number | undefined;
    capNhat?: number | undefined;
}

export class SearchViewDangKyNangCaoQuery implements ISearchViewDangKyNangCaoQuery {
    tuKhoa?: string | undefined;
    idDvhc?: string | undefined;
    idLoaiBienDong?: string | undefined;
    ngayBatDau?: string | undefined;
    ngayKetThuc?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    pageSize?: number;
    curentPage?: number;
    sortColumn?: string | undefined;
    searchExactly?: boolean;

    constructor(data?: ISearchViewDangKyNangCaoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tuKhoa = _data["tuKhoa"];
            this.idDvhc = _data["idDvhc"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.ngayBatDau = _data["ngayBatDau"];
            this.ngayKetThuc = _data["ngayKetThuc"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.pageSize = _data["pageSize"];
            this.curentPage = _data["curentPage"];
            this.sortColumn = _data["sortColumn"];
            this.searchExactly = _data["searchExactly"];
        }
    }

    static fromJS(data: any): SearchViewDangKyNangCaoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchViewDangKyNangCaoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuKhoa"] = this.tuKhoa;
        data["idDvhc"] = this.idDvhc;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["ngayBatDau"] = this.ngayBatDau;
        data["ngayKetThuc"] = this.ngayKetThuc;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["pageSize"] = this.pageSize;
        data["curentPage"] = this.curentPage;
        data["sortColumn"] = this.sortColumn;
        data["searchExactly"] = this.searchExactly;
        return data; 
    }
}

export interface ISearchViewDangKyNangCaoQuery {
    tuKhoa?: string | undefined;
    idDvhc?: string | undefined;
    idLoaiBienDong?: string | undefined;
    ngayBatDau?: string | undefined;
    ngayKetThuc?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    pageSize?: number;
    curentPage?: number;
    sortColumn?: string | undefined;
    searchExactly?: boolean;
}

export class ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm implements IApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchViewBienDongNangCaoItemVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfSearchViewBienDongNangCaoItemVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfSearchViewBienDongNangCaoItemVm {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfSearchViewBienDongNangCaoItemVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfSearchViewBienDongNangCaoItemVm implements IPagedListOfSearchViewBienDongNangCaoItemVm {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchViewBienDongNangCaoItemVm[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfSearchViewBienDongNangCaoItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(SearchViewBienDongNangCaoItemVm.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfSearchViewBienDongNangCaoItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfSearchViewBienDongNangCaoItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfSearchViewBienDongNangCaoItemVm {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: SearchViewBienDongNangCaoItemVm[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class SearchViewBienDongNangCaoItemVm implements ISearchViewBienDongNangCaoItemVm {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    idDvhc?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    thoiGian?: Date | undefined;
    ngayDangKy?: Date | undefined;
    ngayBienDong?: number;
    sortTime?: number;
    capGiaiQuyet?: string | undefined;
    noiGiaiQuyet?: string | undefined;
    noiDungDdSdc?: string | undefined;
    noiDungBdSmk?: string | undefined;
    noiDungBdSbd?: string | undefined;
    noiDungBdScg?: string | undefined;
    lyDoBd?: string | undefined;
    soQuyetDinh?: string | undefined;
    ngayQuyetDinh?: Date | undefined;
    nguoiKy?: string | undefined;
    thoiHan?: number | undefined;
    maHoSo?: string | undefined;
    maTraCuu?: string | undefined;
    coChinhLyBanDo?: number | undefined;
    noiDungGhiGCN?: string | undefined;
    tenDangNhap?: string | undefined;
    ngayKyTrang4?: Date | undefined;
    nguoiKyTrang4?: string | undefined;
    status?: number | undefined;
    sysDtime?: Date | undefined;
    paraTinh?: string | undefined;
    idHoSo?: string | undefined;
    benNhan?: string | undefined;
    dangKyTruocBienDong?: HSDKQSDDDto[] | undefined;
    dangKySauBienDong?: HSDKQSDDDto[] | undefined;
    thuaDatTruocBienDong?: ViewThuadatDto[] | undefined;
    thuaDatSauBienDong?: ViewThuadatDto[] | undefined;
    soToSbd?: string | undefined;
    soThuaSbd?: string | undefined;

    constructor(data?: ISearchViewBienDongNangCaoItemVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBienDong = _data["idBienDong"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.tenLoaiBienDong = _data["tenLoaiBienDong"];
            this.idDvhc = _data["idDvhc"];
            this.idHuyen = _data["idHuyen"];
            this.idTinh = _data["idTinh"];
            this.thoiGian = _data["thoiGian"] ? new Date(_data["thoiGian"].toString()) : <any>undefined;
            this.ngayDangKy = _data["ngayDangKy"] ? new Date(_data["ngayDangKy"].toString()) : <any>undefined;
            this.ngayBienDong = _data["ngayBienDong"];
            this.sortTime = _data["sortTime"];
            this.capGiaiQuyet = _data["capGiaiQuyet"];
            this.noiGiaiQuyet = _data["noiGiaiQuyet"];
            this.noiDungDdSdc = _data["noiDungDdSdc"];
            this.noiDungBdSmk = _data["noiDungBdSmk"];
            this.noiDungBdSbd = _data["noiDungBdSbd"];
            this.noiDungBdScg = _data["noiDungBdScg"];
            this.lyDoBd = _data["lyDoBd"];
            this.soQuyetDinh = _data["soQuyetDinh"];
            this.ngayQuyetDinh = _data["ngayQuyetDinh"] ? new Date(_data["ngayQuyetDinh"].toString()) : <any>undefined;
            this.nguoiKy = _data["nguoiKy"];
            this.thoiHan = _data["thoiHan"];
            this.maHoSo = _data["maHoSo"];
            this.maTraCuu = _data["maTraCuu"];
            this.coChinhLyBanDo = _data["coChinhLyBanDo"];
            this.noiDungGhiGCN = _data["noiDungGhiGCN"];
            this.tenDangNhap = _data["tenDangNhap"];
            this.ngayKyTrang4 = _data["ngayKyTrang4"] ? new Date(_data["ngayKyTrang4"].toString()) : <any>undefined;
            this.nguoiKyTrang4 = _data["nguoiKyTrang4"];
            this.status = _data["status"];
            this.sysDtime = _data["sysDtime"] ? new Date(_data["sysDtime"].toString()) : <any>undefined;
            this.paraTinh = _data["paraTinh"];
            this.idHoSo = _data["idHoSo"];
            this.benNhan = _data["benNhan"];
            if (Array.isArray(_data["dangKyTruocBienDong"])) {
                this.dangKyTruocBienDong = [] as any;
                for (let item of _data["dangKyTruocBienDong"])
                    this.dangKyTruocBienDong!.push(HSDKQSDDDto.fromJS(item));
            }
            if (Array.isArray(_data["dangKySauBienDong"])) {
                this.dangKySauBienDong = [] as any;
                for (let item of _data["dangKySauBienDong"])
                    this.dangKySauBienDong!.push(HSDKQSDDDto.fromJS(item));
            }
            if (Array.isArray(_data["thuaDatTruocBienDong"])) {
                this.thuaDatTruocBienDong = [] as any;
                for (let item of _data["thuaDatTruocBienDong"])
                    this.thuaDatTruocBienDong!.push(ViewThuadatDto.fromJS(item));
            }
            if (Array.isArray(_data["thuaDatSauBienDong"])) {
                this.thuaDatSauBienDong = [] as any;
                for (let item of _data["thuaDatSauBienDong"])
                    this.thuaDatSauBienDong!.push(ViewThuadatDto.fromJS(item));
            }
            this.soToSbd = _data["soToSbd"];
            this.soThuaSbd = _data["soThuaSbd"];
        }
    }

    static fromJS(data: any): SearchViewBienDongNangCaoItemVm {
        data = typeof data === 'object' ? data : {};
        let result = new SearchViewBienDongNangCaoItemVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBienDong"] = this.idBienDong;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["tenLoaiBienDong"] = this.tenLoaiBienDong;
        data["idDvhc"] = this.idDvhc;
        data["idHuyen"] = this.idHuyen;
        data["idTinh"] = this.idTinh;
        data["thoiGian"] = this.thoiGian ? this.thoiGian.toISOString() : <any>undefined;
        data["ngayDangKy"] = this.ngayDangKy ? this.ngayDangKy.toISOString() : <any>undefined;
        data["ngayBienDong"] = this.ngayBienDong;
        data["sortTime"] = this.sortTime;
        data["capGiaiQuyet"] = this.capGiaiQuyet;
        data["noiGiaiQuyet"] = this.noiGiaiQuyet;
        data["noiDungDdSdc"] = this.noiDungDdSdc;
        data["noiDungBdSmk"] = this.noiDungBdSmk;
        data["noiDungBdSbd"] = this.noiDungBdSbd;
        data["noiDungBdScg"] = this.noiDungBdScg;
        data["lyDoBd"] = this.lyDoBd;
        data["soQuyetDinh"] = this.soQuyetDinh;
        data["ngayQuyetDinh"] = this.ngayQuyetDinh ? this.ngayQuyetDinh.toISOString() : <any>undefined;
        data["nguoiKy"] = this.nguoiKy;
        data["thoiHan"] = this.thoiHan;
        data["maHoSo"] = this.maHoSo;
        data["maTraCuu"] = this.maTraCuu;
        data["coChinhLyBanDo"] = this.coChinhLyBanDo;
        data["noiDungGhiGCN"] = this.noiDungGhiGCN;
        data["tenDangNhap"] = this.tenDangNhap;
        data["ngayKyTrang4"] = this.ngayKyTrang4 ? this.ngayKyTrang4.toISOString() : <any>undefined;
        data["nguoiKyTrang4"] = this.nguoiKyTrang4;
        data["status"] = this.status;
        data["sysDtime"] = this.sysDtime ? this.sysDtime.toISOString() : <any>undefined;
        data["paraTinh"] = this.paraTinh;
        data["idHoSo"] = this.idHoSo;
        data["benNhan"] = this.benNhan;
        if (Array.isArray(this.dangKyTruocBienDong)) {
            data["dangKyTruocBienDong"] = [];
            for (let item of this.dangKyTruocBienDong)
                data["dangKyTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.dangKySauBienDong)) {
            data["dangKySauBienDong"] = [];
            for (let item of this.dangKySauBienDong)
                data["dangKySauBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.thuaDatTruocBienDong)) {
            data["thuaDatTruocBienDong"] = [];
            for (let item of this.thuaDatTruocBienDong)
                data["thuaDatTruocBienDong"].push(item.toJSON());
        }
        if (Array.isArray(this.thuaDatSauBienDong)) {
            data["thuaDatSauBienDong"] = [];
            for (let item of this.thuaDatSauBienDong)
                data["thuaDatSauBienDong"].push(item.toJSON());
        }
        data["soToSbd"] = this.soToSbd;
        data["soThuaSbd"] = this.soThuaSbd;
        return data; 
    }
}

export interface ISearchViewBienDongNangCaoItemVm {
    idBienDong?: string | undefined;
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    idDvhc?: string | undefined;
    idHuyen?: string | undefined;
    idTinh?: string | undefined;
    thoiGian?: Date | undefined;
    ngayDangKy?: Date | undefined;
    ngayBienDong?: number;
    sortTime?: number;
    capGiaiQuyet?: string | undefined;
    noiGiaiQuyet?: string | undefined;
    noiDungDdSdc?: string | undefined;
    noiDungBdSmk?: string | undefined;
    noiDungBdSbd?: string | undefined;
    noiDungBdScg?: string | undefined;
    lyDoBd?: string | undefined;
    soQuyetDinh?: string | undefined;
    ngayQuyetDinh?: Date | undefined;
    nguoiKy?: string | undefined;
    thoiHan?: number | undefined;
    maHoSo?: string | undefined;
    maTraCuu?: string | undefined;
    coChinhLyBanDo?: number | undefined;
    noiDungGhiGCN?: string | undefined;
    tenDangNhap?: string | undefined;
    ngayKyTrang4?: Date | undefined;
    nguoiKyTrang4?: string | undefined;
    status?: number | undefined;
    sysDtime?: Date | undefined;
    paraTinh?: string | undefined;
    idHoSo?: string | undefined;
    benNhan?: string | undefined;
    dangKyTruocBienDong?: HSDKQSDDDto[] | undefined;
    dangKySauBienDong?: HSDKQSDDDto[] | undefined;
    thuaDatTruocBienDong?: ViewThuadatDto[] | undefined;
    thuaDatSauBienDong?: ViewThuadatDto[] | undefined;
    soToSbd?: string | undefined;
    soThuaSbd?: string | undefined;
}

export class SearchViewBienDongNangCaoQuery implements ISearchViewBienDongNangCaoQuery {
    tuKhoa?: string | undefined;
    idDvhc?: string | undefined;
    idLoaiBienDong?: string | undefined;
    ngayBatDau?: string | undefined;
    ngayKetThuc?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    capGiaiQuyet?: string | undefined;
    pageSize?: number;
    curentPage?: number;
    sortColumn?: string | undefined;
    searchExactly?: boolean;

    constructor(data?: ISearchViewBienDongNangCaoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tuKhoa = _data["tuKhoa"];
            this.idDvhc = _data["idDvhc"];
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.ngayBatDau = _data["ngayBatDau"];
            this.ngayKetThuc = _data["ngayKetThuc"];
            this.soTo = _data["soTo"];
            this.soThua = _data["soThua"];
            this.capGiaiQuyet = _data["capGiaiQuyet"];
            this.pageSize = _data["pageSize"];
            this.curentPage = _data["curentPage"];
            this.sortColumn = _data["sortColumn"];
            this.searchExactly = _data["searchExactly"];
        }
    }

    static fromJS(data: any): SearchViewBienDongNangCaoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new SearchViewBienDongNangCaoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuKhoa"] = this.tuKhoa;
        data["idDvhc"] = this.idDvhc;
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["ngayBatDau"] = this.ngayBatDau;
        data["ngayKetThuc"] = this.ngayKetThuc;
        data["soTo"] = this.soTo;
        data["soThua"] = this.soThua;
        data["capGiaiQuyet"] = this.capGiaiQuyet;
        data["pageSize"] = this.pageSize;
        data["curentPage"] = this.curentPage;
        data["sortColumn"] = this.sortColumn;
        data["searchExactly"] = this.searchExactly;
        return data; 
    }
}

export interface ISearchViewBienDongNangCaoQuery {
    tuKhoa?: string | undefined;
    idDvhc?: string | undefined;
    idLoaiBienDong?: string | undefined;
    ngayBatDau?: string | undefined;
    ngayKetThuc?: string | undefined;
    soTo?: string | undefined;
    soThua?: string | undefined;
    capGiaiQuyet?: string | undefined;
    pageSize?: number;
    curentPage?: number;
    sortColumn?: string | undefined;
    searchExactly?: boolean;
}

export class ApiResultOfIListOfGetTrangThaiThuaDatListDto implements IApiResultOfIListOfGetTrangThaiThuaDatListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetTrangThaiThuaDatListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetTrangThaiThuaDatListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetTrangThaiThuaDatListDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetTrangThaiThuaDatListDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetTrangThaiThuaDatListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetTrangThaiThuaDatListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetTrangThaiThuaDatListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetTrangThaiThuaDatListDto implements IGetTrangThaiThuaDatListDto {
    idTrangThai?: string | undefined;
    maTrangThai?: string | undefined;
    tenTrangThai?: string | undefined;

    constructor(data?: IGetTrangThaiThuaDatListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idTrangThai = _data["idTrangThai"];
            this.maTrangThai = _data["maTrangThai"];
            this.tenTrangThai = _data["tenTrangThai"];
        }
    }

    static fromJS(data: any): GetTrangThaiThuaDatListDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetTrangThaiThuaDatListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idTrangThai"] = this.idTrangThai;
        data["maTrangThai"] = this.maTrangThai;
        data["tenTrangThai"] = this.tenTrangThai;
        return data; 
    }
}

export interface IGetTrangThaiThuaDatListDto {
    idTrangThai?: string | undefined;
    maTrangThai?: string | undefined;
    tenTrangThai?: string | undefined;
}

export class ApiResultOfIListOfGetDoiTuongSuDungListDto implements IApiResultOfIListOfGetDoiTuongSuDungListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDoiTuongSuDungListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetDoiTuongSuDungListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetDoiTuongSuDungListDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetDoiTuongSuDungListDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetDoiTuongSuDungListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetDoiTuongSuDungListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetDoiTuongSuDungListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetDoiTuongSuDungListDto implements IGetDoiTuongSuDungListDto {
    idDoiTuongSD?: string | undefined;
    tenDoiTuong?: string | undefined;
    kyHieu?: string | undefined;

    constructor(data?: IGetDoiTuongSuDungListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDoiTuongSD = _data["idDoiTuongSD"];
            this.tenDoiTuong = _data["tenDoiTuong"];
            this.kyHieu = _data["kyHieu"];
        }
    }

    static fromJS(data: any): GetDoiTuongSuDungListDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetDoiTuongSuDungListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDoiTuongSD"] = this.idDoiTuongSD;
        data["tenDoiTuong"] = this.tenDoiTuong;
        data["kyHieu"] = this.kyHieu;
        return data; 
    }
}

export interface IGetDoiTuongSuDungListDto {
    idDoiTuongSD?: string | undefined;
    tenDoiTuong?: string | undefined;
    kyHieu?: string | undefined;
}

export class ApiResultOfIListOfGetMucDichSuDungSuDungListDto implements IApiResultOfIListOfGetMucDichSuDungSuDungListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetMucDichSuDungSuDungListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetMucDichSuDungSuDungListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetMucDichSuDungSuDungListDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetMucDichSuDungSuDungListDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetMucDichSuDungSuDungListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetMucDichSuDungSuDungListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetMucDichSuDungSuDungListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetMucDichSuDungSuDungListDto implements IGetMucDichSuDungSuDungListDto {
    idMucDichSDD?: string | undefined;
    tenMDSDD?: string | undefined;
    kyHieu?: string | undefined;

    constructor(data?: IGetMucDichSuDungSuDungListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idMucDichSDD = _data["idMucDichSDD"];
            this.tenMDSDD = _data["tenMDSDD"];
            this.kyHieu = _data["kyHieu"];
        }
    }

    static fromJS(data: any): GetMucDichSuDungSuDungListDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetMucDichSuDungSuDungListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idMucDichSDD"] = this.idMucDichSDD;
        data["tenMDSDD"] = this.tenMDSDD;
        data["kyHieu"] = this.kyHieu;
        return data; 
    }
}

export interface IGetMucDichSuDungSuDungListDto {
    idMucDichSDD?: string | undefined;
    tenMDSDD?: string | undefined;
    kyHieu?: string | undefined;
}

export class ApiResultOfIListOfGetHinhThucSuDungListDto implements IApiResultOfIListOfGetHinhThucSuDungListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetHinhThucSuDungListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGetHinhThucSuDungListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GetHinhThucSuDungListDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGetHinhThucSuDungListDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGetHinhThucSuDungListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGetHinhThucSuDungListDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetHinhThucSuDungListDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetHinhThucSuDungListDto implements IGetHinhThucSuDungListDto {
    idHinhThucSD?: string | undefined;
    ten?: string | undefined;

    constructor(data?: IGetHinhThucSuDungListDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHinhThucSD = _data["idHinhThucSD"];
            this.ten = _data["ten"];
        }
    }

    static fromJS(data: any): GetHinhThucSuDungListDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetHinhThucSuDungListDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHinhThucSD"] = this.idHinhThucSD;
        data["ten"] = this.ten;
        return data; 
    }
}

export interface IGetHinhThucSuDungListDto {
    idHinhThucSD?: string | undefined;
    ten?: string | undefined;
}

export class ApiResultOfIListOfGiayChungNhanDto implements IApiResultOfIListOfGiayChungNhanDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GiayChungNhanDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGiayChungNhanDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GiayChungNhanDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGiayChungNhanDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGiayChungNhanDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGiayChungNhanDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GiayChungNhanDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GiayChungNhanDto implements IGiayChungNhanDto {
    codegcn?: number | undefined;
    loaigcn?: string | undefined;
    daxoa?: number | undefined;
    idgcntaisan?: string | undefined;
    luotcap?: string | undefined;
    jsongcn?: string | undefined;
    parmatinh?: string | undefined;
    sophathanh?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    mavach?: string | undefined;
    ngaycapgcn?: string | undefined;
    thangcapgcn?: string | undefined;
    namcapgcn?: string | undefined;
    ngayvaoso?: Date | undefined;
    ngayky?: Date | undefined;
    nguoiky?: string | undefined;
    ngaynhan?: Date | undefined;
    nguoinhan?: string | undefined;
    mahsgoc?: string | undefined;
    ghichugcn2?: string | undefined;
    ghichugcn1?: string | undefined;
    idqldotcap?: string | undefined;
    tsdangkytaisan?: any[] | undefined;

    constructor(data?: IGiayChungNhanDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.codegcn = _data["codegcn"];
            this.loaigcn = _data["loaigcn"];
            this.daxoa = _data["daxoa"];
            this.idgcntaisan = _data["idgcntaisan"];
            this.luotcap = _data["luotcap"];
            this.jsongcn = _data["jsongcn"];
            this.parmatinh = _data["parmatinh"];
            this.sophathanh = _data["sophathanh"];
            this.sovaoso1 = _data["sovaoso1"];
            this.sovaoso2 = _data["sovaoso2"];
            this.mavach = _data["mavach"];
            this.ngaycapgcn = _data["ngaycapgcn"];
            this.thangcapgcn = _data["thangcapgcn"];
            this.namcapgcn = _data["namcapgcn"];
            this.ngayvaoso = _data["ngayvaoso"] ? new Date(_data["ngayvaoso"].toString()) : <any>undefined;
            this.ngayky = _data["ngayky"] ? new Date(_data["ngayky"].toString()) : <any>undefined;
            this.nguoiky = _data["nguoiky"];
            this.ngaynhan = _data["ngaynhan"] ? new Date(_data["ngaynhan"].toString()) : <any>undefined;
            this.nguoinhan = _data["nguoinhan"];
            this.mahsgoc = _data["mahsgoc"];
            this.ghichugcn2 = _data["ghichugcn2"];
            this.ghichugcn1 = _data["ghichugcn1"];
            this.idqldotcap = _data["idqldotcap"];
            if (Array.isArray(_data["tsdangkytaisan"])) {
                this.tsdangkytaisan = [] as any;
                for (let item of _data["tsdangkytaisan"])
                    this.tsdangkytaisan!.push(item);
            }
        }
    }

    static fromJS(data: any): GiayChungNhanDto {
        data = typeof data === 'object' ? data : {};
        let result = new GiayChungNhanDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["codegcn"] = this.codegcn;
        data["loaigcn"] = this.loaigcn;
        data["daxoa"] = this.daxoa;
        data["idgcntaisan"] = this.idgcntaisan;
        data["luotcap"] = this.luotcap;
        data["jsongcn"] = this.jsongcn;
        data["parmatinh"] = this.parmatinh;
        data["sophathanh"] = this.sophathanh;
        data["sovaoso1"] = this.sovaoso1;
        data["sovaoso2"] = this.sovaoso2;
        data["mavach"] = this.mavach;
        data["ngaycapgcn"] = this.ngaycapgcn;
        data["thangcapgcn"] = this.thangcapgcn;
        data["namcapgcn"] = this.namcapgcn;
        data["ngayvaoso"] = this.ngayvaoso ? this.ngayvaoso.toISOString() : <any>undefined;
        data["ngayky"] = this.ngayky ? this.ngayky.toISOString() : <any>undefined;
        data["nguoiky"] = this.nguoiky;
        data["ngaynhan"] = this.ngaynhan ? this.ngaynhan.toISOString() : <any>undefined;
        data["nguoinhan"] = this.nguoinhan;
        data["mahsgoc"] = this.mahsgoc;
        data["ghichugcn2"] = this.ghichugcn2;
        data["ghichugcn1"] = this.ghichugcn1;
        data["idqldotcap"] = this.idqldotcap;
        if (Array.isArray(this.tsdangkytaisan)) {
            data["tsdangkytaisan"] = [];
            for (let item of this.tsdangkytaisan)
                data["tsdangkytaisan"].push(item);
        }
        return data; 
    }
}

export interface IGiayChungNhanDto {
    codegcn?: number | undefined;
    loaigcn?: string | undefined;
    daxoa?: number | undefined;
    idgcntaisan?: string | undefined;
    luotcap?: string | undefined;
    jsongcn?: string | undefined;
    parmatinh?: string | undefined;
    sophathanh?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    mavach?: string | undefined;
    ngaycapgcn?: string | undefined;
    thangcapgcn?: string | undefined;
    namcapgcn?: string | undefined;
    ngayvaoso?: Date | undefined;
    ngayky?: Date | undefined;
    nguoiky?: string | undefined;
    ngaynhan?: Date | undefined;
    nguoinhan?: string | undefined;
    mahsgoc?: string | undefined;
    ghichugcn2?: string | undefined;
    ghichugcn1?: string | undefined;
    idqldotcap?: string | undefined;
    tsdangkytaisan?: any[] | undefined;
}

export class GetDSGiayChungNhanQuery implements IGetDSGiayChungNhanQuery {
    idhoso?: string | undefined;
    idchusudung?: string | undefined;
    idchusdthuadat?: string | undefined;

    constructor(data?: IGetDSGiayChungNhanQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idhoso = _data["idhoso"];
            this.idchusudung = _data["idchusudung"];
            this.idchusdthuadat = _data["idchusdthuadat"];
        }
    }

    static fromJS(data: any): GetDSGiayChungNhanQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetDSGiayChungNhanQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idhoso"] = this.idhoso;
        data["idchusudung"] = this.idchusudung;
        data["idchusdthuadat"] = this.idchusdthuadat;
        return data; 
    }
}

export interface IGetDSGiayChungNhanQuery {
    idhoso?: string | undefined;
    idchusudung?: string | undefined;
    idchusdthuadat?: string | undefined;
}

export class ApiResultOfIListOfGcnSauBienDongDto implements IApiResultOfIListOfGcnSauBienDongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GcnSauBienDongDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfGcnSauBienDongDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(GcnSauBienDongDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfGcnSauBienDongDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfGcnSauBienDongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfGcnSauBienDongDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GcnSauBienDongDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GcnSauBienDongDto extends GiayChungNhanDto implements IGcnSauBienDongDto {
    idgcn?: string | undefined;

    constructor(data?: IGcnSauBienDongDto) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idgcn = _data["idgcn"];
        }
    }

    static fromJS(data: any): GcnSauBienDongDto {
        data = typeof data === 'object' ? data : {};
        let result = new GcnSauBienDongDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idgcn"] = this.idgcn;
        super.toJSON(data);
        return data; 
    }
}

export interface IGcnSauBienDongDto extends IGiayChungNhanDto {
    idgcn?: string | undefined;
}

export class GetDSGiayChungNhanSBDQuery implements IGetDSGiayChungNhanSBDQuery {
    idhoso?: string | undefined;
    idchusudung?: string | undefined;
    idchusdthuadat?: string | undefined;

    constructor(data?: IGetDSGiayChungNhanSBDQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idhoso = _data["idhoso"];
            this.idchusudung = _data["idchusudung"];
            this.idchusdthuadat = _data["idchusdthuadat"];
        }
    }

    static fromJS(data: any): GetDSGiayChungNhanSBDQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetDSGiayChungNhanSBDQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idhoso"] = this.idhoso;
        data["idchusudung"] = this.idchusudung;
        data["idchusdthuadat"] = this.idchusdthuadat;
        return data; 
    }
}

export interface IGetDSGiayChungNhanSBDQuery {
    idhoso?: string | undefined;
    idchusudung?: string | undefined;
    idchusdthuadat?: string | undefined;
}

export class ApiResultOfTrichLucDto implements IApiResultOfTrichLucDto {
    isError?: boolean;
    message?: string | undefined;
    data?: TrichLucDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfTrichLucDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? TrichLucDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfTrichLucDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfTrichLucDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfTrichLucDto {
    isError?: boolean;
    message?: string | undefined;
    data?: TrichLucDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class TrichLucDto implements ITrichLucDto {
    chusd?: Ochusudung | undefined;
    chuvc?: Ochusudung | undefined;
    nguoilq?: Ochusudung[] | undefined;
    listchudongsudung?: Ochusudung[] | undefined;
    listthua?: OthuaTrichLuc[] | undefined;
    loaichu?: string | undefined;
    ghichutrang1?: string | undefined;
    ghichutrang2?: string | undefined;
    mavach?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    soserial?: string | undefined;
    mahoso?: string | undefined;
    namcap?: string | undefined;
    soquyetdinh?: string | undefined;
    taisan?: Otaisans | undefined;
    dong1?: string | undefined;
    dong2?: string | undefined;
    dong3?: string | undefined;
    dong4?: string | undefined;
    dong5?: string | undefined;
    dong6?: string | undefined;
    dong7?: string | undefined;
    checkCmnd?: string | undefined;
    loaicapgiay?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    maxa?: string | undefined;
    tenxa?: string | undefined;
    iddvhctinh?: string | undefined;
    iddvhchuyen?: string | undefined;
    iddvhcxa?: string | undefined;
    cauhinh?: Cauhinh | undefined;

    constructor(data?: ITrichLucDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.chusd = _data["chusd"] ? Ochusudung.fromJS(_data["chusd"]) : <any>undefined;
            this.chuvc = _data["chuvc"] ? Ochusudung.fromJS(_data["chuvc"]) : <any>undefined;
            if (Array.isArray(_data["nguoilq"])) {
                this.nguoilq = [] as any;
                for (let item of _data["nguoilq"])
                    this.nguoilq!.push(Ochusudung.fromJS(item));
            }
            if (Array.isArray(_data["listchudongsudung"])) {
                this.listchudongsudung = [] as any;
                for (let item of _data["listchudongsudung"])
                    this.listchudongsudung!.push(Ochusudung.fromJS(item));
            }
            if (Array.isArray(_data["listthua"])) {
                this.listthua = [] as any;
                for (let item of _data["listthua"])
                    this.listthua!.push(OthuaTrichLuc.fromJS(item));
            }
            this.loaichu = _data["loaichu"];
            this.ghichutrang1 = _data["ghichutrang1"];
            this.ghichutrang2 = _data["ghichutrang2"];
            this.mavach = _data["mavach"];
            this.sovaoso1 = _data["sovaoso1"];
            this.sovaoso2 = _data["sovaoso2"];
            this.soserial = _data["soserial"];
            this.mahoso = _data["mahoso"];
            this.namcap = _data["namcap"];
            this.soquyetdinh = _data["soquyetdinh"];
            this.taisan = _data["taisan"] ? Otaisans.fromJS(_data["taisan"]) : <any>undefined;
            this.dong1 = _data["dong1"];
            this.dong2 = _data["dong2"];
            this.dong3 = _data["dong3"];
            this.dong4 = _data["dong4"];
            this.dong5 = _data["dong5"];
            this.dong6 = _data["dong6"];
            this.dong7 = _data["dong7"];
            this.checkCmnd = _data["checkCmnd"];
            this.loaicapgiay = _data["loaicapgiay"];
            this.matinh = _data["matinh"];
            this.mahuyen = _data["mahuyen"];
            this.tentinh = _data["tentinh"];
            this.tenhuyen = _data["tenhuyen"];
            this.maxa = _data["maxa"];
            this.tenxa = _data["tenxa"];
            this.iddvhctinh = _data["iddvhctinh"];
            this.iddvhchuyen = _data["iddvhchuyen"];
            this.iddvhcxa = _data["iddvhcxa"];
            this.cauhinh = _data["cauhinh"] ? Cauhinh.fromJS(_data["cauhinh"]) : <any>undefined;
        }
    }

    static fromJS(data: any): TrichLucDto {
        data = typeof data === 'object' ? data : {};
        let result = new TrichLucDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["chusd"] = this.chusd ? this.chusd.toJSON() : <any>undefined;
        data["chuvc"] = this.chuvc ? this.chuvc.toJSON() : <any>undefined;
        if (Array.isArray(this.nguoilq)) {
            data["nguoilq"] = [];
            for (let item of this.nguoilq)
                data["nguoilq"].push(item.toJSON());
        }
        if (Array.isArray(this.listchudongsudung)) {
            data["listchudongsudung"] = [];
            for (let item of this.listchudongsudung)
                data["listchudongsudung"].push(item.toJSON());
        }
        if (Array.isArray(this.listthua)) {
            data["listthua"] = [];
            for (let item of this.listthua)
                data["listthua"].push(item.toJSON());
        }
        data["loaichu"] = this.loaichu;
        data["ghichutrang1"] = this.ghichutrang1;
        data["ghichutrang2"] = this.ghichutrang2;
        data["mavach"] = this.mavach;
        data["sovaoso1"] = this.sovaoso1;
        data["sovaoso2"] = this.sovaoso2;
        data["soserial"] = this.soserial;
        data["mahoso"] = this.mahoso;
        data["namcap"] = this.namcap;
        data["soquyetdinh"] = this.soquyetdinh;
        data["taisan"] = this.taisan ? this.taisan.toJSON() : <any>undefined;
        data["dong1"] = this.dong1;
        data["dong2"] = this.dong2;
        data["dong3"] = this.dong3;
        data["dong4"] = this.dong4;
        data["dong5"] = this.dong5;
        data["dong6"] = this.dong6;
        data["dong7"] = this.dong7;
        data["checkCmnd"] = this.checkCmnd;
        data["loaicapgiay"] = this.loaicapgiay;
        data["matinh"] = this.matinh;
        data["mahuyen"] = this.mahuyen;
        data["tentinh"] = this.tentinh;
        data["tenhuyen"] = this.tenhuyen;
        data["maxa"] = this.maxa;
        data["tenxa"] = this.tenxa;
        data["iddvhctinh"] = this.iddvhctinh;
        data["iddvhchuyen"] = this.iddvhchuyen;
        data["iddvhcxa"] = this.iddvhcxa;
        data["cauhinh"] = this.cauhinh ? this.cauhinh.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ITrichLucDto {
    chusd?: Ochusudung | undefined;
    chuvc?: Ochusudung | undefined;
    nguoilq?: Ochusudung[] | undefined;
    listchudongsudung?: Ochusudung[] | undefined;
    listthua?: OthuaTrichLuc[] | undefined;
    loaichu?: string | undefined;
    ghichutrang1?: string | undefined;
    ghichutrang2?: string | undefined;
    mavach?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    soserial?: string | undefined;
    mahoso?: string | undefined;
    namcap?: string | undefined;
    soquyetdinh?: string | undefined;
    taisan?: Otaisans | undefined;
    dong1?: string | undefined;
    dong2?: string | undefined;
    dong3?: string | undefined;
    dong4?: string | undefined;
    dong5?: string | undefined;
    dong6?: string | undefined;
    dong7?: string | undefined;
    checkCmnd?: string | undefined;
    loaicapgiay?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    maxa?: string | undefined;
    tenxa?: string | undefined;
    iddvhctinh?: string | undefined;
    iddvhchuyen?: string | undefined;
    iddvhcxa?: string | undefined;
    cauhinh?: Cauhinh | undefined;
}

export class Ochusudung implements IOchusudung {
    hoa?: boolean;
    dam?: boolean;
    diachi2dong?: boolean;
    ten?: string | undefined;
    ho?: string | undefined;
    gioitinh?: string | undefined;
    namsinh?: string | undefined;
    cmnd?: string | undefined;
    loaigiayto?: string | undefined;
    ngaycap?: string | undefined;
    noicap?: string | undefined;
    diachi?: string | undefined;
    diachihuyentinh?: string | undefined;
    loaichu?: string | undefined;
    idchusudung?: string | undefined;

    constructor(data?: IOchusudung) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoa = _data["hoa"];
            this.dam = _data["dam"];
            this.diachi2dong = _data["diachi2dong"];
            this.ten = _data["ten"];
            this.ho = _data["ho"];
            this.gioitinh = _data["gioitinh"];
            this.namsinh = _data["namsinh"];
            this.cmnd = _data["cmnd"];
            this.loaigiayto = _data["loaigiayto"];
            this.ngaycap = _data["ngaycap"];
            this.noicap = _data["noicap"];
            this.diachi = _data["diachi"];
            this.diachihuyentinh = _data["diachihuyentinh"];
            this.loaichu = _data["loaichu"];
            this.idchusudung = _data["idchusudung"];
        }
    }

    static fromJS(data: any): Ochusudung {
        data = typeof data === 'object' ? data : {};
        let result = new Ochusudung();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoa"] = this.hoa;
        data["dam"] = this.dam;
        data["diachi2dong"] = this.diachi2dong;
        data["ten"] = this.ten;
        data["ho"] = this.ho;
        data["gioitinh"] = this.gioitinh;
        data["namsinh"] = this.namsinh;
        data["cmnd"] = this.cmnd;
        data["loaigiayto"] = this.loaigiayto;
        data["ngaycap"] = this.ngaycap;
        data["noicap"] = this.noicap;
        data["diachi"] = this.diachi;
        data["diachihuyentinh"] = this.diachihuyentinh;
        data["loaichu"] = this.loaichu;
        data["idchusudung"] = this.idchusudung;
        return data; 
    }
}

export interface IOchusudung {
    hoa?: boolean;
    dam?: boolean;
    diachi2dong?: boolean;
    ten?: string | undefined;
    ho?: string | undefined;
    gioitinh?: string | undefined;
    namsinh?: string | undefined;
    cmnd?: string | undefined;
    loaigiayto?: string | undefined;
    ngaycap?: string | undefined;
    noicap?: string | undefined;
    diachi?: string | undefined;
    diachihuyentinh?: string | undefined;
    loaichu?: string | undefined;
    idchusudung?: string | undefined;
}

export class Othua implements IOthua {
    idthuadat?: string | undefined;
    sothua?: string | undefined;
    sothuaphu?: string | undefined;
    soto?: string | undefined;
    maxa?: string | undefined;
    tyle?: string | undefined;
    diachithua?: string | undefined;
    dientichthua?: number;
    dientichchung?: number;
    dientichrieng?: number;
    dientichbangchu?: string | undefined;
    hinhthucsdd?: string | undefined;
    loaihinhsohuu?: string | undefined;
    mucdich?: string | undefined;
    nguongoc?: string | undefined;
    thoihan?: string | undefined;
    loaidatchinh?: string | undefined;
    nhommucdich?: string | undefined;
    geojson?: string | undefined;
    listmd?: Omucdichsdd[] | undefined;
    listng?: Onguongocsdd[] | undefined;

    constructor(data?: IOthua) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idthuadat = _data["idthuadat"];
            this.sothua = _data["sothua"];
            this.sothuaphu = _data["sothuaphu"];
            this.soto = _data["soto"];
            this.maxa = _data["maxa"];
            this.tyle = _data["tyle"];
            this.diachithua = _data["diachithua"];
            this.dientichthua = _data["dientichthua"];
            this.dientichchung = _data["dientichchung"];
            this.dientichrieng = _data["dientichrieng"];
            this.dientichbangchu = _data["dientichbangchu"];
            this.hinhthucsdd = _data["hinhthucsdd"];
            this.loaihinhsohuu = _data["loaihinhsohuu"];
            this.mucdich = _data["mucdich"];
            this.nguongoc = _data["nguongoc"];
            this.thoihan = _data["thoihan"];
            this.loaidatchinh = _data["loaidatchinh"];
            this.nhommucdich = _data["nhommucdich"];
            this.geojson = _data["geojson"];
            if (Array.isArray(_data["listmd"])) {
                this.listmd = [] as any;
                for (let item of _data["listmd"])
                    this.listmd!.push(Omucdichsdd.fromJS(item));
            }
            if (Array.isArray(_data["listng"])) {
                this.listng = [] as any;
                for (let item of _data["listng"])
                    this.listng!.push(Onguongocsdd.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Othua {
        data = typeof data === 'object' ? data : {};
        let result = new Othua();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idthuadat"] = this.idthuadat;
        data["sothua"] = this.sothua;
        data["sothuaphu"] = this.sothuaphu;
        data["soto"] = this.soto;
        data["maxa"] = this.maxa;
        data["tyle"] = this.tyle;
        data["diachithua"] = this.diachithua;
        data["dientichthua"] = this.dientichthua;
        data["dientichchung"] = this.dientichchung;
        data["dientichrieng"] = this.dientichrieng;
        data["dientichbangchu"] = this.dientichbangchu;
        data["hinhthucsdd"] = this.hinhthucsdd;
        data["loaihinhsohuu"] = this.loaihinhsohuu;
        data["mucdich"] = this.mucdich;
        data["nguongoc"] = this.nguongoc;
        data["thoihan"] = this.thoihan;
        data["loaidatchinh"] = this.loaidatchinh;
        data["nhommucdich"] = this.nhommucdich;
        data["geojson"] = this.geojson;
        if (Array.isArray(this.listmd)) {
            data["listmd"] = [];
            for (let item of this.listmd)
                data["listmd"].push(item.toJSON());
        }
        if (Array.isArray(this.listng)) {
            data["listng"] = [];
            for (let item of this.listng)
                data["listng"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IOthua {
    idthuadat?: string | undefined;
    sothua?: string | undefined;
    sothuaphu?: string | undefined;
    soto?: string | undefined;
    maxa?: string | undefined;
    tyle?: string | undefined;
    diachithua?: string | undefined;
    dientichthua?: number;
    dientichchung?: number;
    dientichrieng?: number;
    dientichbangchu?: string | undefined;
    hinhthucsdd?: string | undefined;
    loaihinhsohuu?: string | undefined;
    mucdich?: string | undefined;
    nguongoc?: string | undefined;
    thoihan?: string | undefined;
    loaidatchinh?: string | undefined;
    nhommucdich?: string | undefined;
    geojson?: string | undefined;
    listmd?: Omucdichsdd[] | undefined;
    listng?: Onguongocsdd[] | undefined;
}

export class OthuaTrichLuc extends Othua implements IOthuaTrichLuc {
    trichlucjson?: string | undefined;
    trichlucthuadatjson?: string | undefined;

    constructor(data?: IOthuaTrichLuc) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.trichlucjson = _data["trichlucjson"];
            this.trichlucthuadatjson = _data["trichlucthuadatjson"];
        }
    }

    static fromJS(data: any): OthuaTrichLuc {
        data = typeof data === 'object' ? data : {};
        let result = new OthuaTrichLuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["trichlucjson"] = this.trichlucjson;
        data["trichlucthuadatjson"] = this.trichlucthuadatjson;
        super.toJSON(data);
        return data; 
    }
}

export interface IOthuaTrichLuc extends IOthua {
    trichlucjson?: string | undefined;
    trichlucthuadatjson?: string | undefined;
}

export class Omucdichsdd implements IOmucdichsdd {
    ten?: string | undefined;
    tenOrigin?: string | undefined;
    kyhieu?: string | undefined;
    dientichchung?: string | undefined;
    dientichrieng?: string | undefined;
    thoihan?: string | undefined;
    thoihanOrigin?: string | undefined;
    in2dong?: boolean;

    constructor(data?: IOmucdichsdd) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ten = _data["ten"];
            this.tenOrigin = _data["tenOrigin"];
            this.kyhieu = _data["kyhieu"];
            this.dientichchung = _data["dientichchung"];
            this.dientichrieng = _data["dientichrieng"];
            this.thoihan = _data["thoihan"];
            this.thoihanOrigin = _data["thoihanOrigin"];
            this.in2dong = _data["in2dong"];
        }
    }

    static fromJS(data: any): Omucdichsdd {
        data = typeof data === 'object' ? data : {};
        let result = new Omucdichsdd();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ten"] = this.ten;
        data["tenOrigin"] = this.tenOrigin;
        data["kyhieu"] = this.kyhieu;
        data["dientichchung"] = this.dientichchung;
        data["dientichrieng"] = this.dientichrieng;
        data["thoihan"] = this.thoihan;
        data["thoihanOrigin"] = this.thoihanOrigin;
        data["in2dong"] = this.in2dong;
        return data; 
    }
}

export interface IOmucdichsdd {
    ten?: string | undefined;
    tenOrigin?: string | undefined;
    kyhieu?: string | undefined;
    dientichchung?: string | undefined;
    dientichrieng?: string | undefined;
    thoihan?: string | undefined;
    thoihanOrigin?: string | undefined;
    in2dong?: boolean;
}

export class Onguongocsdd implements IOnguongocsdd {
    ten?: string | undefined;
    tenOrigin?: string | undefined;
    dientichchung?: string | undefined;
    dientichrieng?: string | undefined;
    kyhieu?: string | undefined;
    boolean?: boolean;

    constructor(data?: IOnguongocsdd) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ten = _data["ten"];
            this.tenOrigin = _data["tenOrigin"];
            this.dientichchung = _data["dientichchung"];
            this.dientichrieng = _data["dientichrieng"];
            this.kyhieu = _data["kyhieu"];
            this.boolean = _data["boolean"];
        }
    }

    static fromJS(data: any): Onguongocsdd {
        data = typeof data === 'object' ? data : {};
        let result = new Onguongocsdd();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ten"] = this.ten;
        data["tenOrigin"] = this.tenOrigin;
        data["dientichchung"] = this.dientichchung;
        data["dientichrieng"] = this.dientichrieng;
        data["kyhieu"] = this.kyhieu;
        data["boolean"] = this.boolean;
        return data; 
    }
}

export interface IOnguongocsdd {
    ten?: string | undefined;
    tenOrigin?: string | undefined;
    dientichchung?: string | undefined;
    dientichrieng?: string | undefined;
    kyhieu?: string | undefined;
    boolean?: boolean;
}

export class Otaisans implements IOtaisans {
    listnhaos?: Onhaos[] | undefined;
    listrungs?: Orungs[] | undefined;
    listct?: Ocongtrinh[] | undefined;
    listcayln?: Ocaylaunam[] | undefined;

    constructor(data?: IOtaisans) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["listnhaos"])) {
                this.listnhaos = [] as any;
                for (let item of _data["listnhaos"])
                    this.listnhaos!.push(Onhaos.fromJS(item));
            }
            if (Array.isArray(_data["listrungs"])) {
                this.listrungs = [] as any;
                for (let item of _data["listrungs"])
                    this.listrungs!.push(Orungs.fromJS(item));
            }
            if (Array.isArray(_data["listct"])) {
                this.listct = [] as any;
                for (let item of _data["listct"])
                    this.listct!.push(Ocongtrinh.fromJS(item));
            }
            if (Array.isArray(_data["listcayln"])) {
                this.listcayln = [] as any;
                for (let item of _data["listcayln"])
                    this.listcayln!.push(Ocaylaunam.fromJS(item));
            }
        }
    }

    static fromJS(data: any): Otaisans {
        data = typeof data === 'object' ? data : {};
        let result = new Otaisans();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.listnhaos)) {
            data["listnhaos"] = [];
            for (let item of this.listnhaos)
                data["listnhaos"].push(item.toJSON());
        }
        if (Array.isArray(this.listrungs)) {
            data["listrungs"] = [];
            for (let item of this.listrungs)
                data["listrungs"].push(item.toJSON());
        }
        if (Array.isArray(this.listct)) {
            data["listct"] = [];
            for (let item of this.listct)
                data["listct"].push(item.toJSON());
        }
        if (Array.isArray(this.listcayln)) {
            data["listcayln"] = [];
            for (let item of this.listcayln)
                data["listcayln"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IOtaisans {
    listnhaos?: Onhaos[] | undefined;
    listrungs?: Orungs[] | undefined;
    listct?: Ocongtrinh[] | undefined;
    listcayln?: Ocaylaunam[] | undefined;
}

export class Onhaos implements IOnhaos {
    loainha?: string | undefined;
    dientichxd?: string | undefined;
    dientichsan?: string | undefined;
    caphang?: string | undefined;
    thoihansh?: string | undefined;
    namxd?: string | undefined;
    ketcau?: string | undefined;
    diachinha?: string | undefined;
    hinhthuc?: string | undefined;
    sotang?: string | undefined;
    tennha?: string | undefined;
    tenkhoinha?: string | undefined;
    chush?: Ochusudung | undefined;

    constructor(data?: IOnhaos) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.loainha = _data["loainha"];
            this.dientichxd = _data["dientichxd"];
            this.dientichsan = _data["dientichsan"];
            this.caphang = _data["caphang"];
            this.thoihansh = _data["thoihansh"];
            this.namxd = _data["namxd"];
            this.ketcau = _data["ketcau"];
            this.diachinha = _data["diachinha"];
            this.hinhthuc = _data["hinhthuc"];
            this.sotang = _data["sotang"];
            this.tennha = _data["tennha"];
            this.tenkhoinha = _data["tenkhoinha"];
            this.chush = _data["chush"] ? Ochusudung.fromJS(_data["chush"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Onhaos {
        data = typeof data === 'object' ? data : {};
        let result = new Onhaos();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["loainha"] = this.loainha;
        data["dientichxd"] = this.dientichxd;
        data["dientichsan"] = this.dientichsan;
        data["caphang"] = this.caphang;
        data["thoihansh"] = this.thoihansh;
        data["namxd"] = this.namxd;
        data["ketcau"] = this.ketcau;
        data["diachinha"] = this.diachinha;
        data["hinhthuc"] = this.hinhthuc;
        data["sotang"] = this.sotang;
        data["tennha"] = this.tennha;
        data["tenkhoinha"] = this.tenkhoinha;
        data["chush"] = this.chush ? this.chush.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IOnhaos {
    loainha?: string | undefined;
    dientichxd?: string | undefined;
    dientichsan?: string | undefined;
    caphang?: string | undefined;
    thoihansh?: string | undefined;
    namxd?: string | undefined;
    ketcau?: string | undefined;
    diachinha?: string | undefined;
    hinhthuc?: string | undefined;
    sotang?: string | undefined;
    tennha?: string | undefined;
    tenkhoinha?: string | undefined;
    chush?: Ochusudung | undefined;
}

export class Orungs implements IOrungs {
    loairung?: string | undefined;
    dientich?: string | undefined;
    nguongoctl?: string | undefined;
    hinhthucsh?: string | undefined;
    thoihansh?: string | undefined;
    diachi?: string | undefined;
    tenrung?: string | undefined;
    dtrieng?: string | undefined;
    chush?: Ochusudung | undefined;

    constructor(data?: IOrungs) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.loairung = _data["loairung"];
            this.dientich = _data["dientich"];
            this.nguongoctl = _data["nguongoctl"];
            this.hinhthucsh = _data["hinhthucsh"];
            this.thoihansh = _data["thoihansh"];
            this.diachi = _data["diachi"];
            this.tenrung = _data["tenrung"];
            this.dtrieng = _data["dtrieng"];
            this.chush = _data["chush"] ? Ochusudung.fromJS(_data["chush"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Orungs {
        data = typeof data === 'object' ? data : {};
        let result = new Orungs();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["loairung"] = this.loairung;
        data["dientich"] = this.dientich;
        data["nguongoctl"] = this.nguongoctl;
        data["hinhthucsh"] = this.hinhthucsh;
        data["thoihansh"] = this.thoihansh;
        data["diachi"] = this.diachi;
        data["tenrung"] = this.tenrung;
        data["dtrieng"] = this.dtrieng;
        data["chush"] = this.chush ? this.chush.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IOrungs {
    loairung?: string | undefined;
    dientich?: string | undefined;
    nguongoctl?: string | undefined;
    hinhthucsh?: string | undefined;
    thoihansh?: string | undefined;
    diachi?: string | undefined;
    tenrung?: string | undefined;
    dtrieng?: string | undefined;
    chush?: Ochusudung | undefined;
}

export class Ocongtrinh implements IOcongtrinh {
    tenct?: string | undefined;
    diachi?: string | undefined;
    listhangmuc?: Ohangmucs[] | undefined;
    chush?: Ochusudung | undefined;

    constructor(data?: IOcongtrinh) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tenct = _data["tenct"];
            this.diachi = _data["diachi"];
            if (Array.isArray(_data["listhangmuc"])) {
                this.listhangmuc = [] as any;
                for (let item of _data["listhangmuc"])
                    this.listhangmuc!.push(Ohangmucs.fromJS(item));
            }
            this.chush = _data["chush"] ? Ochusudung.fromJS(_data["chush"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Ocongtrinh {
        data = typeof data === 'object' ? data : {};
        let result = new Ocongtrinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tenct"] = this.tenct;
        data["diachi"] = this.diachi;
        if (Array.isArray(this.listhangmuc)) {
            data["listhangmuc"] = [];
            for (let item of this.listhangmuc)
                data["listhangmuc"].push(item.toJSON());
        }
        data["chush"] = this.chush ? this.chush.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IOcongtrinh {
    tenct?: string | undefined;
    diachi?: string | undefined;
    listhangmuc?: Ohangmucs[] | undefined;
    chush?: Ochusudung | undefined;
}

export class Ohangmucs implements IOhangmucs {
    tenhangmuc?: string | undefined;
    dientichxd?: string | undefined;
    dientichsan?: string | undefined;
    congsuat?: string | undefined;
    hinhthucsd?: string | undefined;
    capct?: string | undefined;
    thoihanshh?: string | undefined;
    ketcau?: string | undefined;
    namhtxd?: string | undefined;
    sotang?: string | undefined;

    constructor(data?: IOhangmucs) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tenhangmuc = _data["tenhangmuc"];
            this.dientichxd = _data["dientichxd"];
            this.dientichsan = _data["dientichsan"];
            this.congsuat = _data["congsuat"];
            this.hinhthucsd = _data["hinhthucsd"];
            this.capct = _data["capct"];
            this.thoihanshh = _data["thoihanshh"];
            this.ketcau = _data["ketcau"];
            this.namhtxd = _data["namhtxd"];
            this.sotang = _data["sotang"];
        }
    }

    static fromJS(data: any): Ohangmucs {
        data = typeof data === 'object' ? data : {};
        let result = new Ohangmucs();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tenhangmuc"] = this.tenhangmuc;
        data["dientichxd"] = this.dientichxd;
        data["dientichsan"] = this.dientichsan;
        data["congsuat"] = this.congsuat;
        data["hinhthucsd"] = this.hinhthucsd;
        data["capct"] = this.capct;
        data["thoihanshh"] = this.thoihanshh;
        data["ketcau"] = this.ketcau;
        data["namhtxd"] = this.namhtxd;
        data["sotang"] = this.sotang;
        return data; 
    }
}

export interface IOhangmucs {
    tenhangmuc?: string | undefined;
    dientichxd?: string | undefined;
    dientichsan?: string | undefined;
    congsuat?: string | undefined;
    hinhthucsd?: string | undefined;
    capct?: string | undefined;
    thoihanshh?: string | undefined;
    ketcau?: string | undefined;
    namhtxd?: string | undefined;
    sotang?: string | undefined;
}

export class Ocaylaunam implements IOcaylaunam {
    loaicay?: string | undefined;
    dientich?: string | undefined;
    hinhthucsh?: string | undefined;
    thoihansh?: string | undefined;
    chush?: Ochusudung | undefined;

    constructor(data?: IOcaylaunam) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.loaicay = _data["loaicay"];
            this.dientich = _data["dientich"];
            this.hinhthucsh = _data["hinhthucsh"];
            this.thoihansh = _data["thoihansh"];
            this.chush = _data["chush"] ? Ochusudung.fromJS(_data["chush"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Ocaylaunam {
        data = typeof data === 'object' ? data : {};
        let result = new Ocaylaunam();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["loaicay"] = this.loaicay;
        data["dientich"] = this.dientich;
        data["hinhthucsh"] = this.hinhthucsh;
        data["thoihansh"] = this.thoihansh;
        data["chush"] = this.chush ? this.chush.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IOcaylaunam {
    loaicay?: string | undefined;
    dientich?: string | undefined;
    hinhthucsh?: string | undefined;
    thoihansh?: string | undefined;
    chush?: Ochusudung | undefined;
}

export class Cauhinh implements ICauhinh {
    cauhinhtinh?: CauhinhKetQua | undefined;
    cauhinhHuyen?: CauhinhKetQua | undefined;

    constructor(data?: ICauhinh) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.cauhinhtinh = _data["cauhinhtinh"] ? CauhinhKetQua.fromJS(_data["cauhinhtinh"]) : <any>undefined;
            this.cauhinhHuyen = _data["cauhinhHuyen"] ? CauhinhKetQua.fromJS(_data["cauhinhHuyen"]) : <any>undefined;
        }
    }

    static fromJS(data: any): Cauhinh {
        data = typeof data === 'object' ? data : {};
        let result = new Cauhinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["cauhinhtinh"] = this.cauhinhtinh ? this.cauhinhtinh.toJSON() : <any>undefined;
        data["cauhinhHuyen"] = this.cauhinhHuyen ? this.cauhinhHuyen.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICauhinh {
    cauhinhtinh?: CauhinhKetQua | undefined;
    cauhinhHuyen?: CauhinhKetQua | undefined;
}

export class CauhinhKetQua implements ICauhinhKetQua {
    id?: string | undefined;
    dvhc?: string | undefined;
    cauhinhchuky?: string | undefined;
    cauhinhingiay?: string | undefined;

    constructor(data?: ICauhinhKetQua) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.dvhc = _data["dvhc"];
            this.cauhinhchuky = _data["cauhinhchuky"];
            this.cauhinhingiay = _data["cauhinhingiay"];
        }
    }

    static fromJS(data: any): CauhinhKetQua {
        data = typeof data === 'object' ? data : {};
        let result = new CauhinhKetQua();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["dvhc"] = this.dvhc;
        data["cauhinhchuky"] = this.cauhinhchuky;
        data["cauhinhingiay"] = this.cauhinhingiay;
        return data; 
    }
}

export interface ICauhinhKetQua {
    id?: string | undefined;
    dvhc?: string | undefined;
    cauhinhchuky?: string | undefined;
    cauhinhingiay?: string | undefined;
}

export class GetTrichLucQuery implements IGetTrichLucQuery {
    idDangKy?: string | undefined;

    constructor(data?: IGetTrichLucQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDangKy = _data["idDangKy"];
        }
    }

    static fromJS(data: any): GetTrichLucQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetTrichLucQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDangKy"] = this.idDangKy;
        return data; 
    }
}

export interface IGetTrichLucQuery {
    idDangKy?: string | undefined;
}

export class ApiResultOfKetQuaDoDacDto implements IApiResultOfKetQuaDoDacDto {
    isError?: boolean;
    message?: string | undefined;
    data?: KetQuaDoDacDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfKetQuaDoDacDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? KetQuaDoDacDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfKetQuaDoDacDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfKetQuaDoDacDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfKetQuaDoDacDto {
    isError?: boolean;
    message?: string | undefined;
    data?: KetQuaDoDacDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class KetQuaDoDacDto implements IKetQuaDoDacDto {
    chusd?: Ochusudung | undefined;
    chuvc?: Ochusudung | undefined;
    nguoilq?: Ochusudung[] | undefined;
    listchudongsudung?: Ochusudung[] | undefined;
    listthua?: OthuaKetQuaDoDac[] | undefined;
    loaichu?: string | undefined;
    ghichutrang1?: string | undefined;
    ghichutrang2?: string | undefined;
    mavach?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    soserial?: string | undefined;
    mahoso?: string | undefined;
    namcap?: string | undefined;
    soquyetdinh?: string | undefined;
    taisan?: Otaisans | undefined;
    dong1?: string | undefined;
    dong2?: string | undefined;
    dong3?: string | undefined;
    dong4?: string | undefined;
    dong5?: string | undefined;
    dong6?: string | undefined;
    dong7?: string | undefined;
    checkCmnd?: string | undefined;
    loaicapgiay?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    maxa?: string | undefined;
    tenxa?: string | undefined;
    iddvhctinh?: string | undefined;
    iddvhchuyen?: string | undefined;
    iddvhcxa?: string | undefined;
    cauhinh?: Cauhinh | undefined;

    constructor(data?: IKetQuaDoDacDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.chusd = _data["chusd"] ? Ochusudung.fromJS(_data["chusd"]) : <any>undefined;
            this.chuvc = _data["chuvc"] ? Ochusudung.fromJS(_data["chuvc"]) : <any>undefined;
            if (Array.isArray(_data["nguoilq"])) {
                this.nguoilq = [] as any;
                for (let item of _data["nguoilq"])
                    this.nguoilq!.push(Ochusudung.fromJS(item));
            }
            if (Array.isArray(_data["listchudongsudung"])) {
                this.listchudongsudung = [] as any;
                for (let item of _data["listchudongsudung"])
                    this.listchudongsudung!.push(Ochusudung.fromJS(item));
            }
            if (Array.isArray(_data["listthua"])) {
                this.listthua = [] as any;
                for (let item of _data["listthua"])
                    this.listthua!.push(OthuaKetQuaDoDac.fromJS(item));
            }
            this.loaichu = _data["loaichu"];
            this.ghichutrang1 = _data["ghichutrang1"];
            this.ghichutrang2 = _data["ghichutrang2"];
            this.mavach = _data["mavach"];
            this.sovaoso1 = _data["sovaoso1"];
            this.sovaoso2 = _data["sovaoso2"];
            this.soserial = _data["soserial"];
            this.mahoso = _data["mahoso"];
            this.namcap = _data["namcap"];
            this.soquyetdinh = _data["soquyetdinh"];
            this.taisan = _data["taisan"] ? Otaisans.fromJS(_data["taisan"]) : <any>undefined;
            this.dong1 = _data["dong1"];
            this.dong2 = _data["dong2"];
            this.dong3 = _data["dong3"];
            this.dong4 = _data["dong4"];
            this.dong5 = _data["dong5"];
            this.dong6 = _data["dong6"];
            this.dong7 = _data["dong7"];
            this.checkCmnd = _data["checkCmnd"];
            this.loaicapgiay = _data["loaicapgiay"];
            this.matinh = _data["matinh"];
            this.mahuyen = _data["mahuyen"];
            this.tentinh = _data["tentinh"];
            this.tenhuyen = _data["tenhuyen"];
            this.maxa = _data["maxa"];
            this.tenxa = _data["tenxa"];
            this.iddvhctinh = _data["iddvhctinh"];
            this.iddvhchuyen = _data["iddvhchuyen"];
            this.iddvhcxa = _data["iddvhcxa"];
            this.cauhinh = _data["cauhinh"] ? Cauhinh.fromJS(_data["cauhinh"]) : <any>undefined;
        }
    }

    static fromJS(data: any): KetQuaDoDacDto {
        data = typeof data === 'object' ? data : {};
        let result = new KetQuaDoDacDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["chusd"] = this.chusd ? this.chusd.toJSON() : <any>undefined;
        data["chuvc"] = this.chuvc ? this.chuvc.toJSON() : <any>undefined;
        if (Array.isArray(this.nguoilq)) {
            data["nguoilq"] = [];
            for (let item of this.nguoilq)
                data["nguoilq"].push(item.toJSON());
        }
        if (Array.isArray(this.listchudongsudung)) {
            data["listchudongsudung"] = [];
            for (let item of this.listchudongsudung)
                data["listchudongsudung"].push(item.toJSON());
        }
        if (Array.isArray(this.listthua)) {
            data["listthua"] = [];
            for (let item of this.listthua)
                data["listthua"].push(item.toJSON());
        }
        data["loaichu"] = this.loaichu;
        data["ghichutrang1"] = this.ghichutrang1;
        data["ghichutrang2"] = this.ghichutrang2;
        data["mavach"] = this.mavach;
        data["sovaoso1"] = this.sovaoso1;
        data["sovaoso2"] = this.sovaoso2;
        data["soserial"] = this.soserial;
        data["mahoso"] = this.mahoso;
        data["namcap"] = this.namcap;
        data["soquyetdinh"] = this.soquyetdinh;
        data["taisan"] = this.taisan ? this.taisan.toJSON() : <any>undefined;
        data["dong1"] = this.dong1;
        data["dong2"] = this.dong2;
        data["dong3"] = this.dong3;
        data["dong4"] = this.dong4;
        data["dong5"] = this.dong5;
        data["dong6"] = this.dong6;
        data["dong7"] = this.dong7;
        data["checkCmnd"] = this.checkCmnd;
        data["loaicapgiay"] = this.loaicapgiay;
        data["matinh"] = this.matinh;
        data["mahuyen"] = this.mahuyen;
        data["tentinh"] = this.tentinh;
        data["tenhuyen"] = this.tenhuyen;
        data["maxa"] = this.maxa;
        data["tenxa"] = this.tenxa;
        data["iddvhctinh"] = this.iddvhctinh;
        data["iddvhchuyen"] = this.iddvhchuyen;
        data["iddvhcxa"] = this.iddvhcxa;
        data["cauhinh"] = this.cauhinh ? this.cauhinh.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IKetQuaDoDacDto {
    chusd?: Ochusudung | undefined;
    chuvc?: Ochusudung | undefined;
    nguoilq?: Ochusudung[] | undefined;
    listchudongsudung?: Ochusudung[] | undefined;
    listthua?: OthuaKetQuaDoDac[] | undefined;
    loaichu?: string | undefined;
    ghichutrang1?: string | undefined;
    ghichutrang2?: string | undefined;
    mavach?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    soserial?: string | undefined;
    mahoso?: string | undefined;
    namcap?: string | undefined;
    soquyetdinh?: string | undefined;
    taisan?: Otaisans | undefined;
    dong1?: string | undefined;
    dong2?: string | undefined;
    dong3?: string | undefined;
    dong4?: string | undefined;
    dong5?: string | undefined;
    dong6?: string | undefined;
    dong7?: string | undefined;
    checkCmnd?: string | undefined;
    loaicapgiay?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    maxa?: string | undefined;
    tenxa?: string | undefined;
    iddvhctinh?: string | undefined;
    iddvhchuyen?: string | undefined;
    iddvhcxa?: string | undefined;
    cauhinh?: Cauhinh | undefined;
}

export class OthuaKetQuaDoDac extends Othua implements IOthuaKetQuaDoDac {
    ketquadodacjson?: string | undefined;
    ketquadodacthuadatjson?: string | undefined;

    constructor(data?: IOthuaKetQuaDoDac) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.ketquadodacjson = _data["ketquadodacjson"];
            this.ketquadodacthuadatjson = _data["ketquadodacthuadatjson"];
        }
    }

    static fromJS(data: any): OthuaKetQuaDoDac {
        data = typeof data === 'object' ? data : {};
        let result = new OthuaKetQuaDoDac();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ketquadodacjson"] = this.ketquadodacjson;
        data["ketquadodacthuadatjson"] = this.ketquadodacthuadatjson;
        super.toJSON(data);
        return data; 
    }
}

export interface IOthuaKetQuaDoDac extends IOthua {
    ketquadodacjson?: string | undefined;
    ketquadodacthuadatjson?: string | undefined;
}

export class GetKetQuaDoDacQuery implements IGetKetQuaDoDacQuery {
    idDangKy?: string | undefined;

    constructor(data?: IGetKetQuaDoDacQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDangKy = _data["idDangKy"];
        }
    }

    static fromJS(data: any): GetKetQuaDoDacQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetKetQuaDoDacQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDangKy"] = this.idDangKy;
        return data; 
    }
}

export interface IGetKetQuaDoDacQuery {
    idDangKy?: string | undefined;
}

export class ApiResultOfBienBanXacNhanRanhGioiDto implements IApiResultOfBienBanXacNhanRanhGioiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: BienBanXacNhanRanhGioiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfBienBanXacNhanRanhGioiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? BienBanXacNhanRanhGioiDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfBienBanXacNhanRanhGioiDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfBienBanXacNhanRanhGioiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfBienBanXacNhanRanhGioiDto {
    isError?: boolean;
    message?: string | undefined;
    data?: BienBanXacNhanRanhGioiDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BienBanXacNhanRanhGioiDto implements IBienBanXacNhanRanhGioiDto {
    chusd?: Ochusudung | undefined;
    chuvc?: Ochusudung | undefined;
    nguoilq?: Ochusudung[] | undefined;
    listchudongsudung?: Ochusudung[] | undefined;
    listthua?: OthuaBienBanXacNhanRanhGioi[] | undefined;
    loaichu?: string | undefined;
    ghichutrang1?: string | undefined;
    ghichutrang2?: string | undefined;
    mavach?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    soserial?: string | undefined;
    mahoso?: string | undefined;
    namcap?: string | undefined;
    soquyetdinh?: string | undefined;
    taisan?: Otaisans | undefined;
    dong1?: string | undefined;
    dong2?: string | undefined;
    dong3?: string | undefined;
    dong4?: string | undefined;
    dong5?: string | undefined;
    dong6?: string | undefined;
    dong7?: string | undefined;
    checkCmnd?: string | undefined;
    loaicapgiay?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    maxa?: string | undefined;
    tenxa?: string | undefined;
    iddvhctinh?: string | undefined;
    iddvhchuyen?: string | undefined;
    iddvhcxa?: string | undefined;
    cauhinh?: Cauhinh | undefined;

    constructor(data?: IBienBanXacNhanRanhGioiDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.chusd = _data["chusd"] ? Ochusudung.fromJS(_data["chusd"]) : <any>undefined;
            this.chuvc = _data["chuvc"] ? Ochusudung.fromJS(_data["chuvc"]) : <any>undefined;
            if (Array.isArray(_data["nguoilq"])) {
                this.nguoilq = [] as any;
                for (let item of _data["nguoilq"])
                    this.nguoilq!.push(Ochusudung.fromJS(item));
            }
            if (Array.isArray(_data["listchudongsudung"])) {
                this.listchudongsudung = [] as any;
                for (let item of _data["listchudongsudung"])
                    this.listchudongsudung!.push(Ochusudung.fromJS(item));
            }
            if (Array.isArray(_data["listthua"])) {
                this.listthua = [] as any;
                for (let item of _data["listthua"])
                    this.listthua!.push(OthuaBienBanXacNhanRanhGioi.fromJS(item));
            }
            this.loaichu = _data["loaichu"];
            this.ghichutrang1 = _data["ghichutrang1"];
            this.ghichutrang2 = _data["ghichutrang2"];
            this.mavach = _data["mavach"];
            this.sovaoso1 = _data["sovaoso1"];
            this.sovaoso2 = _data["sovaoso2"];
            this.soserial = _data["soserial"];
            this.mahoso = _data["mahoso"];
            this.namcap = _data["namcap"];
            this.soquyetdinh = _data["soquyetdinh"];
            this.taisan = _data["taisan"] ? Otaisans.fromJS(_data["taisan"]) : <any>undefined;
            this.dong1 = _data["dong1"];
            this.dong2 = _data["dong2"];
            this.dong3 = _data["dong3"];
            this.dong4 = _data["dong4"];
            this.dong5 = _data["dong5"];
            this.dong6 = _data["dong6"];
            this.dong7 = _data["dong7"];
            this.checkCmnd = _data["checkCmnd"];
            this.loaicapgiay = _data["loaicapgiay"];
            this.matinh = _data["matinh"];
            this.mahuyen = _data["mahuyen"];
            this.tentinh = _data["tentinh"];
            this.tenhuyen = _data["tenhuyen"];
            this.maxa = _data["maxa"];
            this.tenxa = _data["tenxa"];
            this.iddvhctinh = _data["iddvhctinh"];
            this.iddvhchuyen = _data["iddvhchuyen"];
            this.iddvhcxa = _data["iddvhcxa"];
            this.cauhinh = _data["cauhinh"] ? Cauhinh.fromJS(_data["cauhinh"]) : <any>undefined;
        }
    }

    static fromJS(data: any): BienBanXacNhanRanhGioiDto {
        data = typeof data === 'object' ? data : {};
        let result = new BienBanXacNhanRanhGioiDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["chusd"] = this.chusd ? this.chusd.toJSON() : <any>undefined;
        data["chuvc"] = this.chuvc ? this.chuvc.toJSON() : <any>undefined;
        if (Array.isArray(this.nguoilq)) {
            data["nguoilq"] = [];
            for (let item of this.nguoilq)
                data["nguoilq"].push(item.toJSON());
        }
        if (Array.isArray(this.listchudongsudung)) {
            data["listchudongsudung"] = [];
            for (let item of this.listchudongsudung)
                data["listchudongsudung"].push(item.toJSON());
        }
        if (Array.isArray(this.listthua)) {
            data["listthua"] = [];
            for (let item of this.listthua)
                data["listthua"].push(item.toJSON());
        }
        data["loaichu"] = this.loaichu;
        data["ghichutrang1"] = this.ghichutrang1;
        data["ghichutrang2"] = this.ghichutrang2;
        data["mavach"] = this.mavach;
        data["sovaoso1"] = this.sovaoso1;
        data["sovaoso2"] = this.sovaoso2;
        data["soserial"] = this.soserial;
        data["mahoso"] = this.mahoso;
        data["namcap"] = this.namcap;
        data["soquyetdinh"] = this.soquyetdinh;
        data["taisan"] = this.taisan ? this.taisan.toJSON() : <any>undefined;
        data["dong1"] = this.dong1;
        data["dong2"] = this.dong2;
        data["dong3"] = this.dong3;
        data["dong4"] = this.dong4;
        data["dong5"] = this.dong5;
        data["dong6"] = this.dong6;
        data["dong7"] = this.dong7;
        data["checkCmnd"] = this.checkCmnd;
        data["loaicapgiay"] = this.loaicapgiay;
        data["matinh"] = this.matinh;
        data["mahuyen"] = this.mahuyen;
        data["tentinh"] = this.tentinh;
        data["tenhuyen"] = this.tenhuyen;
        data["maxa"] = this.maxa;
        data["tenxa"] = this.tenxa;
        data["iddvhctinh"] = this.iddvhctinh;
        data["iddvhchuyen"] = this.iddvhchuyen;
        data["iddvhcxa"] = this.iddvhcxa;
        data["cauhinh"] = this.cauhinh ? this.cauhinh.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IBienBanXacNhanRanhGioiDto {
    chusd?: Ochusudung | undefined;
    chuvc?: Ochusudung | undefined;
    nguoilq?: Ochusudung[] | undefined;
    listchudongsudung?: Ochusudung[] | undefined;
    listthua?: OthuaBienBanXacNhanRanhGioi[] | undefined;
    loaichu?: string | undefined;
    ghichutrang1?: string | undefined;
    ghichutrang2?: string | undefined;
    mavach?: string | undefined;
    sovaoso1?: string | undefined;
    sovaoso2?: string | undefined;
    soserial?: string | undefined;
    mahoso?: string | undefined;
    namcap?: string | undefined;
    soquyetdinh?: string | undefined;
    taisan?: Otaisans | undefined;
    dong1?: string | undefined;
    dong2?: string | undefined;
    dong3?: string | undefined;
    dong4?: string | undefined;
    dong5?: string | undefined;
    dong6?: string | undefined;
    dong7?: string | undefined;
    checkCmnd?: string | undefined;
    loaicapgiay?: string | undefined;
    matinh?: string | undefined;
    mahuyen?: string | undefined;
    tentinh?: string | undefined;
    tenhuyen?: string | undefined;
    maxa?: string | undefined;
    tenxa?: string | undefined;
    iddvhctinh?: string | undefined;
    iddvhchuyen?: string | undefined;
    iddvhcxa?: string | undefined;
    cauhinh?: Cauhinh | undefined;
}

export class OthuaBienBanXacNhanRanhGioi extends Othua implements IOthuaBienBanXacNhanRanhGioi {
    xacnhanranhgioijson?: string | undefined;
    xacnhanranhgioithuadatjson?: string | undefined;

    constructor(data?: IOthuaBienBanXacNhanRanhGioi) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.xacnhanranhgioijson = _data["xacnhanranhgioijson"];
            this.xacnhanranhgioithuadatjson = _data["xacnhanranhgioithuadatjson"];
        }
    }

    static fromJS(data: any): OthuaBienBanXacNhanRanhGioi {
        data = typeof data === 'object' ? data : {};
        let result = new OthuaBienBanXacNhanRanhGioi();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["xacnhanranhgioijson"] = this.xacnhanranhgioijson;
        data["xacnhanranhgioithuadatjson"] = this.xacnhanranhgioithuadatjson;
        super.toJSON(data);
        return data; 
    }
}

export interface IOthuaBienBanXacNhanRanhGioi extends IOthua {
    xacnhanranhgioijson?: string | undefined;
    xacnhanranhgioithuadatjson?: string | undefined;
}

export class GetBienBanXacNhanRanhGioiQuery implements IGetBienBanXacNhanRanhGioiQuery {
    idDangKy?: string | undefined;

    constructor(data?: IGetBienBanXacNhanRanhGioiQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDangKy = _data["idDangKy"];
        }
    }

    static fromJS(data: any): GetBienBanXacNhanRanhGioiQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetBienBanXacNhanRanhGioiQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDangKy"] = this.idDangKy;
        return data; 
    }
}

export interface IGetBienBanXacNhanRanhGioiQuery {
    idDangKy?: string | undefined;
}

export class ApiResultOfIListOfLoaiBienDongVm implements IApiResultOfIListOfLoaiBienDongVm {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiBienDongVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfLoaiBienDongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(LoaiBienDongVm.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfLoaiBienDongVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfLoaiBienDongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfLoaiBienDongVm {
    isError?: boolean;
    message?: string | undefined;
    data?: LoaiBienDongVm[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class LoaiBienDongVm implements ILoaiBienDongVm {
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    tenVietTat?: string | undefined;
    isChonNhanh?: boolean;
    isLoaiTheChap?: boolean;
    stt?: number;

    constructor(data?: ILoaiBienDongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.tenLoaiBienDong = _data["tenLoaiBienDong"];
            this.tenVietTat = _data["tenVietTat"];
            this.isChonNhanh = _data["isChonNhanh"];
            this.isLoaiTheChap = _data["isLoaiTheChap"];
            this.stt = _data["stt"];
        }
    }

    static fromJS(data: any): LoaiBienDongVm {
        data = typeof data === 'object' ? data : {};
        let result = new LoaiBienDongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["tenLoaiBienDong"] = this.tenLoaiBienDong;
        data["tenVietTat"] = this.tenVietTat;
        data["isChonNhanh"] = this.isChonNhanh;
        data["isLoaiTheChap"] = this.isLoaiTheChap;
        data["stt"] = this.stt;
        return data; 
    }
}

export interface ILoaiBienDongVm {
    idLoaiBienDong?: string | undefined;
    tenLoaiBienDong?: string | undefined;
    tenVietTat?: string | undefined;
    isChonNhanh?: boolean;
    isLoaiTheChap?: boolean;
    stt?: number;
}

export class ApiResultOfCauHinhLoaiBienDongVm implements IApiResultOfCauHinhLoaiBienDongVm {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhLoaiBienDongVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfCauHinhLoaiBienDongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? CauHinhLoaiBienDongVm.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfCauHinhLoaiBienDongVm {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfCauHinhLoaiBienDongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfCauHinhLoaiBienDongVm {
    isError?: boolean;
    message?: string | undefined;
    data?: CauHinhLoaiBienDongVm | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class CauHinhLoaiBienDongVm implements ICauHinhLoaiBienDongVm {
    idLoaiBienDong?: string | undefined;
    linkRedirect?: string | undefined;

    constructor(data?: ICauHinhLoaiBienDongVm) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idLoaiBienDong = _data["idLoaiBienDong"];
            this.linkRedirect = _data["linkRedirect"];
        }
    }

    static fromJS(data: any): CauHinhLoaiBienDongVm {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhLoaiBienDongVm();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLoaiBienDong"] = this.idLoaiBienDong;
        data["linkRedirect"] = this.linkRedirect;
        return data; 
    }
}

export interface ICauHinhLoaiBienDongVm {
    idLoaiBienDong?: string | undefined;
    linkRedirect?: string | undefined;
}

export class ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel implements IApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiThucHienHoSoPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(TrangThaiThucHienHoSoPublicViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfTrangThaiThucHienHoSoPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiThucHienHoSoPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class TrangThaiThucHienHoSoPublicViewModel implements ITrangThaiThucHienHoSoPublicViewModel {
    id?: number;
    maTrangThaiThucHien?: string | undefined;
    tenTrangThaiThucHien?: string | undefined;

    constructor(data?: ITrangThaiThucHienHoSoPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maTrangThaiThucHien = _data["maTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
        }
    }

    static fromJS(data: any): TrangThaiThucHienHoSoPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiThucHienHoSoPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maTrangThaiThucHien"] = this.maTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        return data; 
    }
}

export interface ITrangThaiThucHienHoSoPublicViewModel {
    id?: number;
    maTrangThaiThucHien?: string | undefined;
    tenTrangThaiThucHien?: string | undefined;
}

export class ApiResultOfIListOfTrangThaiHoSoPublicViewModel implements IApiResultOfIListOfTrangThaiHoSoPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiHoSoPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfTrangThaiHoSoPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(TrangThaiHoSoPublicViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfTrangThaiHoSoPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfTrangThaiHoSoPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfTrangThaiHoSoPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiHoSoPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class TrangThaiHoSoPublicViewModel implements ITrangThaiHoSoPublicViewModel {
    id?: number;
    maTrangThaiHoSo?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;

    constructor(data?: ITrangThaiHoSoPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maTrangThaiHoSo = _data["maTrangThaiHoSo"];
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
        }
    }

    static fromJS(data: any): TrangThaiHoSoPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiHoSoPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maTrangThaiHoSo"] = this.maTrangThaiHoSo;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        return data; 
    }
}

export interface ITrangThaiHoSoPublicViewModel {
    id?: number;
    maTrangThaiHoSo?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
}

export class TrangThaiThucHienViewModel implements ITrangThaiThucHienViewModel {
    id?: number;
    maTrangThaiThucHien?: string | undefined;
    tenTrangThaiThucHien?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;

    constructor(data?: ITrangThaiThucHienViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maTrangThaiThucHien = _data["maTrangThaiThucHien"];
            this.tenTrangThaiThucHien = _data["tenTrangThaiThucHien"];
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
        }
    }

    static fromJS(data: any): TrangThaiThucHienViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiThucHienViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maTrangThaiThucHien"] = this.maTrangThaiThucHien;
        data["tenTrangThaiThucHien"] = this.tenTrangThaiThucHien;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        return data; 
    }
}

export interface ITrangThaiThucHienViewModel {
    id?: number;
    maTrangThaiThucHien?: string | undefined;
    tenTrangThaiThucHien?: string | undefined;
    moTa?: string | undefined;
    trangThai?: number;
}

export class ApiResultOfPagedListOfTrangThaiThucHien implements IApiResultOfPagedListOfTrangThaiThucHien {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfTrangThaiThucHien | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfTrangThaiThucHien) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfTrangThaiThucHien.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfTrangThaiThucHien {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfTrangThaiThucHien();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfTrangThaiThucHien {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfTrangThaiThucHien | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfTrangThaiThucHien implements IPagedListOfTrangThaiThucHien {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: TrangThaiThucHien[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfTrangThaiThucHien) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(TrangThaiThucHien.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfTrangThaiThucHien {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfTrangThaiThucHien();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfTrangThaiThucHien {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: TrangThaiThucHien[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class TrangThaiThucHienRequest extends PagingRequest implements ITrangThaiThucHienRequest {

    constructor(data?: ITrangThaiThucHienRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): TrangThaiThucHienRequest {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiThucHienRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface ITrangThaiThucHienRequest extends IPagingRequest {
}

export class ApiResultOfIListOfTrangThaiXuLy implements IApiResultOfIListOfTrangThaiXuLy {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiXuLy[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfTrangThaiXuLy) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(TrangThaiXuLy.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfTrangThaiXuLy {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfTrangThaiXuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfTrangThaiXuLy {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiXuLy[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfIListOfTrangThaiXuLyPublicViewModel implements IApiResultOfIListOfTrangThaiXuLyPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiXuLyPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfTrangThaiXuLyPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(TrangThaiXuLyPublicViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfTrangThaiXuLyPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfTrangThaiXuLyPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfTrangThaiXuLyPublicViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: TrangThaiXuLyPublicViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class TrangThaiXuLyPublicViewModel implements ITrangThaiXuLyPublicViewModel {
    id?: number;
    maTrangThaiXuLy?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;

    constructor(data?: ITrangThaiXuLyPublicViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maTrangThaiXuLy = _data["maTrangThaiXuLy"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
        }
    }

    static fromJS(data: any): TrangThaiXuLyPublicViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new TrangThaiXuLyPublicViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maTrangThaiXuLy"] = this.maTrangThaiXuLy;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        return data; 
    }
}

export interface ITrangThaiXuLyPublicViewModel {
    id?: number;
    maTrangThaiXuLy?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
}

export class ChuyenTrangThaiXuLyTrongBuocCommand implements IChuyenTrangThaiXuLyTrongBuocCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idNghiepVu?: number;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    traLaiDVC?: boolean;

    constructor(data?: IChuyenTrangThaiXuLyTrongBuocCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idNghiepVu = _data["idNghiepVu"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.traLaiDVC = _data["traLaiDVC"];
        }
    }

    static fromJS(data: any): ChuyenTrangThaiXuLyTrongBuocCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenTrangThaiXuLyTrongBuocCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idNghiepVu"] = this.idNghiepVu;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["traLaiDVC"] = this.traLaiDVC;
        return data; 
    }
}

export interface IChuyenTrangThaiXuLyTrongBuocCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idNghiepVu?: number;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    traLaiDVC?: boolean;
}

export class ChuyenBuocXuLyCommand implements IChuyenBuocXuLyCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idFlow?: string[] | undefined;
    chuyenBuocXuLyNguoiXuLyCommand?: ChuyenBuocXuLyNguoiXuLyCommand[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;

    constructor(data?: IChuyenBuocXuLyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.idLyDoXuLy = _data["idLyDoXuLy"];
            this.noiDungXuLy = _data["noiDungXuLy"];
            this.idChuyen = _data["idChuyen"];
            this.noiDungChuyen = _data["noiDungChuyen"];
            if (Array.isArray(_data["idFlow"])) {
                this.idFlow = [] as any;
                for (let item of _data["idFlow"])
                    this.idFlow!.push(item);
            }
            if (Array.isArray(_data["chuyenBuocXuLyNguoiXuLyCommand"])) {
                this.chuyenBuocXuLyNguoiXuLyCommand = [] as any;
                for (let item of _data["chuyenBuocXuLyNguoiXuLyCommand"])
                    this.chuyenBuocXuLyNguoiXuLyCommand!.push(ChuyenBuocXuLyNguoiXuLyCommand.fromJS(item));
            }
            if (Array.isArray(_data["fileDinhKems"])) {
                this.fileDinhKems = [] as any;
                for (let item of _data["fileDinhKems"])
                    this.fileDinhKems!.push(FileDinhKem.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ChuyenBuocXuLyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenBuocXuLyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["idLyDoXuLy"] = this.idLyDoXuLy;
        data["noiDungXuLy"] = this.noiDungXuLy;
        data["idChuyen"] = this.idChuyen;
        data["noiDungChuyen"] = this.noiDungChuyen;
        if (Array.isArray(this.idFlow)) {
            data["idFlow"] = [];
            for (let item of this.idFlow)
                data["idFlow"].push(item);
        }
        if (Array.isArray(this.chuyenBuocXuLyNguoiXuLyCommand)) {
            data["chuyenBuocXuLyNguoiXuLyCommand"] = [];
            for (let item of this.chuyenBuocXuLyNguoiXuLyCommand)
                data["chuyenBuocXuLyNguoiXuLyCommand"].push(item.toJSON());
        }
        if (Array.isArray(this.fileDinhKems)) {
            data["fileDinhKems"] = [];
            for (let item of this.fileDinhKems)
                data["fileDinhKems"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IChuyenBuocXuLyCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    idLyDoXuLy?: number | undefined;
    noiDungXuLy?: string | undefined;
    idChuyen?: number | undefined;
    noiDungChuyen?: string | undefined;
    idFlow?: string[] | undefined;
    chuyenBuocXuLyNguoiXuLyCommand?: ChuyenBuocXuLyNguoiXuLyCommand[] | undefined;
    fileDinhKems?: FileDinhKem[] | undefined;
}

export class ChuyenBuocXuLyNguoiXuLyCommand implements IChuyenBuocXuLyNguoiXuLyCommand {
    dsIdNguoiXuLy?: string[] | undefined;
    taskDefinitionKey?: string | undefined;
    isBuocKetThuc?: boolean;

    constructor(data?: IChuyenBuocXuLyNguoiXuLyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["dsIdNguoiXuLy"])) {
                this.dsIdNguoiXuLy = [] as any;
                for (let item of _data["dsIdNguoiXuLy"])
                    this.dsIdNguoiXuLy!.push(item);
            }
            this.taskDefinitionKey = _data["taskDefinitionKey"];
            this.isBuocKetThuc = _data["isBuocKetThuc"];
        }
    }

    static fromJS(data: any): ChuyenBuocXuLyNguoiXuLyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenBuocXuLyNguoiXuLyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dsIdNguoiXuLy)) {
            data["dsIdNguoiXuLy"] = [];
            for (let item of this.dsIdNguoiXuLy)
                data["dsIdNguoiXuLy"].push(item);
        }
        data["taskDefinitionKey"] = this.taskDefinitionKey;
        data["isBuocKetThuc"] = this.isBuocKetThuc;
        return data; 
    }
}

export interface IChuyenBuocXuLyNguoiXuLyCommand {
    dsIdNguoiXuLy?: string[] | undefined;
    taskDefinitionKey?: string | undefined;
    isBuocKetThuc?: boolean;
}

export class ApiResultOfIListOfChuyenBuocXuLyHangLoatDto implements IApiResultOfIListOfChuyenBuocXuLyHangLoatDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ChuyenBuocXuLyHangLoatDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfChuyenBuocXuLyHangLoatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(ChuyenBuocXuLyHangLoatDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfChuyenBuocXuLyHangLoatDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfChuyenBuocXuLyHangLoatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfChuyenBuocXuLyHangLoatDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ChuyenBuocXuLyHangLoatDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ChuyenBuocXuLyHangLoatDto implements IChuyenBuocXuLyHangLoatDto {
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    isError?: boolean;
    errorMessage?: string | undefined;

    constructor(data?: IChuyenBuocXuLyHangLoatDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soBienNhan = _data["soBienNhan"];
            this.maHoSo = _data["maHoSo"];
            this.isError = _data["isError"];
            this.errorMessage = _data["errorMessage"];
        }
    }

    static fromJS(data: any): ChuyenBuocXuLyHangLoatDto {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenBuocXuLyHangLoatDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soBienNhan"] = this.soBienNhan;
        data["maHoSo"] = this.maHoSo;
        data["isError"] = this.isError;
        data["errorMessage"] = this.errorMessage;
        return data; 
    }
}

export interface IChuyenBuocXuLyHangLoatDto {
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    isError?: boolean;
    errorMessage?: string | undefined;
}

export class ChuyenBuocXuLyHangLoatCommand implements IChuyenBuocXuLyHangLoatCommand {
    dsIdHoSo?: string[] | undefined;
    idBuoc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idFlow?: string[] | undefined;
    chuyenBuocXuLyNguoiXuLyCommand?: ChuyenBuocXuLyNguoiXuLyCommand[] | undefined;

    constructor(data?: IChuyenBuocXuLyHangLoatCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["dsIdHoSo"])) {
                this.dsIdHoSo = [] as any;
                for (let item of _data["dsIdHoSo"])
                    this.dsIdHoSo!.push(item);
            }
            this.idBuoc = _data["idBuoc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            if (Array.isArray(_data["idFlow"])) {
                this.idFlow = [] as any;
                for (let item of _data["idFlow"])
                    this.idFlow!.push(item);
            }
            if (Array.isArray(_data["chuyenBuocXuLyNguoiXuLyCommand"])) {
                this.chuyenBuocXuLyNguoiXuLyCommand = [] as any;
                for (let item of _data["chuyenBuocXuLyNguoiXuLyCommand"])
                    this.chuyenBuocXuLyNguoiXuLyCommand!.push(ChuyenBuocXuLyNguoiXuLyCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ChuyenBuocXuLyHangLoatCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenBuocXuLyHangLoatCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dsIdHoSo)) {
            data["dsIdHoSo"] = [];
            for (let item of this.dsIdHoSo)
                data["dsIdHoSo"].push(item);
        }
        data["idBuoc"] = this.idBuoc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        if (Array.isArray(this.idFlow)) {
            data["idFlow"] = [];
            for (let item of this.idFlow)
                data["idFlow"].push(item);
        }
        if (Array.isArray(this.chuyenBuocXuLyNguoiXuLyCommand)) {
            data["chuyenBuocXuLyNguoiXuLyCommand"] = [];
            for (let item of this.chuyenBuocXuLyNguoiXuLyCommand)
                data["chuyenBuocXuLyNguoiXuLyCommand"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IChuyenBuocXuLyHangLoatCommand {
    dsIdHoSo?: string[] | undefined;
    idBuoc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idFlow?: string[] | undefined;
    chuyenBuocXuLyNguoiXuLyCommand?: ChuyenBuocXuLyNguoiXuLyCommand[] | undefined;
}

export class ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto implements IApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ChuyenBuocXuLyHangLoatNhanhDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(ChuyenBuocXuLyHangLoatNhanhDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfChuyenBuocXuLyHangLoatNhanhDto {
    isError?: boolean;
    message?: string | undefined;
    data?: ChuyenBuocXuLyHangLoatNhanhDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ChuyenBuocXuLyHangLoatNhanhDto implements IChuyenBuocXuLyHangLoatNhanhDto {
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    isError?: boolean;
    errorMessage?: string | undefined;

    constructor(data?: IChuyenBuocXuLyHangLoatNhanhDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soBienNhan = _data["soBienNhan"];
            this.maHoSo = _data["maHoSo"];
            this.isError = _data["isError"];
            this.errorMessage = _data["errorMessage"];
        }
    }

    static fromJS(data: any): ChuyenBuocXuLyHangLoatNhanhDto {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenBuocXuLyHangLoatNhanhDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soBienNhan"] = this.soBienNhan;
        data["maHoSo"] = this.maHoSo;
        data["isError"] = this.isError;
        data["errorMessage"] = this.errorMessage;
        return data; 
    }
}

export interface IChuyenBuocXuLyHangLoatNhanhDto {
    soBienNhan?: string | undefined;
    maHoSo?: string | undefined;
    isError?: boolean;
    errorMessage?: string | undefined;
}

export class ChuyenBuocXuLyHangLoatNhanhCommand implements IChuyenBuocXuLyHangLoatNhanhCommand {
    dsIdHoSo?: string[] | undefined;

    constructor(data?: IChuyenBuocXuLyHangLoatNhanhCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["dsIdHoSo"])) {
                this.dsIdHoSo = [] as any;
                for (let item of _data["dsIdHoSo"])
                    this.dsIdHoSo!.push(item);
            }
        }
    }

    static fromJS(data: any): ChuyenBuocXuLyHangLoatNhanhCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenBuocXuLyHangLoatNhanhCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dsIdHoSo)) {
            data["dsIdHoSo"] = [];
            for (let item of this.dsIdHoSo)
                data["dsIdHoSo"].push(item);
        }
        return data; 
    }
}

export interface IChuyenBuocXuLyHangLoatNhanhCommand {
    dsIdHoSo?: string[] | undefined;
}

export class YeuCauXuLyNoiBoCommand implements IYeuCauXuLyNoiBoCommand {
    idHoSo?: string | undefined;
    idBuocNguon?: string | undefined;
    idBuocXuLyDich?: string | undefined;
    noiDungYeuCau?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;

    constructor(data?: IYeuCauXuLyNoiBoCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuocNguon = _data["idBuocNguon"];
            this.idBuocXuLyDich = _data["idBuocXuLyDich"];
            this.noiDungYeuCau = _data["noiDungYeuCau"];
            if (Array.isArray(_data["dsIdNguoiXuLy"])) {
                this.dsIdNguoiXuLy = [] as any;
                for (let item of _data["dsIdNguoiXuLy"])
                    this.dsIdNguoiXuLy!.push(item);
            }
        }
    }

    static fromJS(data: any): YeuCauXuLyNoiBoCommand {
        data = typeof data === 'object' ? data : {};
        let result = new YeuCauXuLyNoiBoCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuocNguon"] = this.idBuocNguon;
        data["idBuocXuLyDich"] = this.idBuocXuLyDich;
        data["noiDungYeuCau"] = this.noiDungYeuCau;
        if (Array.isArray(this.dsIdNguoiXuLy)) {
            data["dsIdNguoiXuLy"] = [];
            for (let item of this.dsIdNguoiXuLy)
                data["dsIdNguoiXuLy"].push(item);
        }
        return data; 
    }
}

export interface IYeuCauXuLyNoiBoCommand {
    idHoSo?: string | undefined;
    idBuocNguon?: string | undefined;
    idBuocXuLyDich?: string | undefined;
    noiDungYeuCau?: string | undefined;
    dsIdNguoiXuLy?: string[] | undefined;
}

export class ApiResultOfGetThaoTacXuLyTiepTheoDto implements IApiResultOfGetThaoTacXuLyTiepTheoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetThaoTacXuLyTiepTheoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfGetThaoTacXuLyTiepTheoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? GetThaoTacXuLyTiepTheoDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfGetThaoTacXuLyTiepTheoDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfGetThaoTacXuLyTiepTheoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfGetThaoTacXuLyTiepTheoDto {
    isError?: boolean;
    message?: string | undefined;
    data?: GetThaoTacXuLyTiepTheoDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class GetThaoTacXuLyTiepTheoDto implements IGetThaoTacXuLyTiepTheoDto {
    nhomThaoTacXuLyBuoc?: GetLuongXuLyTiepTheoDto[] | undefined;
    nhomThaoTacCauHinhBuoc?: CauHinhBuocActiveViewModel[] | undefined;

    constructor(data?: IGetThaoTacXuLyTiepTheoDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["nhomThaoTacXuLyBuoc"])) {
                this.nhomThaoTacXuLyBuoc = [] as any;
                for (let item of _data["nhomThaoTacXuLyBuoc"])
                    this.nhomThaoTacXuLyBuoc!.push(GetLuongXuLyTiepTheoDto.fromJS(item));
            }
            if (Array.isArray(_data["nhomThaoTacCauHinhBuoc"])) {
                this.nhomThaoTacCauHinhBuoc = [] as any;
                for (let item of _data["nhomThaoTacCauHinhBuoc"])
                    this.nhomThaoTacCauHinhBuoc!.push(CauHinhBuocActiveViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): GetThaoTacXuLyTiepTheoDto {
        data = typeof data === 'object' ? data : {};
        let result = new GetThaoTacXuLyTiepTheoDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.nhomThaoTacXuLyBuoc)) {
            data["nhomThaoTacXuLyBuoc"] = [];
            for (let item of this.nhomThaoTacXuLyBuoc)
                data["nhomThaoTacXuLyBuoc"].push(item.toJSON());
        }
        if (Array.isArray(this.nhomThaoTacCauHinhBuoc)) {
            data["nhomThaoTacCauHinhBuoc"] = [];
            for (let item of this.nhomThaoTacCauHinhBuoc)
                data["nhomThaoTacCauHinhBuoc"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IGetThaoTacXuLyTiepTheoDto {
    nhomThaoTacXuLyBuoc?: GetLuongXuLyTiepTheoDto[] | undefined;
    nhomThaoTacCauHinhBuoc?: CauHinhBuocActiveViewModel[] | undefined;
}

export class CauHinhBuocActiveViewModel implements ICauHinhBuocActiveViewModel {
    id?: string | undefined;
    idCauHinh?: number;
    maCauHinh?: string | undefined;
    tenCauHinh?: string | undefined;
    tenCauHinhNgan?: string | undefined;
    kieu?: KieuCauHinhBuoc;
    giaTriCauHinh?: GiaTriCauHinhBuocViewModel | undefined;

    constructor(data?: ICauHinhBuocActiveViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idCauHinh = _data["idCauHinh"];
            this.maCauHinh = _data["maCauHinh"];
            this.tenCauHinh = _data["tenCauHinh"];
            this.tenCauHinhNgan = _data["tenCauHinhNgan"];
            this.kieu = _data["kieu"];
            this.giaTriCauHinh = _data["giaTriCauHinh"] ? GiaTriCauHinhBuocViewModel.fromJS(_data["giaTriCauHinh"]) : <any>undefined;
        }
    }

    static fromJS(data: any): CauHinhBuocActiveViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new CauHinhBuocActiveViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idCauHinh"] = this.idCauHinh;
        data["maCauHinh"] = this.maCauHinh;
        data["tenCauHinh"] = this.tenCauHinh;
        data["tenCauHinhNgan"] = this.tenCauHinhNgan;
        data["kieu"] = this.kieu;
        data["giaTriCauHinh"] = this.giaTriCauHinh ? this.giaTriCauHinh.toJSON() : <any>undefined;
        return data; 
    }
}

export interface ICauHinhBuocActiveViewModel {
    id?: string | undefined;
    idCauHinh?: number;
    maCauHinh?: string | undefined;
    tenCauHinh?: string | undefined;
    tenCauHinhNgan?: string | undefined;
    kieu?: KieuCauHinhBuoc;
    giaTriCauHinh?: GiaTriCauHinhBuocViewModel | undefined;
}

export class ApiResultOfIListOfBuocDaXuLyTruocDto implements IApiResultOfIListOfBuocDaXuLyTruocDto {
    isError?: boolean;
    message?: string | undefined;
    data?: BuocDaXuLyTruocDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfBuocDaXuLyTruocDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(BuocDaXuLyTruocDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfBuocDaXuLyTruocDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfBuocDaXuLyTruocDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfBuocDaXuLyTruocDto {
    isError?: boolean;
    message?: string | undefined;
    data?: BuocDaXuLyTruocDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class BuocDaXuLyTruocDto implements IBuocDaXuLyTruocDto {
    idBuocXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    dsNguoiXuLy?: NguoiXuLyTaskModel[] | undefined;

    constructor(data?: IBuocDaXuLyTruocDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idBuocXuLy = _data["idBuocXuLy"];
            this.tenBuoc = _data["tenBuoc"];
            if (Array.isArray(_data["dsNguoiXuLy"])) {
                this.dsNguoiXuLy = [] as any;
                for (let item of _data["dsNguoiXuLy"])
                    this.dsNguoiXuLy!.push(NguoiXuLyTaskModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BuocDaXuLyTruocDto {
        data = typeof data === 'object' ? data : {};
        let result = new BuocDaXuLyTruocDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idBuocXuLy"] = this.idBuocXuLy;
        data["tenBuoc"] = this.tenBuoc;
        if (Array.isArray(this.dsNguoiXuLy)) {
            data["dsNguoiXuLy"] = [];
            for (let item of this.dsNguoiXuLy)
                data["dsNguoiXuLy"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBuocDaXuLyTruocDto {
    idBuocXuLy?: string | undefined;
    tenBuoc?: string | undefined;
    dsNguoiXuLy?: NguoiXuLyTaskModel[] | undefined;
}

export class ApiResultOfIListOfPhongBanDto implements IApiResultOfIListOfPhongBanDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PhongBanDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfPhongBanDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(PhongBanDto.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfPhongBanDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfPhongBanDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfPhongBanDto {
    isError?: boolean;
    message?: string | undefined;
    data?: PhongBanDto[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PhongBanDto implements IPhongBanDto {
    scopeId?: string | undefined;
    scopeName?: string | undefined;

    constructor(data?: IPhongBanDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.scopeId = _data["scopeId"];
            this.scopeName = _data["scopeName"];
        }
    }

    static fromJS(data: any): PhongBanDto {
        data = typeof data === 'object' ? data : {};
        let result = new PhongBanDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["scopeId"] = this.scopeId;
        data["scopeName"] = this.scopeName;
        return data; 
    }
}

export interface IPhongBanDto {
    scopeId?: string | undefined;
    scopeName?: string | undefined;
}

export class ApiResultOfNguoiXyLyLienQuanTheoBuocDto implements IApiResultOfNguoiXyLyLienQuanTheoBuocDto {
    isError?: boolean;
    message?: string | undefined;
    data?: NguoiXyLyLienQuanTheoBuocDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfNguoiXyLyLienQuanTheoBuocDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? NguoiXyLyLienQuanTheoBuocDto.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfNguoiXyLyLienQuanTheoBuocDto {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfNguoiXyLyLienQuanTheoBuocDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfNguoiXyLyLienQuanTheoBuocDto {
    isError?: boolean;
    message?: string | undefined;
    data?: NguoiXyLyLienQuanTheoBuocDto | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class NguoiXyLyLienQuanTheoBuocDto implements INguoiXyLyLienQuanTheoBuocDto {
    dsNguoiXuLyDaCauHinh?: NguoiXuLyModel[] | undefined;
    dsNguoiXuLyBuocGanNhat?: NguoiXuLyModel[] | undefined;

    constructor(data?: INguoiXyLyLienQuanTheoBuocDto) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            if (Array.isArray(_data["dsNguoiXuLyDaCauHinh"])) {
                this.dsNguoiXuLyDaCauHinh = [] as any;
                for (let item of _data["dsNguoiXuLyDaCauHinh"])
                    this.dsNguoiXuLyDaCauHinh!.push(NguoiXuLyModel.fromJS(item));
            }
            if (Array.isArray(_data["dsNguoiXuLyBuocGanNhat"])) {
                this.dsNguoiXuLyBuocGanNhat = [] as any;
                for (let item of _data["dsNguoiXuLyBuocGanNhat"])
                    this.dsNguoiXuLyBuocGanNhat!.push(NguoiXuLyModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): NguoiXyLyLienQuanTheoBuocDto {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiXyLyLienQuanTheoBuocDto();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dsNguoiXuLyDaCauHinh)) {
            data["dsNguoiXuLyDaCauHinh"] = [];
            for (let item of this.dsNguoiXuLyDaCauHinh)
                data["dsNguoiXuLyDaCauHinh"].push(item.toJSON());
        }
        if (Array.isArray(this.dsNguoiXuLyBuocGanNhat)) {
            data["dsNguoiXuLyBuocGanNhat"] = [];
            for (let item of this.dsNguoiXuLyBuocGanNhat)
                data["dsNguoiXuLyBuocGanNhat"].push(item.toJSON());
        }
        return data; 
    }
}

export interface INguoiXyLyLienQuanTheoBuocDto {
    dsNguoiXuLyDaCauHinh?: NguoiXuLyModel[] | undefined;
    dsNguoiXuLyBuocGanNhat?: NguoiXuLyModel[] | undefined;
}

export class NguoiXuLyModel implements INguoiXuLyModel {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;

    constructor(data?: INguoiXuLyModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.tenNguoiXuLy = _data["tenNguoiXuLy"];
        }
    }

    static fromJS(data: any): NguoiXuLyModel {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiXuLyModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["tenNguoiXuLy"] = this.tenNguoiXuLy;
        return data; 
    }
}

export interface INguoiXuLyModel {
    idNguoiXuLy?: string | undefined;
    tenNguoiXuLy?: string | undefined;
}

export class ChuyenLaiBuocXuLyCommand implements IChuyenLaiBuocXuLyCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;

    constructor(data?: IChuyenLaiBuocXuLyCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuoc = _data["idBuoc"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
        }
    }

    static fromJS(data: any): ChuyenLaiBuocXuLyCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenLaiBuocXuLyCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuoc"] = this.idBuoc;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        return data; 
    }
}

export interface IChuyenLaiBuocXuLyCommand {
    idHoSo?: string | undefined;
    idBuoc?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
}

export class ChuyenLaiBuocXuLySecurityCommand implements IChuyenLaiBuocXuLySecurityCommand {
    idHoSo?: string | undefined;
    idBuocChuyenLai?: string | undefined;
    idBuocHienTai?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;

    constructor(data?: IChuyenLaiBuocXuLySecurityCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idHoSo = _data["idHoSo"];
            this.idBuocChuyenLai = _data["idBuocChuyenLai"];
            this.idBuocHienTai = _data["idBuocHienTai"];
            this.dsIdNguoiXuLy = _data["dsIdNguoiXuLy"];
        }
    }

    static fromJS(data: any): ChuyenLaiBuocXuLySecurityCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenLaiBuocXuLySecurityCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idHoSo"] = this.idHoSo;
        data["idBuocChuyenLai"] = this.idBuocChuyenLai;
        data["idBuocHienTai"] = this.idBuocHienTai;
        data["dsIdNguoiXuLy"] = this.dsIdNguoiXuLy;
        return data; 
    }
}

export interface IChuyenLaiBuocXuLySecurityCommand {
    idHoSo?: string | undefined;
    idBuocChuyenLai?: string | undefined;
    idBuocHienTai?: string | undefined;
    dsIdNguoiXuLy?: string | undefined;
}

export class LinhVucViewModel implements ILinhVucViewModel {
    id?: string | undefined;
    maLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    trangThai?: number;
    moTa?: string | undefined;

    constructor(data?: ILinhVucViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maLinhVuc = _data["maLinhVuc"];
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.trangThai = _data["trangThai"];
            this.moTa = _data["moTa"];
        }
    }

    static fromJS(data: any): LinhVucViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new LinhVucViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maLinhVuc"] = this.maLinhVuc;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["trangThai"] = this.trangThai;
        data["moTa"] = this.moTa;
        return data; 
    }
}

export interface ILinhVucViewModel {
    id?: string | undefined;
    maLinhVuc?: string | undefined;
    tenLinhVuc?: string | undefined;
    trangThai?: number;
    moTa?: string | undefined;
}

export class ApiResultOfPagedListOfLinhVuc implements IApiResultOfPagedListOfLinhVuc {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfLinhVuc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfLinhVuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfLinhVuc.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfLinhVuc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfLinhVuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfLinhVuc {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfLinhVuc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfLinhVuc implements IPagedListOfLinhVuc {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: LinhVuc[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfLinhVuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(LinhVuc.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfLinhVuc {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfLinhVuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfLinhVuc {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: LinhVuc[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class LinhVucRequest extends PagingRequest implements ILinhVucRequest {
    isDisableFillterActive?: boolean;

    constructor(data?: ILinhVucRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.isDisableFillterActive = _data["isDisableFillterActive"];
        }
    }

    static fromJS(data: any): LinhVucRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LinhVucRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isDisableFillterActive"] = this.isDisableFillterActive;
        super.toJSON(data);
        return data; 
    }
}

export interface ILinhVucRequest extends IPagingRequest {
    isDisableFillterActive?: boolean;
}

export class QuyTrinhViewModel implements IQuyTrinhViewModel {
    id?: string | undefined;
    maQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    ngayHieuLuc?: Date | undefined;
    ngayHetHan?: Date | undefined;
    moTa?: string | undefined;
    trangThai?: number;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    thoiGianThucHien?: number | undefined;
    maTinh?: string | undefined;

    constructor(data?: IQuyTrinhViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.ngayHieuLuc = _data["ngayHieuLuc"] ? new Date(_data["ngayHieuLuc"].toString()) : <any>undefined;
            this.ngayHetHan = _data["ngayHetHan"] ? new Date(_data["ngayHetHan"].toString()) : <any>undefined;
            this.moTa = _data["moTa"];
            this.trangThai = _data["trangThai"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.thoiGianThucHien = _data["thoiGianThucHien"];
            this.maTinh = _data["maTinh"];
        }
    }

    static fromJS(data: any): QuyTrinhViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new QuyTrinhViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["ngayHieuLuc"] = this.ngayHieuLuc ? this.ngayHieuLuc.toISOString() : <any>undefined;
        data["ngayHetHan"] = this.ngayHetHan ? this.ngayHetHan.toISOString() : <any>undefined;
        data["moTa"] = this.moTa;
        data["trangThai"] = this.trangThai;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["thoiGianThucHien"] = this.thoiGianThucHien;
        data["maTinh"] = this.maTinh;
        return data; 
    }
}

export interface IQuyTrinhViewModel {
    id?: string | undefined;
    maQuyTrinh?: string | undefined;
    tenQuyTrinh?: string | undefined;
    ngayHieuLuc?: Date | undefined;
    ngayHetHan?: Date | undefined;
    moTa?: string | undefined;
    trangThai?: number;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    thoiGianThucHien?: number | undefined;
    maTinh?: string | undefined;
}

export class CapNhatQuyTrinhRequest implements ICapNhatQuyTrinhRequest {
    idQuyTrinh?: string | undefined;
    idProcess?: string | undefined;
    fileQuyTrinh?: string | undefined;

    constructor(data?: ICapNhatQuyTrinhRequest) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idProcess = _data["idProcess"];
            this.fileQuyTrinh = _data["fileQuyTrinh"];
        }
    }

    static fromJS(data: any): CapNhatQuyTrinhRequest {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatQuyTrinhRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idProcess"] = this.idProcess;
        data["fileQuyTrinh"] = this.fileQuyTrinh;
        return data; 
    }
}

export interface ICapNhatQuyTrinhRequest {
    idQuyTrinh?: string | undefined;
    idProcess?: string | undefined;
    fileQuyTrinh?: string | undefined;
}

export class ApiResultOfPagedListOfQuyTrinh implements IApiResultOfPagedListOfQuyTrinh {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfQuyTrinh | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfQuyTrinh) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfQuyTrinh.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfQuyTrinh {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfQuyTrinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfQuyTrinh {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfQuyTrinh | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfQuyTrinh implements IPagedListOfQuyTrinh {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: QuyTrinh[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfQuyTrinh) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(QuyTrinh.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfQuyTrinh {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfQuyTrinh();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfQuyTrinh {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: QuyTrinh[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class QuyTrinhRequest extends PagingRequest implements IQuyTrinhRequest {
    idThuTuc?: string | undefined;
    idLinhVuc?: string | undefined;
    isDisableFillterActive?: boolean;

    constructor(data?: IQuyTrinhRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idThuTuc = _data["idThuTuc"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.isDisableFillterActive = _data["isDisableFillterActive"];
        }
    }

    static fromJS(data: any): QuyTrinhRequest {
        data = typeof data === 'object' ? data : {};
        let result = new QuyTrinhRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idThuTuc"] = this.idThuTuc;
        data["idLinhVuc"] = this.idLinhVuc;
        data["isDisableFillterActive"] = this.isDisableFillterActive;
        super.toJSON(data);
        return data; 
    }
}

export interface IQuyTrinhRequest extends IPagingRequest {
    idThuTuc?: string | undefined;
    idLinhVuc?: string | undefined;
    isDisableFillterActive?: boolean;
}

export class ApiResultOfThuTuc implements IApiResultOfThuTuc {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTuc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfThuTuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? ThuTuc.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfThuTuc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfThuTuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfThuTuc {
    isError?: boolean;
    message?: string | undefined;
    data?: ThuTuc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiResultOfPagedListOfThuTuc implements IApiResultOfPagedListOfThuTuc {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfThuTuc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfThuTuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfThuTuc.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfThuTuc {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfThuTuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfThuTuc {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfThuTuc | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfThuTuc implements IPagedListOfThuTuc {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: ThuTuc[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfThuTuc) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(ThuTuc.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfThuTuc {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfThuTuc();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfThuTuc {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: ThuTuc[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class ThuTucRequest extends PagingRequest implements IThuTucRequest {
    idLinhVuc?: string | undefined;
    isDisableFillterActive?: boolean;

    constructor(data?: IThuTucRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idLinhVuc = _data["idLinhVuc"];
            this.isDisableFillterActive = _data["isDisableFillterActive"];
        }
    }

    static fromJS(data: any): ThuTucRequest {
        data = typeof data === 'object' ? data : {};
        let result = new ThuTucRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idLinhVuc"] = this.idLinhVuc;
        data["isDisableFillterActive"] = this.isDisableFillterActive;
        super.toJSON(data);
        return data; 
    }
}

export interface IThuTucRequest extends IPagingRequest {
    idLinhVuc?: string | undefined;
    isDisableFillterActive?: boolean;
}

export class DVCHoSoRequiredViewModel implements IDVCHoSoRequiredViewModel {
    hoSoId?: string | undefined;
    groupId?: number | undefined;
    tinhId?: string | undefined;
    huyenId?: string | undefined;
    xaId?: string | undefined;
    soBienNhan?: string | undefined;
    maHoSoMotCua?: string | undefined;
    nguoiTiepNhan?: string | undefined;
    ngayTiepNhan?: Date;
    ngayHenTra?: Date;
    tenThuTuc?: string | undefined;
    maQuyTrinh?: string | undefined;
    maThuTuc?: string | undefined;
    maLinhVuc?: string | undefined;
    heThongDvc?: IGate | undefined;
    chuHoSo?: string | undefined;
    thongTinNguoiNopDon?: DVCHoSoRequiredThongTinNguoiNopDonViewModel | undefined;
    thongTinThuaDat?: DVCHoSoRequiredThongTinThuaDatViewModel[] | undefined;
    danhSachGiayToDinhKem?: DVCHoSoRequiredThongTinFileDinhKemViewModel[] | undefined;

    constructor(data?: IDVCHoSoRequiredViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoSoId = _data["hoSoId"];
            this.groupId = _data["groupId"];
            this.tinhId = _data["tinhId"];
            this.huyenId = _data["huyenId"];
            this.xaId = _data["xaId"];
            this.soBienNhan = _data["soBienNhan"];
            this.maHoSoMotCua = _data["maHoSoMotCua"];
            this.nguoiTiepNhan = _data["nguoiTiepNhan"];
            this.ngayTiepNhan = _data["ngayTiepNhan"] ? new Date(_data["ngayTiepNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.tenThuTuc = _data["tenThuTuc"];
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.maThuTuc = _data["maThuTuc"];
            this.maLinhVuc = _data["maLinhVuc"];
            this.heThongDvc = _data["heThongDvc"];
            this.chuHoSo = _data["chuHoSo"];
            this.thongTinNguoiNopDon = _data["thongTinNguoiNopDon"] ? DVCHoSoRequiredThongTinNguoiNopDonViewModel.fromJS(_data["thongTinNguoiNopDon"]) : <any>undefined;
            if (Array.isArray(_data["thongTinThuaDat"])) {
                this.thongTinThuaDat = [] as any;
                for (let item of _data["thongTinThuaDat"])
                    this.thongTinThuaDat!.push(DVCHoSoRequiredThongTinThuaDatViewModel.fromJS(item));
            }
            if (Array.isArray(_data["danhSachGiayToDinhKem"])) {
                this.danhSachGiayToDinhKem = [] as any;
                for (let item of _data["danhSachGiayToDinhKem"])
                    this.danhSachGiayToDinhKem!.push(DVCHoSoRequiredThongTinFileDinhKemViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DVCHoSoRequiredViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoRequiredViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoSoId"] = this.hoSoId;
        data["groupId"] = this.groupId;
        data["tinhId"] = this.tinhId;
        data["huyenId"] = this.huyenId;
        data["xaId"] = this.xaId;
        data["soBienNhan"] = this.soBienNhan;
        data["maHoSoMotCua"] = this.maHoSoMotCua;
        data["nguoiTiepNhan"] = this.nguoiTiepNhan;
        data["ngayTiepNhan"] = this.ngayTiepNhan ? this.ngayTiepNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["tenThuTuc"] = this.tenThuTuc;
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["maThuTuc"] = this.maThuTuc;
        data["maLinhVuc"] = this.maLinhVuc;
        data["heThongDvc"] = this.heThongDvc;
        data["chuHoSo"] = this.chuHoSo;
        data["thongTinNguoiNopDon"] = this.thongTinNguoiNopDon ? this.thongTinNguoiNopDon.toJSON() : <any>undefined;
        if (Array.isArray(this.thongTinThuaDat)) {
            data["thongTinThuaDat"] = [];
            for (let item of this.thongTinThuaDat)
                data["thongTinThuaDat"].push(item.toJSON());
        }
        if (Array.isArray(this.danhSachGiayToDinhKem)) {
            data["danhSachGiayToDinhKem"] = [];
            for (let item of this.danhSachGiayToDinhKem)
                data["danhSachGiayToDinhKem"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDVCHoSoRequiredViewModel {
    hoSoId?: string | undefined;
    groupId?: number | undefined;
    tinhId?: string | undefined;
    huyenId?: string | undefined;
    xaId?: string | undefined;
    soBienNhan?: string | undefined;
    maHoSoMotCua?: string | undefined;
    nguoiTiepNhan?: string | undefined;
    ngayTiepNhan?: Date;
    ngayHenTra?: Date;
    tenThuTuc?: string | undefined;
    maQuyTrinh?: string | undefined;
    maThuTuc?: string | undefined;
    maLinhVuc?: string | undefined;
    heThongDvc?: IGate | undefined;
    chuHoSo?: string | undefined;
    thongTinNguoiNopDon?: DVCHoSoRequiredThongTinNguoiNopDonViewModel | undefined;
    thongTinThuaDat?: DVCHoSoRequiredThongTinThuaDatViewModel[] | undefined;
    danhSachGiayToDinhKem?: DVCHoSoRequiredThongTinFileDinhKemViewModel[] | undefined;
}

export class AddDvcHoSoCaMauRawDataCommand extends DVCHoSoRequiredViewModel implements IAddDvcHoSoCaMauRawDataCommand {

    constructor(data?: IAddDvcHoSoCaMauRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): AddDvcHoSoCaMauRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoCaMauRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoCaMauRawDataCommand extends IDVCHoSoRequiredViewModel {
}

export enum IGate {
    None = 0,
    V1 = 1,
    V2 = 2,
}

export class DVCHoSoRequiredThongTinNguoiNopDonViewModel implements IDVCHoSoRequiredThongTinNguoiNopDonViewModel {
    hoTen?: string | undefined;
    gioiTinh?: boolean;
    ngaySinh?: string | undefined;
    soChungMinh?: string | undefined;
    diaChiChiTiet?: string | undefined;
    soDienThoai?: string | undefined;
    email?: string | undefined;

    constructor(data?: IDVCHoSoRequiredThongTinNguoiNopDonViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.hoTen = _data["hoTen"];
            this.gioiTinh = _data["gioiTinh"];
            this.ngaySinh = _data["ngaySinh"];
            this.soChungMinh = _data["soChungMinh"];
            this.diaChiChiTiet = _data["diaChiChiTiet"];
            this.soDienThoai = _data["soDienThoai"];
            this.email = _data["email"];
        }
    }

    static fromJS(data: any): DVCHoSoRequiredThongTinNguoiNopDonViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoRequiredThongTinNguoiNopDonViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["hoTen"] = this.hoTen;
        data["gioiTinh"] = this.gioiTinh;
        data["ngaySinh"] = this.ngaySinh;
        data["soChungMinh"] = this.soChungMinh;
        data["diaChiChiTiet"] = this.diaChiChiTiet;
        data["soDienThoai"] = this.soDienThoai;
        data["email"] = this.email;
        return data; 
    }
}

export interface IDVCHoSoRequiredThongTinNguoiNopDonViewModel {
    hoTen?: string | undefined;
    gioiTinh?: boolean;
    ngaySinh?: string | undefined;
    soChungMinh?: string | undefined;
    diaChiChiTiet?: string | undefined;
    soDienThoai?: string | undefined;
    email?: string | undefined;
}

export class DVCHoSoRequiredThongTinThuaDatViewModel implements IDVCHoSoRequiredThongTinThuaDatViewModel {
    soThuTuThua?: string | undefined;
    soHieuToBanDo?: string | undefined;
    dienTich?: string | undefined;
    diaChiChiTiet?: string | undefined;

    constructor(data?: IDVCHoSoRequiredThongTinThuaDatViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soThuTuThua = _data["soThuTuThua"];
            this.soHieuToBanDo = _data["soHieuToBanDo"];
            this.dienTich = _data["dienTich"];
            this.diaChiChiTiet = _data["diaChiChiTiet"];
        }
    }

    static fromJS(data: any): DVCHoSoRequiredThongTinThuaDatViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoRequiredThongTinThuaDatViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soThuTuThua"] = this.soThuTuThua;
        data["soHieuToBanDo"] = this.soHieuToBanDo;
        data["dienTich"] = this.dienTich;
        data["diaChiChiTiet"] = this.diaChiChiTiet;
        return data; 
    }
}

export interface IDVCHoSoRequiredThongTinThuaDatViewModel {
    soThuTuThua?: string | undefined;
    soHieuToBanDo?: string | undefined;
    dienTich?: string | undefined;
    diaChiChiTiet?: string | undefined;
}

export class DVCHoSoRequiredThongTinFileDinhKemViewModel implements IDVCHoSoRequiredThongTinFileDinhKemViewModel {
    tenGiayTo?: string | undefined;
    soBanChinh?: number;
    soBanSao?: number;
    fileName?: string | undefined;
    linkUrl?: string | undefined;
    tapTin?: DVCHoSoRequiredTapTinCommand | undefined;

    constructor(data?: IDVCHoSoRequiredThongTinFileDinhKemViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tenGiayTo = _data["tenGiayTo"];
            this.soBanChinh = _data["soBanChinh"];
            this.soBanSao = _data["soBanSao"];
            this.fileName = _data["fileName"];
            this.linkUrl = _data["linkUrl"];
            this.tapTin = _data["tapTin"] ? DVCHoSoRequiredTapTinCommand.fromJS(_data["tapTin"]) : <any>undefined;
        }
    }

    static fromJS(data: any): DVCHoSoRequiredThongTinFileDinhKemViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoRequiredThongTinFileDinhKemViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tenGiayTo"] = this.tenGiayTo;
        data["soBanChinh"] = this.soBanChinh;
        data["soBanSao"] = this.soBanSao;
        data["fileName"] = this.fileName;
        data["linkUrl"] = this.linkUrl;
        data["tapTin"] = this.tapTin ? this.tapTin.toJSON() : <any>undefined;
        return data; 
    }
}

export interface IDVCHoSoRequiredThongTinFileDinhKemViewModel {
    tenGiayTo?: string | undefined;
    soBanChinh?: number;
    soBanSao?: number;
    fileName?: string | undefined;
    linkUrl?: string | undefined;
    tapTin?: DVCHoSoRequiredTapTinCommand | undefined;
}

export class DVCHoSoRequiredTapTinCommand implements IDVCHoSoRequiredTapTinCommand {
    name?: string | undefined;
    data?: string | undefined;
    linkUrl?: string | undefined;

    constructor(data?: IDVCHoSoRequiredTapTinCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.name = _data["name"];
            this.data = _data["data"];
            this.linkUrl = _data["linkUrl"];
        }
    }

    static fromJS(data: any): DVCHoSoRequiredTapTinCommand {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoRequiredTapTinCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["name"] = this.name;
        data["data"] = this.data;
        data["linkUrl"] = this.linkUrl;
        return data; 
    }
}

export interface IDVCHoSoRequiredTapTinCommand {
    name?: string | undefined;
    data?: string | undefined;
    linkUrl?: string | undefined;
}

export class UpdateDvcHoSoRawDataCommand implements IUpdateDvcHoSoRawDataCommand {
    tinhId?: string | undefined;
    huyenId?: string | undefined;
    xaId?: string | undefined;
    soBienNhan?: string | undefined;
    ngayHenTraMoi?: Date;
    ghiChu?: string | undefined;
    loaiYeuCau?: LoaiYeuCauCapNhatHoSoDvc | undefined;
    isResumeTrangThaiTiepTucXuLy?: boolean;
    chuHoSo?: string | undefined;
    thongTinNguoiNopDon?: DVCHoSoRequiredThongTinNguoiNopDonViewModel | undefined;
    thongTinThuaDat?: DVCHoSoRequiredThongTinThuaDatViewModel[] | undefined;
    danhSachGiayToBoSung?: DVCHoSoRequiredThongTinFileDinhKemViewModel[] | undefined;

    constructor(data?: IUpdateDvcHoSoRawDataCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tinhId = _data["tinhId"];
            this.huyenId = _data["huyenId"];
            this.xaId = _data["xaId"];
            this.soBienNhan = _data["soBienNhan"];
            this.ngayHenTraMoi = _data["ngayHenTraMoi"] ? new Date(_data["ngayHenTraMoi"].toString()) : <any>undefined;
            this.ghiChu = _data["ghiChu"];
            this.loaiYeuCau = _data["loaiYeuCau"];
            this.isResumeTrangThaiTiepTucXuLy = _data["isResumeTrangThaiTiepTucXuLy"];
            this.chuHoSo = _data["chuHoSo"];
            this.thongTinNguoiNopDon = _data["thongTinNguoiNopDon"] ? DVCHoSoRequiredThongTinNguoiNopDonViewModel.fromJS(_data["thongTinNguoiNopDon"]) : <any>undefined;
            if (Array.isArray(_data["thongTinThuaDat"])) {
                this.thongTinThuaDat = [] as any;
                for (let item of _data["thongTinThuaDat"])
                    this.thongTinThuaDat!.push(DVCHoSoRequiredThongTinThuaDatViewModel.fromJS(item));
            }
            if (Array.isArray(_data["danhSachGiayToBoSung"])) {
                this.danhSachGiayToBoSung = [] as any;
                for (let item of _data["danhSachGiayToBoSung"])
                    this.danhSachGiayToBoSung!.push(DVCHoSoRequiredThongTinFileDinhKemViewModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): UpdateDvcHoSoRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDvcHoSoRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tinhId"] = this.tinhId;
        data["huyenId"] = this.huyenId;
        data["xaId"] = this.xaId;
        data["soBienNhan"] = this.soBienNhan;
        data["ngayHenTraMoi"] = this.ngayHenTraMoi ? this.ngayHenTraMoi.toISOString() : <any>undefined;
        data["ghiChu"] = this.ghiChu;
        data["loaiYeuCau"] = this.loaiYeuCau;
        data["isResumeTrangThaiTiepTucXuLy"] = this.isResumeTrangThaiTiepTucXuLy;
        data["chuHoSo"] = this.chuHoSo;
        data["thongTinNguoiNopDon"] = this.thongTinNguoiNopDon ? this.thongTinNguoiNopDon.toJSON() : <any>undefined;
        if (Array.isArray(this.thongTinThuaDat)) {
            data["thongTinThuaDat"] = [];
            for (let item of this.thongTinThuaDat)
                data["thongTinThuaDat"].push(item.toJSON());
        }
        if (Array.isArray(this.danhSachGiayToBoSung)) {
            data["danhSachGiayToBoSung"] = [];
            for (let item of this.danhSachGiayToBoSung)
                data["danhSachGiayToBoSung"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IUpdateDvcHoSoRawDataCommand {
    tinhId?: string | undefined;
    huyenId?: string | undefined;
    xaId?: string | undefined;
    soBienNhan?: string | undefined;
    ngayHenTraMoi?: Date;
    ghiChu?: string | undefined;
    loaiYeuCau?: LoaiYeuCauCapNhatHoSoDvc | undefined;
    isResumeTrangThaiTiepTucXuLy?: boolean;
    chuHoSo?: string | undefined;
    thongTinNguoiNopDon?: DVCHoSoRequiredThongTinNguoiNopDonViewModel | undefined;
    thongTinThuaDat?: DVCHoSoRequiredThongTinThuaDatViewModel[] | undefined;
    danhSachGiayToBoSung?: DVCHoSoRequiredThongTinFileDinhKemViewModel[] | undefined;
}

export class UpdateDvcHoSoCaMauRawDataCommand extends UpdateDvcHoSoRawDataCommand implements IUpdateDvcHoSoCaMauRawDataCommand {

    constructor(data?: IUpdateDvcHoSoCaMauRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): UpdateDvcHoSoCaMauRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDvcHoSoCaMauRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IUpdateDvcHoSoCaMauRawDataCommand extends IUpdateDvcHoSoRawDataCommand {
}

export enum LoaiYeuCauCapNhatHoSoDvc {
    BoSungGiayTo = 0,
    TraThongBaoNvtc = 1,
    CongDanRutHoSo = 2,
    TraKetQua = 3,
}

export class CapNhatTrangThaiHoSoCommand implements ICapNhatTrangThaiHoSoCommand {
    tinhId?: string | undefined;
    soBienNhan?: string | undefined;
    ghiChu?: string | undefined;
    ngayCapNhat?: Date | undefined;
    loaiNghiepVu?: LoaiNghiepVuCapNhatTrangThaiHoSo | undefined;
    danhSachGiayToDinhKem?: CapNhatTrangThaiHoSoFileDinhKemCommand[] | undefined;

    constructor(data?: ICapNhatTrangThaiHoSoCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tinhId = _data["tinhId"];
            this.soBienNhan = _data["soBienNhan"];
            this.ghiChu = _data["ghiChu"];
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
            this.loaiNghiepVu = _data["loaiNghiepVu"];
            if (Array.isArray(_data["danhSachGiayToDinhKem"])) {
                this.danhSachGiayToDinhKem = [] as any;
                for (let item of _data["danhSachGiayToDinhKem"])
                    this.danhSachGiayToDinhKem!.push(CapNhatTrangThaiHoSoFileDinhKemCommand.fromJS(item));
            }
        }
    }

    static fromJS(data: any): CapNhatTrangThaiHoSoCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatTrangThaiHoSoCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tinhId"] = this.tinhId;
        data["soBienNhan"] = this.soBienNhan;
        data["ghiChu"] = this.ghiChu;
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        data["loaiNghiepVu"] = this.loaiNghiepVu;
        if (Array.isArray(this.danhSachGiayToDinhKem)) {
            data["danhSachGiayToDinhKem"] = [];
            for (let item of this.danhSachGiayToDinhKem)
                data["danhSachGiayToDinhKem"].push(item.toJSON());
        }
        return data; 
    }
}

export interface ICapNhatTrangThaiHoSoCommand {
    tinhId?: string | undefined;
    soBienNhan?: string | undefined;
    ghiChu?: string | undefined;
    ngayCapNhat?: Date | undefined;
    loaiNghiepVu?: LoaiNghiepVuCapNhatTrangThaiHoSo | undefined;
    danhSachGiayToDinhKem?: CapNhatTrangThaiHoSoFileDinhKemCommand[] | undefined;
}

export enum LoaiNghiepVuCapNhatTrangThaiHoSo {
    DvcCapNhatNgayTraNguoiDan = 0,
    DvcCongDanDaThanhToanNVTC = 1,
    DvcCongDangYeuCauRutHoSo = 2,
    DvcTraKetQuaChoCongDan = 3,
    DvcCongDanRutHoSo = 9,
}

export class CapNhatTrangThaiHoSoFileDinhKemCommand extends DVCHoSoRequiredThongTinFileDinhKemViewModel implements ICapNhatTrangThaiHoSoFileDinhKemCommand {

    constructor(data?: ICapNhatTrangThaiHoSoFileDinhKemCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): CapNhatTrangThaiHoSoFileDinhKemCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatTrangThaiHoSoFileDinhKemCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface ICapNhatTrangThaiHoSoFileDinhKemCommand extends IDVCHoSoRequiredThongTinFileDinhKemViewModel {
}

export class AddDvcHoSoHauGiangRawDataCommand extends DVCHoSoRequiredViewModel implements IAddDvcHoSoHauGiangRawDataCommand {
    dsNguoiThuLy?: NguoiThuLy[] | undefined;

    constructor(data?: IAddDvcHoSoHauGiangRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            if (Array.isArray(_data["dsNguoiThuLy"])) {
                this.dsNguoiThuLy = [] as any;
                for (let item of _data["dsNguoiThuLy"])
                    this.dsNguoiThuLy!.push(NguoiThuLy.fromJS(item));
            }
        }
    }

    static fromJS(data: any): AddDvcHoSoHauGiangRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoHauGiangRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        if (Array.isArray(this.dsNguoiThuLy)) {
            data["dsNguoiThuLy"] = [];
            for (let item of this.dsNguoiThuLy)
                data["dsNguoiThuLy"].push(item.toJSON());
        }
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoHauGiangRawDataCommand extends IDVCHoSoRequiredViewModel {
    dsNguoiThuLy?: NguoiThuLy[] | undefined;
}

export class NguoiThuLy implements INguoiThuLy {
    account?: string | undefined;

    constructor(data?: INguoiThuLy) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.account = _data["account"];
        }
    }

    static fromJS(data: any): NguoiThuLy {
        data = typeof data === 'object' ? data : {};
        let result = new NguoiThuLy();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["account"] = this.account;
        return data; 
    }
}

export interface INguoiThuLy {
    account?: string | undefined;
}

export class UpdateDvcHoSoHauGiangRawDataCommand extends UpdateDvcHoSoRawDataCommand implements IUpdateDvcHoSoHauGiangRawDataCommand {
    ngayCapNhat?: Date | undefined;

    constructor(data?: IUpdateDvcHoSoHauGiangRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.ngayCapNhat = _data["ngayCapNhat"] ? new Date(_data["ngayCapNhat"].toString()) : <any>undefined;
        }
    }

    static fromJS(data: any): UpdateDvcHoSoHauGiangRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDvcHoSoHauGiangRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ngayCapNhat"] = this.ngayCapNhat ? this.ngayCapNhat.toISOString() : <any>undefined;
        super.toJSON(data);
        return data; 
    }
}

export interface IUpdateDvcHoSoHauGiangRawDataCommand extends IUpdateDvcHoSoRawDataCommand {
    ngayCapNhat?: Date | undefined;
}

export class ApiResultOfPagedListOfDVCHoSoViewModel implements IApiResultOfPagedListOfDVCHoSoViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfDVCHoSoViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfPagedListOfDVCHoSoViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? PagedListOfDVCHoSoViewModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfPagedListOfDVCHoSoViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfPagedListOfDVCHoSoViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfPagedListOfDVCHoSoViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: PagedListOfDVCHoSoViewModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class PagedListOfDVCHoSoViewModel implements IPagedListOfDVCHoSoViewModel {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: DVCHoSoViewModel[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;

    constructor(data?: IPagedListOfDVCHoSoViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.pageIndex = _data["pageIndex"];
            this.pageSize = _data["pageSize"];
            this.rowModify = _data["rowModify"];
            this.totalCount = _data["totalCount"];
            this.totalPages = _data["totalPages"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(DVCHoSoViewModel.fromJS(item));
            }
            this.hasPreviousPage = _data["hasPreviousPage"];
            this.hasNextPage = _data["hasNextPage"];
        }
    }

    static fromJS(data: any): PagedListOfDVCHoSoViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new PagedListOfDVCHoSoViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["pageIndex"] = this.pageIndex;
        data["pageSize"] = this.pageSize;
        data["rowModify"] = this.rowModify;
        data["totalCount"] = this.totalCount;
        data["totalPages"] = this.totalPages;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        data["hasPreviousPage"] = this.hasPreviousPage;
        data["hasNextPage"] = this.hasNextPage;
        return data; 
    }
}

export interface IPagedListOfDVCHoSoViewModel {
    pageIndex?: number;
    pageSize?: number;
    rowModify?: number;
    totalCount?: number;
    totalPages?: number;
    items?: DVCHoSoViewModel[] | undefined;
    hasPreviousPage?: boolean;
    hasNextPage?: boolean;
}

export class DVCHoSoViewModel implements IDVCHoSoViewModel {
    idDvcRawData?: string | undefined;
    id?: string | undefined;
    idHoSoDVC?: string | undefined;
    idThuTucDVC?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    yKienXuLy?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    nguonDuLieu?: number;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    tenLinhVuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    tenLoaiGiayToTuyThan?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDVHC?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    tenCanBoTiepNhan?: string | undefined;
    tenDonViTiepNhan?: string | undefined;
    diaChiDonViTiepNhan?: string | undefined;

    constructor(data?: IDVCHoSoViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.idDvcRawData = _data["idDvcRawData"];
            this.id = _data["id"];
            this.idHoSoDVC = _data["idHoSoDVC"];
            this.idThuTucDVC = _data["idThuTucDVC"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.chuHoSo = _data["chuHoSo"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.yKienXuLy = _data["yKienXuLy"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idNguoiThuLy = _data["idNguoiThuLy"];
            this.idNguoiXuLy = _data["idNguoiXuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.nguonDuLieu = _data["nguonDuLieu"];
            this.maTinh = _data["maTinh"];
            this.ngayTao = _data["ngayTao"] ? new Date(_data["ngayTao"].toString()) : <any>undefined;
            this.tenLinhVuc = _data["tenLinhVuc"];
            this.tenThuTuc = _data["tenThuTuc"];
            this.tenQuyTrinh = _data["tenQuyTrinh"];
            this.tenLoaiHoSo = _data["tenLoaiHoSo"];
            this.tenLoaiGiayToTuyThan = _data["tenLoaiGiayToTuyThan"];
            this.tenTrangThaiHoSo = _data["tenTrangThaiHoSo"];
            this.tenDVHC = _data["tenDVHC"];
            this.tenTrangThaiXuLy = _data["tenTrangThaiXuLy"];
            this.tenCanBoTiepNhan = _data["tenCanBoTiepNhan"];
            this.tenDonViTiepNhan = _data["tenDonViTiepNhan"];
            this.diaChiDonViTiepNhan = _data["diaChiDonViTiepNhan"];
        }
    }

    static fromJS(data: any): DVCHoSoViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDvcRawData"] = this.idDvcRawData;
        data["id"] = this.id;
        data["idHoSoDVC"] = this.idHoSoDVC;
        data["idThuTucDVC"] = this.idThuTucDVC;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["chuHoSo"] = this.chuHoSo;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["yKienXuLy"] = this.yKienXuLy;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idNguoiThuLy"] = this.idNguoiThuLy;
        data["idNguoiXuLy"] = this.idNguoiXuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["nguonDuLieu"] = this.nguonDuLieu;
        data["maTinh"] = this.maTinh;
        data["ngayTao"] = this.ngayTao ? this.ngayTao.toISOString() : <any>undefined;
        data["tenLinhVuc"] = this.tenLinhVuc;
        data["tenThuTuc"] = this.tenThuTuc;
        data["tenQuyTrinh"] = this.tenQuyTrinh;
        data["tenLoaiHoSo"] = this.tenLoaiHoSo;
        data["tenLoaiGiayToTuyThan"] = this.tenLoaiGiayToTuyThan;
        data["tenTrangThaiHoSo"] = this.tenTrangThaiHoSo;
        data["tenDVHC"] = this.tenDVHC;
        data["tenTrangThaiXuLy"] = this.tenTrangThaiXuLy;
        data["tenCanBoTiepNhan"] = this.tenCanBoTiepNhan;
        data["tenDonViTiepNhan"] = this.tenDonViTiepNhan;
        data["diaChiDonViTiepNhan"] = this.diaChiDonViTiepNhan;
        return data; 
    }
}

export interface IDVCHoSoViewModel {
    idDvcRawData?: string | undefined;
    id?: string | undefined;
    idHoSoDVC?: string | undefined;
    idThuTucDVC?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    yKienXuLy?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiThuLy?: string | undefined;
    idNguoiXuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    nguonDuLieu?: number;
    maTinh?: string | undefined;
    ngayTao?: Date | undefined;
    tenLinhVuc?: string | undefined;
    tenThuTuc?: string | undefined;
    tenQuyTrinh?: string | undefined;
    tenLoaiHoSo?: string | undefined;
    tenLoaiGiayToTuyThan?: string | undefined;
    tenTrangThaiHoSo?: string | undefined;
    tenDVHC?: string | undefined;
    tenTrangThaiXuLy?: string | undefined;
    tenCanBoTiepNhan?: string | undefined;
    tenDonViTiepNhan?: string | undefined;
    diaChiDonViTiepNhan?: string | undefined;
}

export class DVCHoSoRequest extends PagingRequest implements IDVCHoSoRequest {
    idDonviTiepNhan?: string | undefined;
    idNguoiTiepNhan?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    maXa?: string | undefined;
    maHuyen?: string | undefined;
    soBienNhan?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    dienThoai?: string | undefined;

    constructor(data?: IDVCHoSoRequest) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
        if (_data) {
            this.idDonviTiepNhan = _data["idDonviTiepNhan"];
            this.idNguoiTiepNhan = _data["idNguoiTiepNhan"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.maXa = _data["maXa"];
            this.maHuyen = _data["maHuyen"];
            this.soBienNhan = _data["soBienNhan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.dienThoai = _data["dienThoai"];
        }
    }

    static fromJS(data: any): DVCHoSoRequest {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["idDonviTiepNhan"] = this.idDonviTiepNhan;
        data["idNguoiTiepNhan"] = this.idNguoiTiepNhan;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["maXa"] = this.maXa;
        data["maHuyen"] = this.maHuyen;
        data["soBienNhan"] = this.soBienNhan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["dienThoai"] = this.dienThoai;
        super.toJSON(data);
        return data; 
    }
}

export interface IDVCHoSoRequest extends IPagingRequest {
    idDonviTiepNhan?: string | undefined;
    idNguoiTiepNhan?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
    tuNgay?: Date;
    denNgay?: Date;
    maXa?: string | undefined;
    maHuyen?: string | undefined;
    soBienNhan?: string | undefined;
    soGiayToTuyThan?: string | undefined;
    dienThoai?: string | undefined;
}

export class ApiResultOfIListOfDVCFileDinhKemViewModel implements IApiResultOfIListOfDVCFileDinhKemViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCFileDinhKemViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCFileDinhKemViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCFileDinhKemViewModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCFileDinhKemViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCFileDinhKemViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCFileDinhKemViewModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCFileDinhKemViewModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class HoSoLoaiGiayToFileDinhKemViewModel implements IHoSoLoaiGiayToFileDinhKemViewModel {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idThuTucLoaiGiayTo?: string | undefined;
    tenFile?: string | undefined;
    moTa?: string | undefined;
    link?: string | undefined;
    laNguoiDanNop?: number;
    soBanChinhHienCo?: number;
    soBanSaoHienCo?: number;
    maTinh?: string | undefined;
    idHoSoDVC?: string | undefined;
    idFileDinhKem?: string | undefined;
    tenGiayTo?: string | undefined;
    contentType?: string | undefined;
    dataFile?: string | undefined;
    dataFileBase64?: string | undefined;

    constructor(data?: IHoSoLoaiGiayToFileDinhKemViewModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idHoSo = _data["idHoSo"];
            this.idThuTucLoaiGiayTo = _data["idThuTucLoaiGiayTo"];
            this.tenFile = _data["tenFile"];
            this.moTa = _data["moTa"];
            this.link = _data["link"];
            this.laNguoiDanNop = _data["laNguoiDanNop"];
            this.soBanChinhHienCo = _data["soBanChinhHienCo"];
            this.soBanSaoHienCo = _data["soBanSaoHienCo"];
            this.maTinh = _data["maTinh"];
            this.idHoSoDVC = _data["idHoSoDVC"];
            this.idFileDinhKem = _data["idFileDinhKem"];
            this.tenGiayTo = _data["tenGiayTo"];
            this.contentType = _data["contentType"];
            this.dataFile = _data["dataFile"];
            this.dataFileBase64 = _data["dataFileBase64"];
        }
    }

    static fromJS(data: any): HoSoLoaiGiayToFileDinhKemViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new HoSoLoaiGiayToFileDinhKemViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idHoSo"] = this.idHoSo;
        data["idThuTucLoaiGiayTo"] = this.idThuTucLoaiGiayTo;
        data["tenFile"] = this.tenFile;
        data["moTa"] = this.moTa;
        data["link"] = this.link;
        data["laNguoiDanNop"] = this.laNguoiDanNop;
        data["soBanChinhHienCo"] = this.soBanChinhHienCo;
        data["soBanSaoHienCo"] = this.soBanSaoHienCo;
        data["maTinh"] = this.maTinh;
        data["idHoSoDVC"] = this.idHoSoDVC;
        data["idFileDinhKem"] = this.idFileDinhKem;
        data["tenGiayTo"] = this.tenGiayTo;
        data["contentType"] = this.contentType;
        data["dataFile"] = this.dataFile;
        data["dataFileBase64"] = this.dataFileBase64;
        return data; 
    }
}

export interface IHoSoLoaiGiayToFileDinhKemViewModel {
    id?: string | undefined;
    idHoSo?: string | undefined;
    idThuTucLoaiGiayTo?: string | undefined;
    tenFile?: string | undefined;
    moTa?: string | undefined;
    link?: string | undefined;
    laNguoiDanNop?: number;
    soBanChinhHienCo?: number;
    soBanSaoHienCo?: number;
    maTinh?: string | undefined;
    idHoSoDVC?: string | undefined;
    idFileDinhKem?: string | undefined;
    tenGiayTo?: string | undefined;
    contentType?: string | undefined;
    dataFile?: string | undefined;
    dataFileBase64?: string | undefined;
}

export class DVCFileDinhKemViewModel extends HoSoLoaiGiayToFileDinhKemViewModel implements IDVCFileDinhKemViewModel {

    constructor(data?: IDVCFileDinhKemViewModel) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): DVCFileDinhKemViewModel {
        data = typeof data === 'object' ? data : {};
        let result = new DVCFileDinhKemViewModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IDVCFileDinhKemViewModel extends IHoSoLoaiGiayToFileDinhKemViewModel {
}

export class ApiResultOfIListOfDVCHoSoTiepNhan implements IApiResultOfIListOfDVCHoSoTiepNhan {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCHoSoTiepNhan[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDVCHoSoTiepNhan) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCHoSoTiepNhan.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDVCHoSoTiepNhan {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDVCHoSoTiepNhan();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDVCHoSoTiepNhan {
    isError?: boolean;
    message?: string | undefined;
    data?: DVCHoSoTiepNhan[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DVCHoSoTiepNhan implements IDVCHoSoTiepNhan {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiThuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    idHoSoDVC?: string | undefined;
    maTinh?: string | undefined;
    idDvcRawData?: string | undefined;

    constructor(data?: IDVCHoSoTiepNhan) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.idLoaiHoSo = _data["idLoaiHoSo"];
            this.idThuTuc = _data["idThuTuc"];
            this.maHoSo = _data["maHoSo"];
            this.soBienNhan = _data["soBienNhan"];
            this.moTa = _data["moTa"];
            this.nguoiNop = _data["nguoiNop"];
            this.chuHoSo = _data["chuHoSo"];
            this.idLoaiGiayToTuyThan = _data["idLoaiGiayToTuyThan"];
            this.soGiayToTuyThan = _data["soGiayToTuyThan"];
            this.diaChi = _data["diaChi"];
            this.dienThoai = _data["dienThoai"];
            this.email = _data["email"];
            this.ngayNhan = _data["ngayNhan"] ? new Date(_data["ngayNhan"].toString()) : <any>undefined;
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            this.idTrangThaiHoSo = _data["idTrangThaiHoSo"];
            this.idDVHC = _data["idDVHC"];
            this.idTrangThaiXuLy = _data["idTrangThaiXuLy"];
            this.idNguoiThuLy = _data["idNguoiThuLy"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idQuyTrinh = _data["idQuyTrinh"];
            this.idChiNhanhVPDK = _data["idChiNhanhVPDK"];
            this.ngayThucTra = _data["ngayThucTra"] ? new Date(_data["ngayThucTra"].toString()) : <any>undefined;
            this.idActivitiProcessInstances = _data["idActivitiProcessInstances"];
            this.idHoSoDVC = _data["idHoSoDVC"];
            this.maTinh = _data["maTinh"];
            this.idDvcRawData = _data["idDvcRawData"];
        }
    }

    static fromJS(data: any): DVCHoSoTiepNhan {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoTiepNhan();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["idLoaiHoSo"] = this.idLoaiHoSo;
        data["idThuTuc"] = this.idThuTuc;
        data["maHoSo"] = this.maHoSo;
        data["soBienNhan"] = this.soBienNhan;
        data["moTa"] = this.moTa;
        data["nguoiNop"] = this.nguoiNop;
        data["chuHoSo"] = this.chuHoSo;
        data["idLoaiGiayToTuyThan"] = this.idLoaiGiayToTuyThan;
        data["soGiayToTuyThan"] = this.soGiayToTuyThan;
        data["diaChi"] = this.diaChi;
        data["dienThoai"] = this.dienThoai;
        data["email"] = this.email;
        data["ngayNhan"] = this.ngayNhan ? this.ngayNhan.toISOString() : <any>undefined;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        data["idTrangThaiHoSo"] = this.idTrangThaiHoSo;
        data["idDVHC"] = this.idDVHC;
        data["idTrangThaiXuLy"] = this.idTrangThaiXuLy;
        data["idNguoiThuLy"] = this.idNguoiThuLy;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idQuyTrinh"] = this.idQuyTrinh;
        data["idChiNhanhVPDK"] = this.idChiNhanhVPDK;
        data["ngayThucTra"] = this.ngayThucTra ? this.ngayThucTra.toISOString() : <any>undefined;
        data["idActivitiProcessInstances"] = this.idActivitiProcessInstances;
        data["idHoSoDVC"] = this.idHoSoDVC;
        data["maTinh"] = this.maTinh;
        data["idDvcRawData"] = this.idDvcRawData;
        return data; 
    }
}

export interface IDVCHoSoTiepNhan {
    id?: string | undefined;
    idLoaiHoSo?: number;
    idThuTuc?: string | undefined;
    maHoSo?: string | undefined;
    soBienNhan?: string | undefined;
    moTa?: string | undefined;
    nguoiNop?: string | undefined;
    chuHoSo?: string | undefined;
    idLoaiGiayToTuyThan?: number;
    soGiayToTuyThan?: string | undefined;
    diaChi?: string | undefined;
    dienThoai?: string | undefined;
    email?: string | undefined;
    ngayNhan?: Date;
    ngayHenTra?: Date;
    idTrangThaiHoSo?: number;
    idDVHC?: string | undefined;
    idTrangThaiXuLy?: number;
    idNguoiThuLy?: string | undefined;
    idLinhVuc?: string | undefined;
    idQuyTrinh?: string | undefined;
    idChiNhanhVPDK?: string | undefined;
    ngayThucTra?: Date | undefined;
    idActivitiProcessInstances?: string | undefined;
    idHoSoDVC?: string | undefined;
    maTinh?: string | undefined;
    idDvcRawData?: string | undefined;
}

export class DVCHoSoTiepNhanCommand implements IDVCHoSoTiepNhanCommand {
    isNeedToAddGMT?: boolean;
    data?: DVCHoSoTiepNhan[] | undefined;

    constructor(data?: IDVCHoSoTiepNhanCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isNeedToAddGMT = _data["isNeedToAddGMT"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DVCHoSoTiepNhan.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DVCHoSoTiepNhanCommand {
        data = typeof data === 'object' ? data : {};
        let result = new DVCHoSoTiepNhanCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isNeedToAddGMT"] = this.isNeedToAddGMT;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDVCHoSoTiepNhanCommand {
    isNeedToAddGMT?: boolean;
    data?: DVCHoSoTiepNhan[] | undefined;
}

export class AddDvcHoSoRawDataCommand implements IAddDvcHoSoRawDataCommand {
    maHoSo?: string | undefined;
    hoSoChiTiet?: string | undefined;
    thanhPhanHoSo?: string | undefined;
    ghiChu?: string | undefined;

    constructor(data?: IAddDvcHoSoRawDataCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maHoSo = _data["maHoSo"];
            this.hoSoChiTiet = _data["hoSoChiTiet"];
            this.thanhPhanHoSo = _data["thanhPhanHoSo"];
            this.ghiChu = _data["ghiChu"];
        }
    }

    static fromJS(data: any): AddDvcHoSoRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maHoSo"] = this.maHoSo;
        data["hoSoChiTiet"] = this.hoSoChiTiet;
        data["thanhPhanHoSo"] = this.thanhPhanHoSo;
        data["ghiChu"] = this.ghiChu;
        return data; 
    }
}

export interface IAddDvcHoSoRawDataCommand {
    maHoSo?: string | undefined;
    hoSoChiTiet?: string | undefined;
    thanhPhanHoSo?: string | undefined;
    ghiChu?: string | undefined;
}

export class AddDvcHoSoQnmRawDataCommand extends AddDvcHoSoRawDataCommand implements IAddDvcHoSoQnmRawDataCommand {

    constructor(data?: IAddDvcHoSoQnmRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): AddDvcHoSoQnmRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoQnmRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoQnmRawDataCommand extends IAddDvcHoSoRawDataCommand {
}

export class CapNhatDvcHoSoQnmRawDataCommand extends AddDvcHoSoRawDataCommand implements ICapNhatDvcHoSoQnmRawDataCommand {

    constructor(data?: ICapNhatDvcHoSoQnmRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): CapNhatDvcHoSoQnmRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatDvcHoSoQnmRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface ICapNhatDvcHoSoQnmRawDataCommand extends IAddDvcHoSoRawDataCommand {
}

export class NhanThongBaoThueDatQNMCommandResponse implements INhanThongBaoThueDatQNMCommandResponse {
    error_code?: number;
    message?: string | undefined;

    constructor(data?: INhanThongBaoThueDatQNMCommandResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.error_code = _data["error_code"];
            this.message = _data["message"];
        }
    }

    static fromJS(data: any): NhanThongBaoThueDatQNMCommandResponse {
        data = typeof data === 'object' ? data : {};
        let result = new NhanThongBaoThueDatQNMCommandResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["error_code"] = this.error_code;
        data["message"] = this.message;
        return data; 
    }
}

export interface INhanThongBaoThueDatQNMCommandResponse {
    error_code?: number;
    message?: string | undefined;
}

export class NhanThongBaoThueDatQNMCommand implements INhanThongBaoThueDatQNMCommand {
    service?: string | undefined;
    ngay?: string | undefined;
    isUpdating?: string | undefined;
    data?: ThongBaoThueData | undefined;

    constructor(data?: INhanThongBaoThueDatQNMCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.service = _data["service"];
            this.ngay = _data["ngay"];
            this.isUpdating = _data["isUpdating"];
            this.data = _data["data"] ? ThongBaoThueData.fromJS(_data["data"]) : <any>undefined;
        }
    }

    static fromJS(data: any): NhanThongBaoThueDatQNMCommand {
        data = typeof data === 'object' ? data : {};
        let result = new NhanThongBaoThueDatQNMCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["service"] = this.service;
        data["ngay"] = this.ngay;
        data["isUpdating"] = this.isUpdating;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        return data; 
    }
}

export interface INhanThongBaoThueDatQNMCommand {
    service?: string | undefined;
    ngay?: string | undefined;
    isUpdating?: string | undefined;
    data?: ThongBaoThueData | undefined;
}

export class ThongBaoThueData implements IThongBaoThueData {
    fileThongBaoThue?: string | undefined;

    constructor(data?: IThongBaoThueData) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.fileThongBaoThue = _data["fileThongBaoThue"];
        }
    }

    static fromJS(data: any): ThongBaoThueData {
        data = typeof data === 'object' ? data : {};
        let result = new ThongBaoThueData();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["fileThongBaoThue"] = this.fileThongBaoThue;
        return data; 
    }
}

export interface IThongBaoThueData {
    fileThongBaoThue?: string | undefined;
}

export class NhanChungTuThueDatQNMCommandResponse implements INhanChungTuThueDatQNMCommandResponse {
    error_code?: number;
    message?: string | undefined;

    constructor(data?: INhanChungTuThueDatQNMCommandResponse) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.error_code = _data["error_code"];
            this.message = _data["message"];
        }
    }

    static fromJS(data: any): NhanChungTuThueDatQNMCommandResponse {
        data = typeof data === 'object' ? data : {};
        let result = new NhanChungTuThueDatQNMCommandResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["error_code"] = this.error_code;
        data["message"] = this.message;
        return data; 
    }
}

export interface INhanChungTuThueDatQNMCommandResponse {
    error_code?: number;
    message?: string | undefined;
}

export class NhanChungTuThueDatQNMCommand implements INhanChungTuThueDatQNMCommand {
    service?: string | undefined;
    isUpdating?: string | undefined;
    data?: ThongTinChungTu | undefined;

    constructor(data?: INhanChungTuThueDatQNMCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.service = _data["service"];
            this.isUpdating = _data["isUpdating"];
            this.data = _data["data"] ? ThongTinChungTu.fromJS(_data["data"]) : <any>undefined;
        }
    }

    static fromJS(data: any): NhanChungTuThueDatQNMCommand {
        data = typeof data === 'object' ? data : {};
        let result = new NhanChungTuThueDatQNMCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["service"] = this.service;
        data["isUpdating"] = this.isUpdating;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        return data; 
    }
}

export interface INhanChungTuThueDatQNMCommand {
    service?: string | undefined;
    isUpdating?: string | undefined;
    data?: ThongTinChungTu | undefined;
}

export class ThongTinChungTu implements IThongTinChungTu {
    maHoSo?: string | undefined;
    hoTenNguoiNopTien?: string | undefined;
    soCMTNguoiNopTien?: string | undefined;
    maSoThue?: string | undefined;
    diaChiNguoiNopTien?: string | undefined;
    tinhNguoiNopTien?: string | undefined;
    huyenNguoiNopTien?: string | undefined;
    xaNguoiNopTien?: string | undefined;
    thongTinThanhToan?: ThongTinThanhToan | undefined;
    urlFileChungTu?: string | undefined;

    constructor(data?: IThongTinChungTu) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maHoSo = _data["maHoSo"];
            this.hoTenNguoiNopTien = _data["hoTenNguoiNopTien"];
            this.soCMTNguoiNopTien = _data["soCMTNguoiNopTien"];
            this.maSoThue = _data["maSoThue"];
            this.diaChiNguoiNopTien = _data["diaChiNguoiNopTien"];
            this.tinhNguoiNopTien = _data["tinhNguoiNopTien"];
            this.huyenNguoiNopTien = _data["huyenNguoiNopTien"];
            this.xaNguoiNopTien = _data["xaNguoiNopTien"];
            this.thongTinThanhToan = _data["thongTinThanhToan"] ? ThongTinThanhToan.fromJS(_data["thongTinThanhToan"]) : <any>undefined;
            this.urlFileChungTu = _data["urlFileChungTu"];
        }
    }

    static fromJS(data: any): ThongTinChungTu {
        data = typeof data === 'object' ? data : {};
        let result = new ThongTinChungTu();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maHoSo"] = this.maHoSo;
        data["hoTenNguoiNopTien"] = this.hoTenNguoiNopTien;
        data["soCMTNguoiNopTien"] = this.soCMTNguoiNopTien;
        data["maSoThue"] = this.maSoThue;
        data["diaChiNguoiNopTien"] = this.diaChiNguoiNopTien;
        data["tinhNguoiNopTien"] = this.tinhNguoiNopTien;
        data["huyenNguoiNopTien"] = this.huyenNguoiNopTien;
        data["xaNguoiNopTien"] = this.xaNguoiNopTien;
        data["thongTinThanhToan"] = this.thongTinThanhToan ? this.thongTinThanhToan.toJSON() : <any>undefined;
        data["urlFileChungTu"] = this.urlFileChungTu;
        return data; 
    }
}

export interface IThongTinChungTu {
    maHoSo?: string | undefined;
    hoTenNguoiNopTien?: string | undefined;
    soCMTNguoiNopTien?: string | undefined;
    maSoThue?: string | undefined;
    diaChiNguoiNopTien?: string | undefined;
    tinhNguoiNopTien?: string | undefined;
    huyenNguoiNopTien?: string | undefined;
    xaNguoiNopTien?: string | undefined;
    thongTinThanhToan?: ThongTinThanhToan | undefined;
    urlFileChungTu?: string | undefined;
}

export class ThongTinThanhToan implements IThongTinThanhToan {
    maThongBaoThue?: string | undefined;
    thoiGianThanhToan?: string | undefined;
    soTien?: string | undefined;
    noiDungThanhToan?: string | undefined;
    trangThaiThanhToan?: string | undefined;

    constructor(data?: IThongTinThanhToan) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maThongBaoThue = _data["maThongBaoThue"];
            this.thoiGianThanhToan = _data["thoiGianThanhToan"];
            this.soTien = _data["soTien"];
            this.noiDungThanhToan = _data["noiDungThanhToan"];
            this.trangThaiThanhToan = _data["trangThaiThanhToan"];
        }
    }

    static fromJS(data: any): ThongTinThanhToan {
        data = typeof data === 'object' ? data : {};
        let result = new ThongTinThanhToan();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maThongBaoThue"] = this.maThongBaoThue;
        data["thoiGianThanhToan"] = this.thoiGianThanhToan;
        data["soTien"] = this.soTien;
        data["noiDungThanhToan"] = this.noiDungThanhToan;
        data["trangThaiThanhToan"] = this.trangThaiThanhToan;
        return data; 
    }
}

export interface IThongTinThanhToan {
    maThongBaoThue?: string | undefined;
    thoiGianThanhToan?: string | undefined;
    soTien?: string | undefined;
    noiDungThanhToan?: string | undefined;
    trangThaiThanhToan?: string | undefined;
}

export class DongBoHoSoTuDvcQuery implements IDongBoHoSoTuDvcQuery {
    tuNgay?: Date;
    denNgay?: Date;
    idDonviTiepNhan?: string | undefined;
    idNguoiTiepNhan?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;

    constructor(data?: IDongBoHoSoTuDvcQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tuNgay = _data["tuNgay"] ? new Date(_data["tuNgay"].toString()) : <any>undefined;
            this.denNgay = _data["denNgay"] ? new Date(_data["denNgay"].toString()) : <any>undefined;
            this.idDonviTiepNhan = _data["idDonviTiepNhan"];
            this.idNguoiTiepNhan = _data["idNguoiTiepNhan"];
            this.idLinhVuc = _data["idLinhVuc"];
            this.idThuTuc = _data["idThuTuc"];
        }
    }

    static fromJS(data: any): DongBoHoSoTuDvcQuery {
        data = typeof data === 'object' ? data : {};
        let result = new DongBoHoSoTuDvcQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tuNgay"] = this.tuNgay ? this.tuNgay.toISOString() : <any>undefined;
        data["denNgay"] = this.denNgay ? this.denNgay.toISOString() : <any>undefined;
        data["idDonviTiepNhan"] = this.idDonviTiepNhan;
        data["idNguoiTiepNhan"] = this.idNguoiTiepNhan;
        data["idLinhVuc"] = this.idLinhVuc;
        data["idThuTuc"] = this.idThuTuc;
        return data; 
    }
}

export interface IDongBoHoSoTuDvcQuery {
    tuNgay?: Date;
    denNgay?: Date;
    idDonviTiepNhan?: string | undefined;
    idNguoiTiepNhan?: string | undefined;
    idLinhVuc?: string | undefined;
    idThuTuc?: string | undefined;
}

export class UpdatePhiLePhiHoSoQNMCommand implements IUpdatePhiLePhiHoSoQNMCommand {
    maHoSo?: string | undefined;
    soTien?: number | undefined;

    constructor(data?: IUpdatePhiLePhiHoSoQNMCommand) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maHoSo = _data["maHoSo"];
            this.soTien = _data["soTien"];
        }
    }

    static fromJS(data: any): UpdatePhiLePhiHoSoQNMCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdatePhiLePhiHoSoQNMCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maHoSo"] = this.maHoSo;
        data["soTien"] = this.soTien;
        return data; 
    }
}

export interface IUpdatePhiLePhiHoSoQNMCommand {
    maHoSo?: string | undefined;
    soTien?: number | undefined;
}

export class ApiResultOfApiDanhMucYeuCauBoSungQNM implements IApiResultOfApiDanhMucYeuCauBoSungQNM {
    isError?: boolean;
    message?: string | undefined;
    data?: ApiDanhMucYeuCauBoSungQNM | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfApiDanhMucYeuCauBoSungQNM) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? ApiDanhMucYeuCauBoSungQNM.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfApiDanhMucYeuCauBoSungQNM {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfApiDanhMucYeuCauBoSungQNM();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfApiDanhMucYeuCauBoSungQNM {
    isError?: boolean;
    message?: string | undefined;
    data?: ApiDanhMucYeuCauBoSungQNM | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class ApiDanhMucYeuCauBoSungQNM implements IApiDanhMucYeuCauBoSungQNM {
    total?: number;
    items?: DanhMucYeuCauBoSungQNM[] | undefined;

    constructor(data?: IApiDanhMucYeuCauBoSungQNM) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.total = _data["total"];
            if (Array.isArray(_data["items"])) {
                this.items = [] as any;
                for (let item of _data["items"])
                    this.items!.push(DanhMucYeuCauBoSungQNM.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiDanhMucYeuCauBoSungQNM {
        data = typeof data === 'object' ? data : {};
        let result = new ApiDanhMucYeuCauBoSungQNM();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["total"] = this.total;
        if (Array.isArray(this.items)) {
            data["items"] = [];
            for (let item of this.items)
                data["items"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiDanhMucYeuCauBoSungQNM {
    total?: number;
    items?: DanhMucYeuCauBoSungQNM[] | undefined;
}

export class DanhMucYeuCauBoSungQNM implements IDanhMucYeuCauBoSungQNM {
    uuid?: string | undefined;
    organId?: string | undefined;
    procedureID?: string | undefined;
    fieldName?: string | undefined;
    brief?: string | undefined;
    system?: boolean;

    constructor(data?: IDanhMucYeuCauBoSungQNM) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.uuid = _data["uuid"];
            this.organId = _data["organId"];
            this.procedureID = _data["procedureID"];
            this.fieldName = _data["fieldName"];
            this.brief = _data["brief"];
            this.system = _data["system"];
        }
    }

    static fromJS(data: any): DanhMucYeuCauBoSungQNM {
        data = typeof data === 'object' ? data : {};
        let result = new DanhMucYeuCauBoSungQNM();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["uuid"] = this.uuid;
        data["organId"] = this.organId;
        data["procedureID"] = this.procedureID;
        data["fieldName"] = this.fieldName;
        data["brief"] = this.brief;
        data["system"] = this.system;
        return data; 
    }
}

export interface IDanhMucYeuCauBoSungQNM {
    uuid?: string | undefined;
    organId?: string | undefined;
    procedureID?: string | undefined;
    fieldName?: string | undefined;
    brief?: string | undefined;
    system?: boolean;
}

export class ChuyenLaiKetThucHoSoSangDVCCommand extends ChuyenBuocXuLyCommand implements IChuyenLaiKetThucHoSoSangDVCCommand {

    constructor(data?: IChuyenLaiKetThucHoSoSangDVCCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): ChuyenLaiKetThucHoSoSangDVCCommand {
        data = typeof data === 'object' ? data : {};
        let result = new ChuyenLaiKetThucHoSoSangDVCCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IChuyenLaiKetThucHoSoSangDVCCommand extends IChuyenBuocXuLyCommand {
}

export class AddDvcHoSoIGateV1RawDataCommand extends DVCHoSoRequiredViewModel implements IAddDvcHoSoIGateV1RawDataCommand {

    constructor(data?: IAddDvcHoSoIGateV1RawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): AddDvcHoSoIGateV1RawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoIGateV1RawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoIGateV1RawDataCommand extends IDVCHoSoRequiredViewModel {
}

export class UpdateDvcHoSoIGateV1RawDataCommand extends UpdateDvcHoSoRawDataCommand implements IUpdateDvcHoSoIGateV1RawDataCommand {

    constructor(data?: IUpdateDvcHoSoIGateV1RawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): UpdateDvcHoSoIGateV1RawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDvcHoSoIGateV1RawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IUpdateDvcHoSoIGateV1RawDataCommand extends IUpdateDvcHoSoRawDataCommand {
}

export class ApiResultOfDvcIGateV1ThongTinHoSoModel implements IApiResultOfDvcIGateV1ThongTinHoSoModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcIGateV1ThongTinHoSoModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfDvcIGateV1ThongTinHoSoModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            this.data = _data["data"] ? DvcIGateV1ThongTinHoSoModel.fromJS(_data["data"]) : <any>undefined;
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfDvcIGateV1ThongTinHoSoModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfDvcIGateV1ThongTinHoSoModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        data["data"] = this.data ? this.data.toJSON() : <any>undefined;
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfDvcIGateV1ThongTinHoSoModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcIGateV1ThongTinHoSoModel | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DvcIGateV1ThongTinHoSoModel implements IDvcIGateV1ThongTinHoSoModel {
    ngayKetThuc?: Date | undefined;
    trangThaiHoSo?: TrangThaiHoSoDvc;
    ngayHenTra?: Date | undefined;
    danhSachGiayToDinhKem?: GiayToDinhKemModel[] | undefined;
    thongTinBuocHoSo?: BuocHoSoModel[] | undefined;
    thongTinBuocHienTai?: BuocHoSoHienTaiModel[] | undefined;

    constructor(data?: IDvcIGateV1ThongTinHoSoModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.ngayKetThuc = _data["ngayKetThuc"] ? new Date(_data["ngayKetThuc"].toString()) : <any>undefined;
            this.trangThaiHoSo = _data["trangThaiHoSo"];
            this.ngayHenTra = _data["ngayHenTra"] ? new Date(_data["ngayHenTra"].toString()) : <any>undefined;
            if (Array.isArray(_data["danhSachGiayToDinhKem"])) {
                this.danhSachGiayToDinhKem = [] as any;
                for (let item of _data["danhSachGiayToDinhKem"])
                    this.danhSachGiayToDinhKem!.push(GiayToDinhKemModel.fromJS(item));
            }
            if (Array.isArray(_data["thongTinBuocHoSo"])) {
                this.thongTinBuocHoSo = [] as any;
                for (let item of _data["thongTinBuocHoSo"])
                    this.thongTinBuocHoSo!.push(BuocHoSoModel.fromJS(item));
            }
            if (Array.isArray(_data["thongTinBuocHienTai"])) {
                this.thongTinBuocHienTai = [] as any;
                for (let item of _data["thongTinBuocHienTai"])
                    this.thongTinBuocHienTai!.push(BuocHoSoHienTaiModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): DvcIGateV1ThongTinHoSoModel {
        data = typeof data === 'object' ? data : {};
        let result = new DvcIGateV1ThongTinHoSoModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["ngayKetThuc"] = this.ngayKetThuc ? this.ngayKetThuc.toISOString() : <any>undefined;
        data["trangThaiHoSo"] = this.trangThaiHoSo;
        data["ngayHenTra"] = this.ngayHenTra ? this.ngayHenTra.toISOString() : <any>undefined;
        if (Array.isArray(this.danhSachGiayToDinhKem)) {
            data["danhSachGiayToDinhKem"] = [];
            for (let item of this.danhSachGiayToDinhKem)
                data["danhSachGiayToDinhKem"].push(item.toJSON());
        }
        if (Array.isArray(this.thongTinBuocHoSo)) {
            data["thongTinBuocHoSo"] = [];
            for (let item of this.thongTinBuocHoSo)
                data["thongTinBuocHoSo"].push(item.toJSON());
        }
        if (Array.isArray(this.thongTinBuocHienTai)) {
            data["thongTinBuocHienTai"] = [];
            for (let item of this.thongTinBuocHienTai)
                data["thongTinBuocHienTai"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IDvcIGateV1ThongTinHoSoModel {
    ngayKetThuc?: Date | undefined;
    trangThaiHoSo?: TrangThaiHoSoDvc;
    ngayHenTra?: Date | undefined;
    danhSachGiayToDinhKem?: GiayToDinhKemModel[] | undefined;
    thongTinBuocHoSo?: BuocHoSoModel[] | undefined;
    thongTinBuocHienTai?: BuocHoSoHienTaiModel[] | undefined;
}

export enum TrangThaiHoSoDvc {
    DangXuLy = 1,
    Huy = 4,
    TamDung = 5,
    KetThucXuLy = 100,
    TraKetQua = 200,
}

export class GiayToDinhKemModel implements IGiayToDinhKemModel {
    tenGiayTo?: string | undefined;
    fileName?: string | undefined;
    linkUrl?: string | undefined;

    constructor(data?: IGiayToDinhKemModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tenGiayTo = _data["tenGiayTo"];
            this.fileName = _data["fileName"];
            this.linkUrl = _data["linkUrl"];
        }
    }

    static fromJS(data: any): GiayToDinhKemModel {
        data = typeof data === 'object' ? data : {};
        let result = new GiayToDinhKemModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tenGiayTo"] = this.tenGiayTo;
        data["fileName"] = this.fileName;
        data["linkUrl"] = this.linkUrl;
        return data; 
    }
}

export interface IGiayToDinhKemModel {
    tenGiayTo?: string | undefined;
    fileName?: string | undefined;
    linkUrl?: string | undefined;
}

export class BuocHoSoModel implements IBuocHoSoModel {
    maQuyTrinh?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    ngayBatDauXuLy?: Date | undefined;
    ngayKetThucXuLy?: Date | undefined;
    ngayKetThucDungHan?: Date;
    maNguoiXuLy?: string | undefined;
    danhSachGiayToDinhKem?: GiayToDinhKemModel[] | undefined;

    constructor(data?: IBuocHoSoModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.ngayBatDauXuLy = _data["ngayBatDauXuLy"] ? new Date(_data["ngayBatDauXuLy"].toString()) : <any>undefined;
            this.ngayKetThucXuLy = _data["ngayKetThucXuLy"] ? new Date(_data["ngayKetThucXuLy"].toString()) : <any>undefined;
            this.ngayKetThucDungHan = _data["ngayKetThucDungHan"] ? new Date(_data["ngayKetThucDungHan"].toString()) : <any>undefined;
            this.maNguoiXuLy = _data["maNguoiXuLy"];
            if (Array.isArray(_data["danhSachGiayToDinhKem"])) {
                this.danhSachGiayToDinhKem = [] as any;
                for (let item of _data["danhSachGiayToDinhKem"])
                    this.danhSachGiayToDinhKem!.push(GiayToDinhKemModel.fromJS(item));
            }
        }
    }

    static fromJS(data: any): BuocHoSoModel {
        data = typeof data === 'object' ? data : {};
        let result = new BuocHoSoModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["ngayBatDauXuLy"] = this.ngayBatDauXuLy ? this.ngayBatDauXuLy.toISOString() : <any>undefined;
        data["ngayKetThucXuLy"] = this.ngayKetThucXuLy ? this.ngayKetThucXuLy.toISOString() : <any>undefined;
        data["ngayKetThucDungHan"] = this.ngayKetThucDungHan ? this.ngayKetThucDungHan.toISOString() : <any>undefined;
        data["maNguoiXuLy"] = this.maNguoiXuLy;
        if (Array.isArray(this.danhSachGiayToDinhKem)) {
            data["danhSachGiayToDinhKem"] = [];
            for (let item of this.danhSachGiayToDinhKem)
                data["danhSachGiayToDinhKem"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IBuocHoSoModel {
    maQuyTrinh?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    ngayBatDauXuLy?: Date | undefined;
    ngayKetThucXuLy?: Date | undefined;
    ngayKetThucDungHan?: Date;
    maNguoiXuLy?: string | undefined;
    danhSachGiayToDinhKem?: GiayToDinhKemModel[] | undefined;
}

export class BuocHoSoHienTaiModel implements IBuocHoSoHienTaiModel {
    maQuyTrinh?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    ngayBatDauXuLy?: Date | undefined;
    ngayKetThucXuLy?: Date | undefined;
    ngayKetThucDungHan?: Date;
    maNguoiXuLy?: string | undefined;
    maNguoiNhan?: string | undefined;

    constructor(data?: IBuocHoSoHienTaiModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.maQuyTrinh = _data["maQuyTrinh"];
            this.maBuoc = _data["maBuoc"];
            this.tenBuoc = _data["tenBuoc"];
            this.ngayBatDauXuLy = _data["ngayBatDauXuLy"] ? new Date(_data["ngayBatDauXuLy"].toString()) : <any>undefined;
            this.ngayKetThucXuLy = _data["ngayKetThucXuLy"] ? new Date(_data["ngayKetThucXuLy"].toString()) : <any>undefined;
            this.ngayKetThucDungHan = _data["ngayKetThucDungHan"] ? new Date(_data["ngayKetThucDungHan"].toString()) : <any>undefined;
            this.maNguoiXuLy = _data["maNguoiXuLy"];
            this.maNguoiNhan = _data["maNguoiNhan"];
        }
    }

    static fromJS(data: any): BuocHoSoHienTaiModel {
        data = typeof data === 'object' ? data : {};
        let result = new BuocHoSoHienTaiModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["maQuyTrinh"] = this.maQuyTrinh;
        data["maBuoc"] = this.maBuoc;
        data["tenBuoc"] = this.tenBuoc;
        data["ngayBatDauXuLy"] = this.ngayBatDauXuLy ? this.ngayBatDauXuLy.toISOString() : <any>undefined;
        data["ngayKetThucXuLy"] = this.ngayKetThucXuLy ? this.ngayKetThucXuLy.toISOString() : <any>undefined;
        data["ngayKetThucDungHan"] = this.ngayKetThucDungHan ? this.ngayKetThucDungHan.toISOString() : <any>undefined;
        data["maNguoiXuLy"] = this.maNguoiXuLy;
        data["maNguoiNhan"] = this.maNguoiNhan;
        return data; 
    }
}

export interface IBuocHoSoHienTaiModel {
    maQuyTrinh?: string | undefined;
    maBuoc?: string | undefined;
    tenBuoc?: string | undefined;
    ngayBatDauXuLy?: Date | undefined;
    ngayKetThucXuLy?: Date | undefined;
    ngayKetThucDungHan?: Date;
    maNguoiXuLy?: string | undefined;
    maNguoiNhan?: string | undefined;
}

export class GetThongTinHoSoQuery implements IGetThongTinHoSoQuery {
    soBienNhan?: string | undefined;

    constructor(data?: IGetThongTinHoSoQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soBienNhan = _data["soBienNhan"];
        }
    }

    static fromJS(data: any): GetThongTinHoSoQuery {
        data = typeof data === 'object' ? data : {};
        let result = new GetThongTinHoSoQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soBienNhan"] = this.soBienNhan;
        return data; 
    }
}

export interface IGetThongTinHoSoQuery {
    soBienNhan?: string | undefined;
}

export class AddDvcHoSoIGateV1PlanBRawDataCommand extends DVCHoSoRequiredViewModel implements IAddDvcHoSoIGateV1PlanBRawDataCommand {

    constructor(data?: IAddDvcHoSoIGateV1PlanBRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): AddDvcHoSoIGateV1PlanBRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoIGateV1PlanBRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoIGateV1PlanBRawDataCommand extends IDVCHoSoRequiredViewModel {
}

export class ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel implements IApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcIGateV1InPhieuKiemSoatModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;

    constructor(data?: IApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.isError = _data["isError"];
            this.message = _data["message"];
            if (Array.isArray(_data["data"])) {
                this.data = [] as any;
                for (let item of _data["data"])
                    this.data!.push(DvcIGateV1InPhieuKiemSoatModel.fromJS(item));
            }
            this.code = _data["code"];
            if (Array.isArray(_data["errors"])) {
                this.errors = [] as any;
                for (let item of _data["errors"])
                    this.errors!.push(ValidationError.fromJS(item));
            }
        }
    }

    static fromJS(data: any): ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["isError"] = this.isError;
        data["message"] = this.message;
        if (Array.isArray(this.data)) {
            data["data"] = [];
            for (let item of this.data)
                data["data"].push(item.toJSON());
        }
        data["code"] = this.code;
        if (Array.isArray(this.errors)) {
            data["errors"] = [];
            for (let item of this.errors)
                data["errors"].push(item.toJSON());
        }
        return data; 
    }
}

export interface IApiResultOfIListOfDvcIGateV1InPhieuKiemSoatModel {
    isError?: boolean;
    message?: string | undefined;
    data?: DvcIGateV1InPhieuKiemSoatModel[] | undefined;
    code?: ApiCode;
    errors?: ValidationError[] | undefined;
}

export class DvcIGateV1InPhieuKiemSoatModel implements IDvcIGateV1InPhieuKiemSoatModel {
    soThuTuBuoc?: string | undefined;
    maBuocQTTT?: string | undefined;
    gioQDCongViecQTTT?: string | undefined;
    tenDonViGiao?: string | undefined;
    tenDonViNhan?: string | undefined;

    constructor(data?: IDvcIGateV1InPhieuKiemSoatModel) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.soThuTuBuoc = _data["soThuTuBuoc"];
            this.maBuocQTTT = _data["maBuocQTTT"];
            this.gioQDCongViecQTTT = _data["gioQDCongViecQTTT"];
            this.tenDonViGiao = _data["tenDonViGiao"];
            this.tenDonViNhan = _data["tenDonViNhan"];
        }
    }

    static fromJS(data: any): DvcIGateV1InPhieuKiemSoatModel {
        data = typeof data === 'object' ? data : {};
        let result = new DvcIGateV1InPhieuKiemSoatModel();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["soThuTuBuoc"] = this.soThuTuBuoc;
        data["maBuocQTTT"] = this.maBuocQTTT;
        data["gioQDCongViecQTTT"] = this.gioQDCongViecQTTT;
        data["tenDonViGiao"] = this.tenDonViGiao;
        data["tenDonViNhan"] = this.tenDonViNhan;
        return data; 
    }
}

export interface IDvcIGateV1InPhieuKiemSoatModel {
    soThuTuBuoc?: string | undefined;
    maBuocQTTT?: string | undefined;
    gioQDCongViecQTTT?: string | undefined;
    tenDonViGiao?: string | undefined;
    tenDonViNhan?: string | undefined;
}

export class PhieuKiemSoatIlisQuery implements IPhieuKiemSoatIlisQuery {
    tinhId?: string | undefined;
    huyenId?: string | undefined;
    xaId?: string | undefined;
    maThuTuc?: string | undefined;
    maQuyTrinh?: string | undefined;

    constructor(data?: IPhieuKiemSoatIlisQuery) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.tinhId = _data["tinhId"];
            this.huyenId = _data["huyenId"];
            this.xaId = _data["xaId"];
            this.maThuTuc = _data["maThuTuc"];
            this.maQuyTrinh = _data["maQuyTrinh"];
        }
    }

    static fromJS(data: any): PhieuKiemSoatIlisQuery {
        data = typeof data === 'object' ? data : {};
        let result = new PhieuKiemSoatIlisQuery();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["tinhId"] = this.tinhId;
        data["huyenId"] = this.huyenId;
        data["xaId"] = this.xaId;
        data["maThuTuc"] = this.maThuTuc;
        data["maQuyTrinh"] = this.maQuyTrinh;
        return data; 
    }
}

export interface IPhieuKiemSoatIlisQuery {
    tinhId?: string | undefined;
    huyenId?: string | undefined;
    xaId?: string | undefined;
    maThuTuc?: string | undefined;
    maQuyTrinh?: string | undefined;
}

export class AddDvcHoSoIGateV2RawDataCommand extends DVCHoSoRequiredViewModel implements IAddDvcHoSoIGateV2RawDataCommand {

    constructor(data?: IAddDvcHoSoIGateV2RawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): AddDvcHoSoIGateV2RawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoIGateV2RawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoIGateV2RawDataCommand extends IDVCHoSoRequiredViewModel {
}

export class UpdateDvcHoSoIGateV2RawDataCommand extends UpdateDvcHoSoRawDataCommand implements IUpdateDvcHoSoIGateV2RawDataCommand {

    constructor(data?: IUpdateDvcHoSoIGateV2RawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): UpdateDvcHoSoIGateV2RawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDvcHoSoIGateV2RawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IUpdateDvcHoSoIGateV2RawDataCommand extends IUpdateDvcHoSoRawDataCommand {
}

export class CapNhatTrangThaiHoSoIGateV2Command extends CapNhatTrangThaiHoSoCommand implements ICapNhatTrangThaiHoSoIGateV2Command {

    constructor(data?: ICapNhatTrangThaiHoSoIGateV2Command) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): CapNhatTrangThaiHoSoIGateV2Command {
        data = typeof data === 'object' ? data : {};
        let result = new CapNhatTrangThaiHoSoIGateV2Command();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface ICapNhatTrangThaiHoSoIGateV2Command extends ICapNhatTrangThaiHoSoCommand {
}

export class AddDvcHoSoQuangNinhRawDataCommand extends DVCHoSoRequiredViewModel implements IAddDvcHoSoQuangNinhRawDataCommand {

    constructor(data?: IAddDvcHoSoQuangNinhRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): AddDvcHoSoQuangNinhRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new AddDvcHoSoQuangNinhRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IAddDvcHoSoQuangNinhRawDataCommand extends IDVCHoSoRequiredViewModel {
}

export class UpdateDvcHoSoQuangNinhRawDataCommand extends UpdateDvcHoSoRawDataCommand implements IUpdateDvcHoSoQuangNinhRawDataCommand {

    constructor(data?: IUpdateDvcHoSoQuangNinhRawDataCommand) {
        super(data);
    }

    init(_data?: any) {
        super.init(_data);
    }

    static fromJS(data: any): UpdateDvcHoSoQuangNinhRawDataCommand {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateDvcHoSoQuangNinhRawDataCommand();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        super.toJSON(data);
        return data; 
    }
}

export interface IUpdateDvcHoSoQuangNinhRawDataCommand extends IUpdateDvcHoSoRawDataCommand {
}

export interface FileParameter {
    data: any;
    fileName: string;
}

export interface FileResponse {
    data: Blob;
    status: number;
    fileName?: string;
    headers?: { [name: string]: any };
}

export class SwaggerException extends Error {
    message: string;
    status: number;
    response: string;
    headers: { [key: string]: any; };
    result: any;

    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {
        super();

        this.message = message;
        this.status = status;
        this.response = response;
        this.headers = headers;
        this.result = result;
    }

    protected isSwaggerException = true;

    static isSwaggerException(obj: any): obj is SwaggerException {
        return obj.isSwaggerException === true;
    }
}

function throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {
    if (result !== null && result !== undefined)
        return _observableThrow(result);
    else
        return _observableThrow(new SwaggerException(message, status, response, headers, null));
}

function blobToText(blob: any): Observable<string> {
    return new Observable<string>((observer: any) => {
        if (!blob) {
            observer.next("");
            observer.complete();
        } else {
            let reader = new FileReader();
            reader.onload = event => {
                observer.next((<any>event.target).result);
                observer.complete();
            };
            reader.readAsText(blob);
        }
    });
}